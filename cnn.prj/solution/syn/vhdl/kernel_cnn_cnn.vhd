-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_cnn_cnn is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_0_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce0 : OUT STD_LOGIC;
    input_0_we0 : OUT STD_LOGIC;
    input_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce1 : OUT STD_LOGIC;
    input_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address2 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce2 : OUT STD_LOGIC;
    input_0_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address3 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce3 : OUT STD_LOGIC;
    input_0_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address4 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce4 : OUT STD_LOGIC;
    input_0_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address5 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce5 : OUT STD_LOGIC;
    input_0_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address6 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce6 : OUT STD_LOGIC;
    input_0_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address7 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce7 : OUT STD_LOGIC;
    input_0_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address8 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce8 : OUT STD_LOGIC;
    input_0_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address9 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce9 : OUT STD_LOGIC;
    input_0_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address10 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce10 : OUT STD_LOGIC;
    input_0_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address11 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce11 : OUT STD_LOGIC;
    input_0_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address12 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce12 : OUT STD_LOGIC;
    input_0_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address13 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce13 : OUT STD_LOGIC;
    input_0_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address14 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce14 : OUT STD_LOGIC;
    input_0_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address15 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce15 : OUT STD_LOGIC;
    input_0_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address16 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_0_ce16 : OUT STD_LOGIC;
    input_0_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce0 : OUT STD_LOGIC;
    input_1_we0 : OUT STD_LOGIC;
    input_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce1 : OUT STD_LOGIC;
    input_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address2 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce2 : OUT STD_LOGIC;
    input_1_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address3 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce3 : OUT STD_LOGIC;
    input_1_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address4 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce4 : OUT STD_LOGIC;
    input_1_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address5 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce5 : OUT STD_LOGIC;
    input_1_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address6 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce6 : OUT STD_LOGIC;
    input_1_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address7 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce7 : OUT STD_LOGIC;
    input_1_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address8 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce8 : OUT STD_LOGIC;
    input_1_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address9 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce9 : OUT STD_LOGIC;
    input_1_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address10 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce10 : OUT STD_LOGIC;
    input_1_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address11 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce11 : OUT STD_LOGIC;
    input_1_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address12 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce12 : OUT STD_LOGIC;
    input_1_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address13 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce13 : OUT STD_LOGIC;
    input_1_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address14 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce14 : OUT STD_LOGIC;
    input_1_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address15 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce15 : OUT STD_LOGIC;
    input_1_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address16 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_1_ce16 : OUT STD_LOGIC;
    input_1_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce0 : OUT STD_LOGIC;
    input_2_we0 : OUT STD_LOGIC;
    input_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce1 : OUT STD_LOGIC;
    input_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address2 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce2 : OUT STD_LOGIC;
    input_2_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address3 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce3 : OUT STD_LOGIC;
    input_2_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address4 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce4 : OUT STD_LOGIC;
    input_2_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address5 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce5 : OUT STD_LOGIC;
    input_2_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address6 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce6 : OUT STD_LOGIC;
    input_2_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address7 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce7 : OUT STD_LOGIC;
    input_2_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address8 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce8 : OUT STD_LOGIC;
    input_2_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address9 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce9 : OUT STD_LOGIC;
    input_2_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address10 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce10 : OUT STD_LOGIC;
    input_2_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address11 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce11 : OUT STD_LOGIC;
    input_2_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address12 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce12 : OUT STD_LOGIC;
    input_2_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address13 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce13 : OUT STD_LOGIC;
    input_2_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address14 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce14 : OUT STD_LOGIC;
    input_2_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address15 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce15 : OUT STD_LOGIC;
    input_2_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address16 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_2_ce16 : OUT STD_LOGIC;
    input_2_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce0 : OUT STD_LOGIC;
    input_3_we0 : OUT STD_LOGIC;
    input_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce1 : OUT STD_LOGIC;
    input_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address2 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce2 : OUT STD_LOGIC;
    input_3_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address3 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce3 : OUT STD_LOGIC;
    input_3_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address4 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce4 : OUT STD_LOGIC;
    input_3_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address5 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce5 : OUT STD_LOGIC;
    input_3_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address6 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce6 : OUT STD_LOGIC;
    input_3_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address7 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce7 : OUT STD_LOGIC;
    input_3_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address8 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce8 : OUT STD_LOGIC;
    input_3_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address9 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce9 : OUT STD_LOGIC;
    input_3_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address10 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce10 : OUT STD_LOGIC;
    input_3_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address11 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce11 : OUT STD_LOGIC;
    input_3_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address12 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce12 : OUT STD_LOGIC;
    input_3_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address13 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce13 : OUT STD_LOGIC;
    input_3_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address14 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce14 : OUT STD_LOGIC;
    input_3_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address15 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce15 : OUT STD_LOGIC;
    input_3_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_3_address16 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_3_ce16 : OUT STD_LOGIC;
    input_3_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_0_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_0_ce0 : OUT STD_LOGIC;
    output_0_we0 : OUT STD_LOGIC;
    output_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_0_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_0_ce1 : OUT STD_LOGIC;
    output_0_we1 : OUT STD_LOGIC;
    output_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_1_ce0 : OUT STD_LOGIC;
    output_1_we0 : OUT STD_LOGIC;
    output_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_1_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_1_ce1 : OUT STD_LOGIC;
    output_1_we1 : OUT STD_LOGIC;
    output_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_2_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_2_ce0 : OUT STD_LOGIC;
    output_2_we0 : OUT STD_LOGIC;
    output_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_2_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_2_ce1 : OUT STD_LOGIC;
    output_2_we1 : OUT STD_LOGIC;
    output_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_3_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_3_ce0 : OUT STD_LOGIC;
    output_3_we0 : OUT STD_LOGIC;
    output_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_3_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_3_ce1 : OUT STD_LOGIC;
    output_3_we1 : OUT STD_LOGIC;
    output_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_4_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_4_ce0 : OUT STD_LOGIC;
    output_4_we0 : OUT STD_LOGIC;
    output_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_4_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_4_ce1 : OUT STD_LOGIC;
    output_4_we1 : OUT STD_LOGIC;
    output_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_5_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_5_ce0 : OUT STD_LOGIC;
    output_5_we0 : OUT STD_LOGIC;
    output_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_5_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_5_ce1 : OUT STD_LOGIC;
    output_5_we1 : OUT STD_LOGIC;
    output_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_6_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_6_ce0 : OUT STD_LOGIC;
    output_6_we0 : OUT STD_LOGIC;
    output_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_6_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_6_ce1 : OUT STD_LOGIC;
    output_6_we1 : OUT STD_LOGIC;
    output_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_7_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_7_ce0 : OUT STD_LOGIC;
    output_7_we0 : OUT STD_LOGIC;
    output_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_7_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_7_ce1 : OUT STD_LOGIC;
    output_7_we1 : OUT STD_LOGIC;
    output_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_8_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_8_ce0 : OUT STD_LOGIC;
    output_8_we0 : OUT STD_LOGIC;
    output_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_8_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_8_ce1 : OUT STD_LOGIC;
    output_8_we1 : OUT STD_LOGIC;
    output_8_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_9_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_9_ce0 : OUT STD_LOGIC;
    output_9_we0 : OUT STD_LOGIC;
    output_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_9_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_9_ce1 : OUT STD_LOGIC;
    output_9_we1 : OUT STD_LOGIC;
    output_9_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_10_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_10_ce0 : OUT STD_LOGIC;
    output_10_we0 : OUT STD_LOGIC;
    output_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_10_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_10_ce1 : OUT STD_LOGIC;
    output_10_we1 : OUT STD_LOGIC;
    output_10_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_11_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_11_ce0 : OUT STD_LOGIC;
    output_11_we0 : OUT STD_LOGIC;
    output_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_11_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_11_ce1 : OUT STD_LOGIC;
    output_11_we1 : OUT STD_LOGIC;
    output_11_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_12_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_12_ce0 : OUT STD_LOGIC;
    output_12_we0 : OUT STD_LOGIC;
    output_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_12_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_12_ce1 : OUT STD_LOGIC;
    output_12_we1 : OUT STD_LOGIC;
    output_12_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_13_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_13_ce0 : OUT STD_LOGIC;
    output_13_we0 : OUT STD_LOGIC;
    output_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_13_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_13_ce1 : OUT STD_LOGIC;
    output_13_we1 : OUT STD_LOGIC;
    output_13_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_14_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_14_ce0 : OUT STD_LOGIC;
    output_14_we0 : OUT STD_LOGIC;
    output_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_14_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_14_ce1 : OUT STD_LOGIC;
    output_14_we1 : OUT STD_LOGIC;
    output_14_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_15_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_15_ce0 : OUT STD_LOGIC;
    output_15_we0 : OUT STD_LOGIC;
    output_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_15_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_15_ce1 : OUT STD_LOGIC;
    output_15_we1 : OUT STD_LOGIC;
    output_15_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_15_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    weight_ce0 : OUT STD_LOGIC;
    weight_we0 : OUT STD_LOGIC;
    weight_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    weight_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weight_address1 : OUT STD_LOGIC_VECTOR (16 downto 0);
    weight_ce1 : OUT STD_LOGIC;
    weight_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kernel_input_AWVALID : OUT STD_LOGIC;
    m_axi_kernel_input_AWREADY : IN STD_LOGIC;
    m_axi_kernel_input_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_kernel_input_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_input_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kernel_input_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_input_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_input_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_input_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_input_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_input_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_input_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_input_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_input_WVALID : OUT STD_LOGIC;
    m_axi_kernel_input_WREADY : IN STD_LOGIC;
    m_axi_kernel_input_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    m_axi_kernel_input_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_kernel_input_WLAST : OUT STD_LOGIC;
    m_axi_kernel_input_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_input_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_input_ARVALID : OUT STD_LOGIC;
    m_axi_kernel_input_ARREADY : IN STD_LOGIC;
    m_axi_kernel_input_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_kernel_input_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_input_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kernel_input_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_input_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_input_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_input_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_input_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_input_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_input_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_input_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_input_RVALID : IN STD_LOGIC;
    m_axi_kernel_input_RREADY : OUT STD_LOGIC;
    m_axi_kernel_input_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    m_axi_kernel_input_RLAST : IN STD_LOGIC;
    m_axi_kernel_input_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_input_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_kernel_input_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_input_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_input_BVALID : IN STD_LOGIC;
    m_axi_kernel_input_BREADY : OUT STD_LOGIC;
    m_axi_kernel_input_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_input_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_input_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    vinput : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_kernel_weight_AWVALID : OUT STD_LOGIC;
    m_axi_kernel_weight_AWREADY : IN STD_LOGIC;
    m_axi_kernel_weight_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_kernel_weight_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_weight_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kernel_weight_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_weight_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_weight_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_weight_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_weight_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_weight_WVALID : OUT STD_LOGIC;
    m_axi_kernel_weight_WREADY : IN STD_LOGIC;
    m_axi_kernel_weight_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kernel_weight_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_WLAST : OUT STD_LOGIC;
    m_axi_kernel_weight_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_weight_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_weight_ARVALID : OUT STD_LOGIC;
    m_axi_kernel_weight_ARREADY : IN STD_LOGIC;
    m_axi_kernel_weight_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_kernel_weight_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_weight_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kernel_weight_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_weight_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_weight_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_weight_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_weight_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_weight_RVALID : IN STD_LOGIC;
    m_axi_kernel_weight_RREADY : OUT STD_LOGIC;
    m_axi_kernel_weight_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kernel_weight_RLAST : IN STD_LOGIC;
    m_axi_kernel_weight_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_weight_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_kernel_weight_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_weight_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_weight_BVALID : IN STD_LOGIC;
    m_axi_kernel_weight_BREADY : OUT STD_LOGIC;
    m_axi_kernel_weight_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_weight_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_weight_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    vweight : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_kernel_output_AWVALID : OUT STD_LOGIC;
    m_axi_kernel_output_AWREADY : IN STD_LOGIC;
    m_axi_kernel_output_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_kernel_output_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_output_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kernel_output_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_output_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_output_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_output_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_output_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_output_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_output_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_output_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_output_WVALID : OUT STD_LOGIC;
    m_axi_kernel_output_WREADY : IN STD_LOGIC;
    m_axi_kernel_output_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_kernel_output_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_kernel_output_WLAST : OUT STD_LOGIC;
    m_axi_kernel_output_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_output_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_output_ARVALID : OUT STD_LOGIC;
    m_axi_kernel_output_ARREADY : IN STD_LOGIC;
    m_axi_kernel_output_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_kernel_output_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_output_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_kernel_output_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_output_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_output_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_output_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_output_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_output_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_output_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_output_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_output_RVALID : IN STD_LOGIC;
    m_axi_kernel_output_RREADY : OUT STD_LOGIC;
    m_axi_kernel_output_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_kernel_output_RLAST : IN STD_LOGIC;
    m_axi_kernel_output_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_output_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_kernel_output_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_output_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_output_BVALID : IN STD_LOGIC;
    m_axi_kernel_output_BREADY : OUT STD_LOGIC;
    m_axi_kernel_output_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_output_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_kernel_output_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    voutput : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of kernel_cnn_cnn is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv17_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_const_lv17_3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000011";
    constant ap_const_lv17_4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_const_lv17_5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000101";
    constant ap_const_lv17_6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000110";
    constant ap_const_lv17_7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000111";
    constant ap_const_lv17_8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_const_lv17_9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001001";
    constant ap_const_lv17_A : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001010";
    constant ap_const_lv17_B : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001011";
    constant ap_const_lv17_C : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001100";
    constant ap_const_lv17_D : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001101";
    constant ap_const_lv17_E : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001110";
    constant ap_const_lv17_F : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001111";
    constant ap_const_lv17_10 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_const_lv17_11 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010001";
    constant ap_const_lv17_12 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010010";
    constant ap_const_lv17_14 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010100";
    constant ap_const_lv17_13 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010011";
    constant ap_const_lv17_15 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010101";
    constant ap_const_lv17_16 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010110";
    constant ap_const_lv17_17 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010111";
    constant ap_const_lv17_18 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000011000";
    constant ap_const_lv19_19 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000011001";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i0_2_fu_618_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i0_2_reg_979 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln304_fu_624_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln304_reg_984 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln319_fu_636_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln319_reg_994 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln326_fu_642_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln326_reg_999 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln319_fu_651_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln319_reg_1004 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln328_fu_661_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln328_reg_1012 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal empty_fu_691_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_reg_1017 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln349_fu_701_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln349_reg_1022 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal weight_load_reg_1065 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal weight_load_1_reg_1080 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_load_2_reg_1085 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal weight_load_3_reg_1100 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_load_4_reg_1105 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal weight_load_5_reg_1120 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_load_6_reg_1125 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal weight_load_7_reg_1140 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_load_8_reg_1145 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal weight_load_9_reg_1160 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_load_10_reg_1165 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal weight_load_11_reg_1180 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_load_12_reg_1185 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal weight_load_13_reg_1200 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_load_14_reg_1205 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal weight_load_15_reg_1220 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_load_16_reg_1225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal weight_load_17_reg_1240 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_load_18_reg_1245 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal weight_load_19_reg_1260 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_load_20_reg_1265 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal weight_load_21_reg_1280 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_load_22_reg_1285 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_load_23_reg_1290 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal weight_load_24_reg_1295 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_weight_S0_fu_428_ap_start : STD_LOGIC;
    signal grp_load_weight_S0_fu_428_ap_done : STD_LOGIC;
    signal grp_load_weight_S0_fu_428_ap_idle : STD_LOGIC;
    signal grp_load_weight_S0_fu_428_ap_ready : STD_LOGIC;
    signal grp_load_weight_S0_fu_428_weight_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_load_weight_S0_fu_428_weight_ce0 : STD_LOGIC;
    signal grp_load_weight_S0_fu_428_weight_we0 : STD_LOGIC;
    signal grp_load_weight_S0_fu_428_weight_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWVALID : STD_LOGIC;
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_WVALID : STD_LOGIC;
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_WLAST : STD_LOGIC;
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARVALID : STD_LOGIC;
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_RREADY : STD_LOGIC;
    signal grp_load_weight_S0_fu_428_m_axi_kernel_weight_BREADY : STD_LOGIC;
    signal grp_load_output_S0_fu_438_ap_start : STD_LOGIC;
    signal grp_load_output_S0_fu_438_ap_done : STD_LOGIC;
    signal grp_load_output_S0_fu_438_ap_idle : STD_LOGIC;
    signal grp_load_output_S0_fu_438_ap_ready : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_0_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_0_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_0_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_1_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_1_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_1_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_2_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_2_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_2_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_3_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_3_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_3_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_4_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_4_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_4_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_5_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_5_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_5_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_6_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_6_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_6_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_7_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_7_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_7_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_8_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_8_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_8_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_9_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_9_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_9_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_10_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_10_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_10_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_11_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_11_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_11_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_12_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_12_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_12_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_12_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_13_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_13_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_13_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_13_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_14_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_14_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_14_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_14_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_output_15_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_output_S0_fu_438_output_15_ce0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_15_we0 : STD_LOGIC;
    signal grp_load_output_S0_fu_438_output_15_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_AWVALID : STD_LOGIC;
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_WVALID : STD_LOGIC;
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_WLAST : STD_LOGIC;
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_ARVALID : STD_LOGIC;
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_RREADY : STD_LOGIC;
    signal grp_load_output_S0_fu_438_m_axi_kernel_output_BREADY : STD_LOGIC;
    signal grp_load_input_S0_fu_478_ap_start : STD_LOGIC;
    signal grp_load_input_S0_fu_478_ap_done : STD_LOGIC;
    signal grp_load_input_S0_fu_478_ap_idle : STD_LOGIC;
    signal grp_load_input_S0_fu_478_ap_ready : STD_LOGIC;
    signal grp_load_input_S0_fu_478_input_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_load_input_S0_fu_478_input_0_ce0 : STD_LOGIC;
    signal grp_load_input_S0_fu_478_input_0_we0 : STD_LOGIC;
    signal grp_load_input_S0_fu_478_input_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_S0_fu_478_input_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_load_input_S0_fu_478_input_1_ce0 : STD_LOGIC;
    signal grp_load_input_S0_fu_478_input_1_we0 : STD_LOGIC;
    signal grp_load_input_S0_fu_478_input_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_S0_fu_478_input_2_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_load_input_S0_fu_478_input_2_ce0 : STD_LOGIC;
    signal grp_load_input_S0_fu_478_input_2_we0 : STD_LOGIC;
    signal grp_load_input_S0_fu_478_input_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_S0_fu_478_input_3_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_load_input_S0_fu_478_input_3_ce0 : STD_LOGIC;
    signal grp_load_input_S0_fu_478_input_3_we0 : STD_LOGIC;
    signal grp_load_input_S0_fu_478_input_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_AWVALID : STD_LOGIC;
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_WVALID : STD_LOGIC;
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_WLAST : STD_LOGIC;
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_ARVALID : STD_LOGIC;
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_RREADY : STD_LOGIC;
    signal grp_load_input_S0_fu_478_m_axi_kernel_input_BREADY : STD_LOGIC;
    signal grp_store_output_S0_fu_494_ap_start : STD_LOGIC;
    signal grp_store_output_S0_fu_494_ap_done : STD_LOGIC;
    signal grp_store_output_S0_fu_494_ap_idle : STD_LOGIC;
    signal grp_store_output_S0_fu_494_ap_ready : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_0_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_0_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_1_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_1_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_2_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_2_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_3_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_3_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_4_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_4_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_5_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_5_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_6_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_6_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_7_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_7_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_8_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_8_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_9_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_9_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_10_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_10_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_11_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_11_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_12_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_12_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_13_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_13_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_14_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_14_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_output_15_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_store_output_S0_fu_494_output_15_ce0 : STD_LOGIC;
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_AWVALID : STD_LOGIC;
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_WVALID : STD_LOGIC;
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_WLAST : STD_LOGIC;
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_ARVALID : STD_LOGIC;
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_RREADY : STD_LOGIC;
    signal grp_store_output_S0_fu_494_m_axi_kernel_output_BREADY : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_start : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_done : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_idle : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_ready : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce2 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce3 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce4 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address5 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce5 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address6 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce6 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address7 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce7 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address8 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce8 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address9 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce9 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address10 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce10 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address11 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce11 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address12 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce12 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address13 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce13 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address14 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce14 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address15 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce15 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address16 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce16 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce2 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce3 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce4 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address5 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce5 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address6 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce6 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address7 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce7 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address8 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce8 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address9 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce9 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address10 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce10 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address11 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce11 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address12 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce12 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address13 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce13 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address14 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce14 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address15 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce15 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address16 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce16 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce2 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce3 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce4 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address5 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce5 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address6 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce6 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address7 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce7 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address8 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce8 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address9 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce9 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address10 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce10 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address11 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce11 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address12 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce12 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address13 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce13 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address14 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce14 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address15 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce15 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address16 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce16 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce2 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce3 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce4 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address5 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce5 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address6 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce6 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address7 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce7 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address8 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce8 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address9 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce9 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address10 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce10 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address11 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce11 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address12 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce12 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address13 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce13 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address14 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce14 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address15 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce15 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address16 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce16 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_ce0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_we0 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_ce1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_we1 : STD_LOGIC;
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_405 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln328_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal i1_reg_417 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_load_weight_S0_fu_428_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln304_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_output_S0_fu_438_ap_start_reg : STD_LOGIC := '0';
    signal grp_load_input_S0_fu_478_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln319_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_store_output_S0_fu_494_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal zext_ln349_289_fu_697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_fu_709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8336_fu_719_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8337_fu_729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8338_fu_739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8339_fu_749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8340_fu_759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8341_fu_769_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8342_fu_779_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8343_fu_789_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8344_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8345_fu_809_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8346_fu_819_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8347_fu_829_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8348_fu_839_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8349_fu_849_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8350_fu_859_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8351_fu_869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8352_fu_879_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln349_290_fu_889_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8353_fu_899_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8354_fu_909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8355_fu_919_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8356_fu_929_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8357_fu_939_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i0_fu_174 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal tmp_9_fu_667_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_fu_679_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_cast_fu_675_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_10_cast_fu_687_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_944_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal empty_49_fu_704_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_50_fu_714_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_51_fu_724_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_52_fu_734_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_53_fu_744_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_54_fu_754_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_55_fu_764_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_56_fu_774_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_57_fu_784_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_58_fu_794_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_59_fu_804_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_60_fu_814_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_61_fu_824_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_62_fu_834_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_63_fu_844_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_64_fu_854_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_65_fu_864_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_66_fu_874_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln349_1_fu_884_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_67_fu_894_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_68_fu_904_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_69_fu_914_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_70_fu_924_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal empty_71_fu_934_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_944_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_944_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_944_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kernel_cnn_load_weight_S0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        weight_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        weight_ce0 : OUT STD_LOGIC;
        weight_we0 : OUT STD_LOGIC;
        weight_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_weight_AWVALID : OUT STD_LOGIC;
        m_axi_kernel_weight_AWREADY : IN STD_LOGIC;
        m_axi_kernel_weight_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_weight_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_weight_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_weight_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_weight_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_weight_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_weight_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_WVALID : OUT STD_LOGIC;
        m_axi_kernel_weight_WREADY : IN STD_LOGIC;
        m_axi_kernel_weight_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_weight_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_WLAST : OUT STD_LOGIC;
        m_axi_kernel_weight_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_ARVALID : OUT STD_LOGIC;
        m_axi_kernel_weight_ARREADY : IN STD_LOGIC;
        m_axi_kernel_weight_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_weight_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_weight_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_weight_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_weight_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_weight_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_weight_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_RVALID : IN STD_LOGIC;
        m_axi_kernel_weight_RREADY : OUT STD_LOGIC;
        m_axi_kernel_weight_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_weight_RLAST : IN STD_LOGIC;
        m_axi_kernel_weight_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_kernel_weight_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_weight_BVALID : IN STD_LOGIC;
        m_axi_kernel_weight_BREADY : OUT STD_LOGIC;
        m_axi_kernel_weight_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_weight_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        vweight : IN STD_LOGIC_VECTOR (63 downto 0);
        d0 : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component kernel_cnn_load_output_S0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_0_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_we0 : OUT STD_LOGIC;
        output_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_ce0 : OUT STD_LOGIC;
        output_2_we0 : OUT STD_LOGIC;
        output_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_3_ce0 : OUT STD_LOGIC;
        output_3_we0 : OUT STD_LOGIC;
        output_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_4_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_4_ce0 : OUT STD_LOGIC;
        output_4_we0 : OUT STD_LOGIC;
        output_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_5_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_5_ce0 : OUT STD_LOGIC;
        output_5_we0 : OUT STD_LOGIC;
        output_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_6_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_6_ce0 : OUT STD_LOGIC;
        output_6_we0 : OUT STD_LOGIC;
        output_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_7_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_7_ce0 : OUT STD_LOGIC;
        output_7_we0 : OUT STD_LOGIC;
        output_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_8_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_8_ce0 : OUT STD_LOGIC;
        output_8_we0 : OUT STD_LOGIC;
        output_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_9_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_9_ce0 : OUT STD_LOGIC;
        output_9_we0 : OUT STD_LOGIC;
        output_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_10_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_10_ce0 : OUT STD_LOGIC;
        output_10_we0 : OUT STD_LOGIC;
        output_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_11_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_11_ce0 : OUT STD_LOGIC;
        output_11_we0 : OUT STD_LOGIC;
        output_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_12_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_12_ce0 : OUT STD_LOGIC;
        output_12_we0 : OUT STD_LOGIC;
        output_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_13_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_13_ce0 : OUT STD_LOGIC;
        output_13_we0 : OUT STD_LOGIC;
        output_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_14_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_14_ce0 : OUT STD_LOGIC;
        output_14_we0 : OUT STD_LOGIC;
        output_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_15_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_15_ce0 : OUT STD_LOGIC;
        output_15_we0 : OUT STD_LOGIC;
        output_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_output_AWVALID : OUT STD_LOGIC;
        m_axi_kernel_output_AWREADY : IN STD_LOGIC;
        m_axi_kernel_output_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_output_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_output_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_output_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_output_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_WVALID : OUT STD_LOGIC;
        m_axi_kernel_output_WREADY : IN STD_LOGIC;
        m_axi_kernel_output_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_kernel_output_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_output_WLAST : OUT STD_LOGIC;
        m_axi_kernel_output_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_ARVALID : OUT STD_LOGIC;
        m_axi_kernel_output_ARREADY : IN STD_LOGIC;
        m_axi_kernel_output_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_output_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_output_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_output_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_output_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_RVALID : IN STD_LOGIC;
        m_axi_kernel_output_RREADY : OUT STD_LOGIC;
        m_axi_kernel_output_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_kernel_output_RLAST : IN STD_LOGIC;
        m_axi_kernel_output_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_kernel_output_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_BVALID : IN STD_LOGIC;
        m_axi_kernel_output_BREADY : OUT STD_LOGIC;
        m_axi_kernel_output_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        voutput : IN STD_LOGIC_VECTOR (63 downto 0);
        d0 : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component kernel_cnn_load_input_S0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_we0 : OUT STD_LOGIC;
        input_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce0 : OUT STD_LOGIC;
        input_1_we0 : OUT STD_LOGIC;
        input_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce0 : OUT STD_LOGIC;
        input_2_we0 : OUT STD_LOGIC;
        input_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce0 : OUT STD_LOGIC;
        input_3_we0 : OUT STD_LOGIC;
        input_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_input_AWVALID : OUT STD_LOGIC;
        m_axi_kernel_input_AWREADY : IN STD_LOGIC;
        m_axi_kernel_input_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_input_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_input_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_input_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_input_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_input_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_input_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_input_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_input_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_input_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_WVALID : OUT STD_LOGIC;
        m_axi_kernel_input_WREADY : IN STD_LOGIC;
        m_axi_kernel_input_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_kernel_input_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_kernel_input_WLAST : OUT STD_LOGIC;
        m_axi_kernel_input_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_ARVALID : OUT STD_LOGIC;
        m_axi_kernel_input_ARREADY : IN STD_LOGIC;
        m_axi_kernel_input_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_input_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_input_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_input_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_input_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_input_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_input_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_input_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_input_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_input_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_RVALID : IN STD_LOGIC;
        m_axi_kernel_input_RREADY : OUT STD_LOGIC;
        m_axi_kernel_input_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_kernel_input_RLAST : IN STD_LOGIC;
        m_axi_kernel_input_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_kernel_input_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_input_BVALID : IN STD_LOGIC;
        m_axi_kernel_input_BREADY : OUT STD_LOGIC;
        m_axi_kernel_input_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_input_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        vinput : IN STD_LOGIC_VECTOR (63 downto 0);
        d0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component kernel_cnn_store_output_S0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_0_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_ce0 : OUT STD_LOGIC;
        output_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_3_ce0 : OUT STD_LOGIC;
        output_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_4_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_4_ce0 : OUT STD_LOGIC;
        output_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_5_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_5_ce0 : OUT STD_LOGIC;
        output_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_6_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_6_ce0 : OUT STD_LOGIC;
        output_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_7_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_7_ce0 : OUT STD_LOGIC;
        output_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_8_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_8_ce0 : OUT STD_LOGIC;
        output_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_9_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_9_ce0 : OUT STD_LOGIC;
        output_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_10_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_10_ce0 : OUT STD_LOGIC;
        output_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_11_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_11_ce0 : OUT STD_LOGIC;
        output_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_12_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_12_ce0 : OUT STD_LOGIC;
        output_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_13_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_13_ce0 : OUT STD_LOGIC;
        output_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_14_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_14_ce0 : OUT STD_LOGIC;
        output_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_15_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_15_ce0 : OUT STD_LOGIC;
        output_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_output_AWVALID : OUT STD_LOGIC;
        m_axi_kernel_output_AWREADY : IN STD_LOGIC;
        m_axi_kernel_output_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_output_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_output_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_output_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_output_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_WVALID : OUT STD_LOGIC;
        m_axi_kernel_output_WREADY : IN STD_LOGIC;
        m_axi_kernel_output_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_kernel_output_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_output_WLAST : OUT STD_LOGIC;
        m_axi_kernel_output_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_ARVALID : OUT STD_LOGIC;
        m_axi_kernel_output_ARREADY : IN STD_LOGIC;
        m_axi_kernel_output_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_output_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_output_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_output_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_output_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_RVALID : IN STD_LOGIC;
        m_axi_kernel_output_RREADY : OUT STD_LOGIC;
        m_axi_kernel_output_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_kernel_output_RLAST : IN STD_LOGIC;
        m_axi_kernel_output_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_kernel_output_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_BVALID : IN STD_LOGIC;
        m_axi_kernel_output_BREADY : OUT STD_LOGIC;
        m_axi_kernel_output_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        voutput : IN STD_LOGIC_VECTOR (63 downto 0);
        d0 : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component kernel_cnn_cnn_Pipeline_VITIS_LOOP_329_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce0 : OUT STD_LOGIC;
        input_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce1 : OUT STD_LOGIC;
        input_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce2 : OUT STD_LOGIC;
        input_0_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce3 : OUT STD_LOGIC;
        input_0_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce4 : OUT STD_LOGIC;
        input_0_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce5 : OUT STD_LOGIC;
        input_0_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce6 : OUT STD_LOGIC;
        input_0_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address7 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce7 : OUT STD_LOGIC;
        input_0_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address8 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce8 : OUT STD_LOGIC;
        input_0_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address9 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce9 : OUT STD_LOGIC;
        input_0_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address10 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce10 : OUT STD_LOGIC;
        input_0_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address11 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce11 : OUT STD_LOGIC;
        input_0_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address12 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce12 : OUT STD_LOGIC;
        input_0_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address13 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce13 : OUT STD_LOGIC;
        input_0_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address14 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce14 : OUT STD_LOGIC;
        input_0_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address15 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce15 : OUT STD_LOGIC;
        input_0_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_address16 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_0_ce16 : OUT STD_LOGIC;
        input_0_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce0 : OUT STD_LOGIC;
        input_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce1 : OUT STD_LOGIC;
        input_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce2 : OUT STD_LOGIC;
        input_1_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce3 : OUT STD_LOGIC;
        input_1_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce4 : OUT STD_LOGIC;
        input_1_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce5 : OUT STD_LOGIC;
        input_1_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce6 : OUT STD_LOGIC;
        input_1_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address7 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce7 : OUT STD_LOGIC;
        input_1_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address8 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce8 : OUT STD_LOGIC;
        input_1_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address9 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce9 : OUT STD_LOGIC;
        input_1_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address10 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce10 : OUT STD_LOGIC;
        input_1_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address11 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce11 : OUT STD_LOGIC;
        input_1_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address12 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce12 : OUT STD_LOGIC;
        input_1_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address13 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce13 : OUT STD_LOGIC;
        input_1_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address14 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce14 : OUT STD_LOGIC;
        input_1_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address15 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce15 : OUT STD_LOGIC;
        input_1_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_address16 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_1_ce16 : OUT STD_LOGIC;
        input_1_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce0 : OUT STD_LOGIC;
        input_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce1 : OUT STD_LOGIC;
        input_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce2 : OUT STD_LOGIC;
        input_2_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce3 : OUT STD_LOGIC;
        input_2_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce4 : OUT STD_LOGIC;
        input_2_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce5 : OUT STD_LOGIC;
        input_2_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce6 : OUT STD_LOGIC;
        input_2_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address7 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce7 : OUT STD_LOGIC;
        input_2_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address8 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce8 : OUT STD_LOGIC;
        input_2_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address9 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce9 : OUT STD_LOGIC;
        input_2_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address10 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce10 : OUT STD_LOGIC;
        input_2_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address11 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce11 : OUT STD_LOGIC;
        input_2_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address12 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce12 : OUT STD_LOGIC;
        input_2_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address13 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce13 : OUT STD_LOGIC;
        input_2_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address14 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce14 : OUT STD_LOGIC;
        input_2_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address15 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce15 : OUT STD_LOGIC;
        input_2_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_address16 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_2_ce16 : OUT STD_LOGIC;
        input_2_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce0 : OUT STD_LOGIC;
        input_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce1 : OUT STD_LOGIC;
        input_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce2 : OUT STD_LOGIC;
        input_3_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce3 : OUT STD_LOGIC;
        input_3_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce4 : OUT STD_LOGIC;
        input_3_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce5 : OUT STD_LOGIC;
        input_3_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce6 : OUT STD_LOGIC;
        input_3_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address7 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce7 : OUT STD_LOGIC;
        input_3_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address8 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce8 : OUT STD_LOGIC;
        input_3_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address9 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce9 : OUT STD_LOGIC;
        input_3_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address10 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce10 : OUT STD_LOGIC;
        input_3_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address11 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce11 : OUT STD_LOGIC;
        input_3_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address12 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce12 : OUT STD_LOGIC;
        input_3_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address13 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce13 : OUT STD_LOGIC;
        input_3_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address14 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce14 : OUT STD_LOGIC;
        input_3_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address15 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce15 : OUT STD_LOGIC;
        input_3_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_address16 : OUT STD_LOGIC_VECTOR (13 downto 0);
        input_3_ce16 : OUT STD_LOGIC;
        input_3_q16 : IN STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (13 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_we0 : OUT STD_LOGIC;
        output_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_0_ce1 : OUT STD_LOGIC;
        output_0_we1 : OUT STD_LOGIC;
        output_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_we0 : OUT STD_LOGIC;
        output_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_1_ce1 : OUT STD_LOGIC;
        output_1_we1 : OUT STD_LOGIC;
        output_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_ce0 : OUT STD_LOGIC;
        output_2_we0 : OUT STD_LOGIC;
        output_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_2_ce1 : OUT STD_LOGIC;
        output_2_we1 : OUT STD_LOGIC;
        output_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_3_ce0 : OUT STD_LOGIC;
        output_3_we0 : OUT STD_LOGIC;
        output_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_3_ce1 : OUT STD_LOGIC;
        output_3_we1 : OUT STD_LOGIC;
        output_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_4_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_4_ce0 : OUT STD_LOGIC;
        output_4_we0 : OUT STD_LOGIC;
        output_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_4_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_4_ce1 : OUT STD_LOGIC;
        output_4_we1 : OUT STD_LOGIC;
        output_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_5_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_5_ce0 : OUT STD_LOGIC;
        output_5_we0 : OUT STD_LOGIC;
        output_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_5_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_5_ce1 : OUT STD_LOGIC;
        output_5_we1 : OUT STD_LOGIC;
        output_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_6_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_6_ce0 : OUT STD_LOGIC;
        output_6_we0 : OUT STD_LOGIC;
        output_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_6_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_6_ce1 : OUT STD_LOGIC;
        output_6_we1 : OUT STD_LOGIC;
        output_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_7_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_7_ce0 : OUT STD_LOGIC;
        output_7_we0 : OUT STD_LOGIC;
        output_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_7_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_7_ce1 : OUT STD_LOGIC;
        output_7_we1 : OUT STD_LOGIC;
        output_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_8_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_8_ce0 : OUT STD_LOGIC;
        output_8_we0 : OUT STD_LOGIC;
        output_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_8_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_8_ce1 : OUT STD_LOGIC;
        output_8_we1 : OUT STD_LOGIC;
        output_8_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_9_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_9_ce0 : OUT STD_LOGIC;
        output_9_we0 : OUT STD_LOGIC;
        output_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_9_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_9_ce1 : OUT STD_LOGIC;
        output_9_we1 : OUT STD_LOGIC;
        output_9_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_10_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_10_ce0 : OUT STD_LOGIC;
        output_10_we0 : OUT STD_LOGIC;
        output_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_10_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_10_ce1 : OUT STD_LOGIC;
        output_10_we1 : OUT STD_LOGIC;
        output_10_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_11_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_11_ce0 : OUT STD_LOGIC;
        output_11_we0 : OUT STD_LOGIC;
        output_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_11_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_11_ce1 : OUT STD_LOGIC;
        output_11_we1 : OUT STD_LOGIC;
        output_11_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_12_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_12_ce0 : OUT STD_LOGIC;
        output_12_we0 : OUT STD_LOGIC;
        output_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_12_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_12_ce1 : OUT STD_LOGIC;
        output_12_we1 : OUT STD_LOGIC;
        output_12_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_13_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_13_ce0 : OUT STD_LOGIC;
        output_13_we0 : OUT STD_LOGIC;
        output_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_13_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_13_ce1 : OUT STD_LOGIC;
        output_13_we1 : OUT STD_LOGIC;
        output_13_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_14_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_14_ce0 : OUT STD_LOGIC;
        output_14_we0 : OUT STD_LOGIC;
        output_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_14_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_14_ce1 : OUT STD_LOGIC;
        output_14_we1 : OUT STD_LOGIC;
        output_14_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_15_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_15_ce0 : OUT STD_LOGIC;
        output_15_we0 : OUT STD_LOGIC;
        output_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_15_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_15_ce1 : OUT STD_LOGIC;
        output_15_we1 : OUT STD_LOGIC;
        output_15_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_15_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_6 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_7 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_8 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_9 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_10 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_11 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_12 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_13 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_14 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_15 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_16 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_17 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_18 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_19 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_20 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_21 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_22 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_23 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_load_24 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_cnn_am_addmul_13ns_9ns_5ns_19_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;



begin
    grp_load_weight_S0_fu_428 : component kernel_cnn_load_weight_S0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_weight_S0_fu_428_ap_start,
        ap_done => grp_load_weight_S0_fu_428_ap_done,
        ap_idle => grp_load_weight_S0_fu_428_ap_idle,
        ap_ready => grp_load_weight_S0_fu_428_ap_ready,
        weight_address0 => grp_load_weight_S0_fu_428_weight_address0,
        weight_ce0 => grp_load_weight_S0_fu_428_weight_ce0,
        weight_we0 => grp_load_weight_S0_fu_428_weight_we0,
        weight_d0 => grp_load_weight_S0_fu_428_weight_d0,
        m_axi_kernel_weight_AWVALID => grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWVALID,
        m_axi_kernel_weight_AWREADY => ap_const_logic_0,
        m_axi_kernel_weight_AWADDR => grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWADDR,
        m_axi_kernel_weight_AWID => grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWID,
        m_axi_kernel_weight_AWLEN => grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWLEN,
        m_axi_kernel_weight_AWSIZE => grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWSIZE,
        m_axi_kernel_weight_AWBURST => grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWBURST,
        m_axi_kernel_weight_AWLOCK => grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWLOCK,
        m_axi_kernel_weight_AWCACHE => grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWCACHE,
        m_axi_kernel_weight_AWPROT => grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWPROT,
        m_axi_kernel_weight_AWQOS => grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWQOS,
        m_axi_kernel_weight_AWREGION => grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWREGION,
        m_axi_kernel_weight_AWUSER => grp_load_weight_S0_fu_428_m_axi_kernel_weight_AWUSER,
        m_axi_kernel_weight_WVALID => grp_load_weight_S0_fu_428_m_axi_kernel_weight_WVALID,
        m_axi_kernel_weight_WREADY => ap_const_logic_0,
        m_axi_kernel_weight_WDATA => grp_load_weight_S0_fu_428_m_axi_kernel_weight_WDATA,
        m_axi_kernel_weight_WSTRB => grp_load_weight_S0_fu_428_m_axi_kernel_weight_WSTRB,
        m_axi_kernel_weight_WLAST => grp_load_weight_S0_fu_428_m_axi_kernel_weight_WLAST,
        m_axi_kernel_weight_WID => grp_load_weight_S0_fu_428_m_axi_kernel_weight_WID,
        m_axi_kernel_weight_WUSER => grp_load_weight_S0_fu_428_m_axi_kernel_weight_WUSER,
        m_axi_kernel_weight_ARVALID => grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARVALID,
        m_axi_kernel_weight_ARREADY => m_axi_kernel_weight_ARREADY,
        m_axi_kernel_weight_ARADDR => grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARADDR,
        m_axi_kernel_weight_ARID => grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARID,
        m_axi_kernel_weight_ARLEN => grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARLEN,
        m_axi_kernel_weight_ARSIZE => grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARSIZE,
        m_axi_kernel_weight_ARBURST => grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARBURST,
        m_axi_kernel_weight_ARLOCK => grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARLOCK,
        m_axi_kernel_weight_ARCACHE => grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARCACHE,
        m_axi_kernel_weight_ARPROT => grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARPROT,
        m_axi_kernel_weight_ARQOS => grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARQOS,
        m_axi_kernel_weight_ARREGION => grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARREGION,
        m_axi_kernel_weight_ARUSER => grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARUSER,
        m_axi_kernel_weight_RVALID => m_axi_kernel_weight_RVALID,
        m_axi_kernel_weight_RREADY => grp_load_weight_S0_fu_428_m_axi_kernel_weight_RREADY,
        m_axi_kernel_weight_RDATA => m_axi_kernel_weight_RDATA,
        m_axi_kernel_weight_RLAST => m_axi_kernel_weight_RLAST,
        m_axi_kernel_weight_RID => m_axi_kernel_weight_RID,
        m_axi_kernel_weight_RFIFONUM => m_axi_kernel_weight_RFIFONUM,
        m_axi_kernel_weight_RUSER => m_axi_kernel_weight_RUSER,
        m_axi_kernel_weight_RRESP => m_axi_kernel_weight_RRESP,
        m_axi_kernel_weight_BVALID => ap_const_logic_0,
        m_axi_kernel_weight_BREADY => grp_load_weight_S0_fu_428_m_axi_kernel_weight_BREADY,
        m_axi_kernel_weight_BRESP => ap_const_lv2_0,
        m_axi_kernel_weight_BID => ap_const_lv1_0,
        m_axi_kernel_weight_BUSER => ap_const_lv1_0,
        vweight => vweight,
        d0 => trunc_ln304_reg_984);

    grp_load_output_S0_fu_438 : component kernel_cnn_load_output_S0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_output_S0_fu_438_ap_start,
        ap_done => grp_load_output_S0_fu_438_ap_done,
        ap_idle => grp_load_output_S0_fu_438_ap_idle,
        ap_ready => grp_load_output_S0_fu_438_ap_ready,
        output_0_address0 => grp_load_output_S0_fu_438_output_0_address0,
        output_0_ce0 => grp_load_output_S0_fu_438_output_0_ce0,
        output_0_we0 => grp_load_output_S0_fu_438_output_0_we0,
        output_0_d0 => grp_load_output_S0_fu_438_output_0_d0,
        output_1_address0 => grp_load_output_S0_fu_438_output_1_address0,
        output_1_ce0 => grp_load_output_S0_fu_438_output_1_ce0,
        output_1_we0 => grp_load_output_S0_fu_438_output_1_we0,
        output_1_d0 => grp_load_output_S0_fu_438_output_1_d0,
        output_2_address0 => grp_load_output_S0_fu_438_output_2_address0,
        output_2_ce0 => grp_load_output_S0_fu_438_output_2_ce0,
        output_2_we0 => grp_load_output_S0_fu_438_output_2_we0,
        output_2_d0 => grp_load_output_S0_fu_438_output_2_d0,
        output_3_address0 => grp_load_output_S0_fu_438_output_3_address0,
        output_3_ce0 => grp_load_output_S0_fu_438_output_3_ce0,
        output_3_we0 => grp_load_output_S0_fu_438_output_3_we0,
        output_3_d0 => grp_load_output_S0_fu_438_output_3_d0,
        output_4_address0 => grp_load_output_S0_fu_438_output_4_address0,
        output_4_ce0 => grp_load_output_S0_fu_438_output_4_ce0,
        output_4_we0 => grp_load_output_S0_fu_438_output_4_we0,
        output_4_d0 => grp_load_output_S0_fu_438_output_4_d0,
        output_5_address0 => grp_load_output_S0_fu_438_output_5_address0,
        output_5_ce0 => grp_load_output_S0_fu_438_output_5_ce0,
        output_5_we0 => grp_load_output_S0_fu_438_output_5_we0,
        output_5_d0 => grp_load_output_S0_fu_438_output_5_d0,
        output_6_address0 => grp_load_output_S0_fu_438_output_6_address0,
        output_6_ce0 => grp_load_output_S0_fu_438_output_6_ce0,
        output_6_we0 => grp_load_output_S0_fu_438_output_6_we0,
        output_6_d0 => grp_load_output_S0_fu_438_output_6_d0,
        output_7_address0 => grp_load_output_S0_fu_438_output_7_address0,
        output_7_ce0 => grp_load_output_S0_fu_438_output_7_ce0,
        output_7_we0 => grp_load_output_S0_fu_438_output_7_we0,
        output_7_d0 => grp_load_output_S0_fu_438_output_7_d0,
        output_8_address0 => grp_load_output_S0_fu_438_output_8_address0,
        output_8_ce0 => grp_load_output_S0_fu_438_output_8_ce0,
        output_8_we0 => grp_load_output_S0_fu_438_output_8_we0,
        output_8_d0 => grp_load_output_S0_fu_438_output_8_d0,
        output_9_address0 => grp_load_output_S0_fu_438_output_9_address0,
        output_9_ce0 => grp_load_output_S0_fu_438_output_9_ce0,
        output_9_we0 => grp_load_output_S0_fu_438_output_9_we0,
        output_9_d0 => grp_load_output_S0_fu_438_output_9_d0,
        output_10_address0 => grp_load_output_S0_fu_438_output_10_address0,
        output_10_ce0 => grp_load_output_S0_fu_438_output_10_ce0,
        output_10_we0 => grp_load_output_S0_fu_438_output_10_we0,
        output_10_d0 => grp_load_output_S0_fu_438_output_10_d0,
        output_11_address0 => grp_load_output_S0_fu_438_output_11_address0,
        output_11_ce0 => grp_load_output_S0_fu_438_output_11_ce0,
        output_11_we0 => grp_load_output_S0_fu_438_output_11_we0,
        output_11_d0 => grp_load_output_S0_fu_438_output_11_d0,
        output_12_address0 => grp_load_output_S0_fu_438_output_12_address0,
        output_12_ce0 => grp_load_output_S0_fu_438_output_12_ce0,
        output_12_we0 => grp_load_output_S0_fu_438_output_12_we0,
        output_12_d0 => grp_load_output_S0_fu_438_output_12_d0,
        output_13_address0 => grp_load_output_S0_fu_438_output_13_address0,
        output_13_ce0 => grp_load_output_S0_fu_438_output_13_ce0,
        output_13_we0 => grp_load_output_S0_fu_438_output_13_we0,
        output_13_d0 => grp_load_output_S0_fu_438_output_13_d0,
        output_14_address0 => grp_load_output_S0_fu_438_output_14_address0,
        output_14_ce0 => grp_load_output_S0_fu_438_output_14_ce0,
        output_14_we0 => grp_load_output_S0_fu_438_output_14_we0,
        output_14_d0 => grp_load_output_S0_fu_438_output_14_d0,
        output_15_address0 => grp_load_output_S0_fu_438_output_15_address0,
        output_15_ce0 => grp_load_output_S0_fu_438_output_15_ce0,
        output_15_we0 => grp_load_output_S0_fu_438_output_15_we0,
        output_15_d0 => grp_load_output_S0_fu_438_output_15_d0,
        m_axi_kernel_output_AWVALID => grp_load_output_S0_fu_438_m_axi_kernel_output_AWVALID,
        m_axi_kernel_output_AWREADY => ap_const_logic_0,
        m_axi_kernel_output_AWADDR => grp_load_output_S0_fu_438_m_axi_kernel_output_AWADDR,
        m_axi_kernel_output_AWID => grp_load_output_S0_fu_438_m_axi_kernel_output_AWID,
        m_axi_kernel_output_AWLEN => grp_load_output_S0_fu_438_m_axi_kernel_output_AWLEN,
        m_axi_kernel_output_AWSIZE => grp_load_output_S0_fu_438_m_axi_kernel_output_AWSIZE,
        m_axi_kernel_output_AWBURST => grp_load_output_S0_fu_438_m_axi_kernel_output_AWBURST,
        m_axi_kernel_output_AWLOCK => grp_load_output_S0_fu_438_m_axi_kernel_output_AWLOCK,
        m_axi_kernel_output_AWCACHE => grp_load_output_S0_fu_438_m_axi_kernel_output_AWCACHE,
        m_axi_kernel_output_AWPROT => grp_load_output_S0_fu_438_m_axi_kernel_output_AWPROT,
        m_axi_kernel_output_AWQOS => grp_load_output_S0_fu_438_m_axi_kernel_output_AWQOS,
        m_axi_kernel_output_AWREGION => grp_load_output_S0_fu_438_m_axi_kernel_output_AWREGION,
        m_axi_kernel_output_AWUSER => grp_load_output_S0_fu_438_m_axi_kernel_output_AWUSER,
        m_axi_kernel_output_WVALID => grp_load_output_S0_fu_438_m_axi_kernel_output_WVALID,
        m_axi_kernel_output_WREADY => ap_const_logic_0,
        m_axi_kernel_output_WDATA => grp_load_output_S0_fu_438_m_axi_kernel_output_WDATA,
        m_axi_kernel_output_WSTRB => grp_load_output_S0_fu_438_m_axi_kernel_output_WSTRB,
        m_axi_kernel_output_WLAST => grp_load_output_S0_fu_438_m_axi_kernel_output_WLAST,
        m_axi_kernel_output_WID => grp_load_output_S0_fu_438_m_axi_kernel_output_WID,
        m_axi_kernel_output_WUSER => grp_load_output_S0_fu_438_m_axi_kernel_output_WUSER,
        m_axi_kernel_output_ARVALID => grp_load_output_S0_fu_438_m_axi_kernel_output_ARVALID,
        m_axi_kernel_output_ARREADY => m_axi_kernel_output_ARREADY,
        m_axi_kernel_output_ARADDR => grp_load_output_S0_fu_438_m_axi_kernel_output_ARADDR,
        m_axi_kernel_output_ARID => grp_load_output_S0_fu_438_m_axi_kernel_output_ARID,
        m_axi_kernel_output_ARLEN => grp_load_output_S0_fu_438_m_axi_kernel_output_ARLEN,
        m_axi_kernel_output_ARSIZE => grp_load_output_S0_fu_438_m_axi_kernel_output_ARSIZE,
        m_axi_kernel_output_ARBURST => grp_load_output_S0_fu_438_m_axi_kernel_output_ARBURST,
        m_axi_kernel_output_ARLOCK => grp_load_output_S0_fu_438_m_axi_kernel_output_ARLOCK,
        m_axi_kernel_output_ARCACHE => grp_load_output_S0_fu_438_m_axi_kernel_output_ARCACHE,
        m_axi_kernel_output_ARPROT => grp_load_output_S0_fu_438_m_axi_kernel_output_ARPROT,
        m_axi_kernel_output_ARQOS => grp_load_output_S0_fu_438_m_axi_kernel_output_ARQOS,
        m_axi_kernel_output_ARREGION => grp_load_output_S0_fu_438_m_axi_kernel_output_ARREGION,
        m_axi_kernel_output_ARUSER => grp_load_output_S0_fu_438_m_axi_kernel_output_ARUSER,
        m_axi_kernel_output_RVALID => m_axi_kernel_output_RVALID,
        m_axi_kernel_output_RREADY => grp_load_output_S0_fu_438_m_axi_kernel_output_RREADY,
        m_axi_kernel_output_RDATA => m_axi_kernel_output_RDATA,
        m_axi_kernel_output_RLAST => m_axi_kernel_output_RLAST,
        m_axi_kernel_output_RID => m_axi_kernel_output_RID,
        m_axi_kernel_output_RFIFONUM => m_axi_kernel_output_RFIFONUM,
        m_axi_kernel_output_RUSER => m_axi_kernel_output_RUSER,
        m_axi_kernel_output_RRESP => m_axi_kernel_output_RRESP,
        m_axi_kernel_output_BVALID => ap_const_logic_0,
        m_axi_kernel_output_BREADY => grp_load_output_S0_fu_438_m_axi_kernel_output_BREADY,
        m_axi_kernel_output_BRESP => ap_const_lv2_0,
        m_axi_kernel_output_BID => ap_const_lv1_0,
        m_axi_kernel_output_BUSER => ap_const_lv1_0,
        voutput => voutput,
        d0 => trunc_ln304_reg_984);

    grp_load_input_S0_fu_478 : component kernel_cnn_load_input_S0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_input_S0_fu_478_ap_start,
        ap_done => grp_load_input_S0_fu_478_ap_done,
        ap_idle => grp_load_input_S0_fu_478_ap_idle,
        ap_ready => grp_load_input_S0_fu_478_ap_ready,
        input_0_address0 => grp_load_input_S0_fu_478_input_0_address0,
        input_0_ce0 => grp_load_input_S0_fu_478_input_0_ce0,
        input_0_we0 => grp_load_input_S0_fu_478_input_0_we0,
        input_0_d0 => grp_load_input_S0_fu_478_input_0_d0,
        input_1_address0 => grp_load_input_S0_fu_478_input_1_address0,
        input_1_ce0 => grp_load_input_S0_fu_478_input_1_ce0,
        input_1_we0 => grp_load_input_S0_fu_478_input_1_we0,
        input_1_d0 => grp_load_input_S0_fu_478_input_1_d0,
        input_2_address0 => grp_load_input_S0_fu_478_input_2_address0,
        input_2_ce0 => grp_load_input_S0_fu_478_input_2_ce0,
        input_2_we0 => grp_load_input_S0_fu_478_input_2_we0,
        input_2_d0 => grp_load_input_S0_fu_478_input_2_d0,
        input_3_address0 => grp_load_input_S0_fu_478_input_3_address0,
        input_3_ce0 => grp_load_input_S0_fu_478_input_3_ce0,
        input_3_we0 => grp_load_input_S0_fu_478_input_3_we0,
        input_3_d0 => grp_load_input_S0_fu_478_input_3_d0,
        m_axi_kernel_input_AWVALID => grp_load_input_S0_fu_478_m_axi_kernel_input_AWVALID,
        m_axi_kernel_input_AWREADY => ap_const_logic_0,
        m_axi_kernel_input_AWADDR => grp_load_input_S0_fu_478_m_axi_kernel_input_AWADDR,
        m_axi_kernel_input_AWID => grp_load_input_S0_fu_478_m_axi_kernel_input_AWID,
        m_axi_kernel_input_AWLEN => grp_load_input_S0_fu_478_m_axi_kernel_input_AWLEN,
        m_axi_kernel_input_AWSIZE => grp_load_input_S0_fu_478_m_axi_kernel_input_AWSIZE,
        m_axi_kernel_input_AWBURST => grp_load_input_S0_fu_478_m_axi_kernel_input_AWBURST,
        m_axi_kernel_input_AWLOCK => grp_load_input_S0_fu_478_m_axi_kernel_input_AWLOCK,
        m_axi_kernel_input_AWCACHE => grp_load_input_S0_fu_478_m_axi_kernel_input_AWCACHE,
        m_axi_kernel_input_AWPROT => grp_load_input_S0_fu_478_m_axi_kernel_input_AWPROT,
        m_axi_kernel_input_AWQOS => grp_load_input_S0_fu_478_m_axi_kernel_input_AWQOS,
        m_axi_kernel_input_AWREGION => grp_load_input_S0_fu_478_m_axi_kernel_input_AWREGION,
        m_axi_kernel_input_AWUSER => grp_load_input_S0_fu_478_m_axi_kernel_input_AWUSER,
        m_axi_kernel_input_WVALID => grp_load_input_S0_fu_478_m_axi_kernel_input_WVALID,
        m_axi_kernel_input_WREADY => ap_const_logic_0,
        m_axi_kernel_input_WDATA => grp_load_input_S0_fu_478_m_axi_kernel_input_WDATA,
        m_axi_kernel_input_WSTRB => grp_load_input_S0_fu_478_m_axi_kernel_input_WSTRB,
        m_axi_kernel_input_WLAST => grp_load_input_S0_fu_478_m_axi_kernel_input_WLAST,
        m_axi_kernel_input_WID => grp_load_input_S0_fu_478_m_axi_kernel_input_WID,
        m_axi_kernel_input_WUSER => grp_load_input_S0_fu_478_m_axi_kernel_input_WUSER,
        m_axi_kernel_input_ARVALID => grp_load_input_S0_fu_478_m_axi_kernel_input_ARVALID,
        m_axi_kernel_input_ARREADY => m_axi_kernel_input_ARREADY,
        m_axi_kernel_input_ARADDR => grp_load_input_S0_fu_478_m_axi_kernel_input_ARADDR,
        m_axi_kernel_input_ARID => grp_load_input_S0_fu_478_m_axi_kernel_input_ARID,
        m_axi_kernel_input_ARLEN => grp_load_input_S0_fu_478_m_axi_kernel_input_ARLEN,
        m_axi_kernel_input_ARSIZE => grp_load_input_S0_fu_478_m_axi_kernel_input_ARSIZE,
        m_axi_kernel_input_ARBURST => grp_load_input_S0_fu_478_m_axi_kernel_input_ARBURST,
        m_axi_kernel_input_ARLOCK => grp_load_input_S0_fu_478_m_axi_kernel_input_ARLOCK,
        m_axi_kernel_input_ARCACHE => grp_load_input_S0_fu_478_m_axi_kernel_input_ARCACHE,
        m_axi_kernel_input_ARPROT => grp_load_input_S0_fu_478_m_axi_kernel_input_ARPROT,
        m_axi_kernel_input_ARQOS => grp_load_input_S0_fu_478_m_axi_kernel_input_ARQOS,
        m_axi_kernel_input_ARREGION => grp_load_input_S0_fu_478_m_axi_kernel_input_ARREGION,
        m_axi_kernel_input_ARUSER => grp_load_input_S0_fu_478_m_axi_kernel_input_ARUSER,
        m_axi_kernel_input_RVALID => m_axi_kernel_input_RVALID,
        m_axi_kernel_input_RREADY => grp_load_input_S0_fu_478_m_axi_kernel_input_RREADY,
        m_axi_kernel_input_RDATA => m_axi_kernel_input_RDATA,
        m_axi_kernel_input_RLAST => m_axi_kernel_input_RLAST,
        m_axi_kernel_input_RID => m_axi_kernel_input_RID,
        m_axi_kernel_input_RFIFONUM => m_axi_kernel_input_RFIFONUM,
        m_axi_kernel_input_RUSER => m_axi_kernel_input_RUSER,
        m_axi_kernel_input_RRESP => m_axi_kernel_input_RRESP,
        m_axi_kernel_input_BVALID => ap_const_logic_0,
        m_axi_kernel_input_BREADY => grp_load_input_S0_fu_478_m_axi_kernel_input_BREADY,
        m_axi_kernel_input_BRESP => ap_const_lv2_0,
        m_axi_kernel_input_BID => ap_const_lv1_0,
        m_axi_kernel_input_BUSER => ap_const_lv1_0,
        vinput => vinput,
        d0 => trunc_ln326_reg_999);

    grp_store_output_S0_fu_494 : component kernel_cnn_store_output_S0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_store_output_S0_fu_494_ap_start,
        ap_done => grp_store_output_S0_fu_494_ap_done,
        ap_idle => grp_store_output_S0_fu_494_ap_idle,
        ap_ready => grp_store_output_S0_fu_494_ap_ready,
        output_0_address0 => grp_store_output_S0_fu_494_output_0_address0,
        output_0_ce0 => grp_store_output_S0_fu_494_output_0_ce0,
        output_0_q0 => output_0_q0,
        output_1_address0 => grp_store_output_S0_fu_494_output_1_address0,
        output_1_ce0 => grp_store_output_S0_fu_494_output_1_ce0,
        output_1_q0 => output_1_q0,
        output_2_address0 => grp_store_output_S0_fu_494_output_2_address0,
        output_2_ce0 => grp_store_output_S0_fu_494_output_2_ce0,
        output_2_q0 => output_2_q0,
        output_3_address0 => grp_store_output_S0_fu_494_output_3_address0,
        output_3_ce0 => grp_store_output_S0_fu_494_output_3_ce0,
        output_3_q0 => output_3_q0,
        output_4_address0 => grp_store_output_S0_fu_494_output_4_address0,
        output_4_ce0 => grp_store_output_S0_fu_494_output_4_ce0,
        output_4_q0 => output_4_q0,
        output_5_address0 => grp_store_output_S0_fu_494_output_5_address0,
        output_5_ce0 => grp_store_output_S0_fu_494_output_5_ce0,
        output_5_q0 => output_5_q0,
        output_6_address0 => grp_store_output_S0_fu_494_output_6_address0,
        output_6_ce0 => grp_store_output_S0_fu_494_output_6_ce0,
        output_6_q0 => output_6_q0,
        output_7_address0 => grp_store_output_S0_fu_494_output_7_address0,
        output_7_ce0 => grp_store_output_S0_fu_494_output_7_ce0,
        output_7_q0 => output_7_q0,
        output_8_address0 => grp_store_output_S0_fu_494_output_8_address0,
        output_8_ce0 => grp_store_output_S0_fu_494_output_8_ce0,
        output_8_q0 => output_8_q0,
        output_9_address0 => grp_store_output_S0_fu_494_output_9_address0,
        output_9_ce0 => grp_store_output_S0_fu_494_output_9_ce0,
        output_9_q0 => output_9_q0,
        output_10_address0 => grp_store_output_S0_fu_494_output_10_address0,
        output_10_ce0 => grp_store_output_S0_fu_494_output_10_ce0,
        output_10_q0 => output_10_q0,
        output_11_address0 => grp_store_output_S0_fu_494_output_11_address0,
        output_11_ce0 => grp_store_output_S0_fu_494_output_11_ce0,
        output_11_q0 => output_11_q0,
        output_12_address0 => grp_store_output_S0_fu_494_output_12_address0,
        output_12_ce0 => grp_store_output_S0_fu_494_output_12_ce0,
        output_12_q0 => output_12_q0,
        output_13_address0 => grp_store_output_S0_fu_494_output_13_address0,
        output_13_ce0 => grp_store_output_S0_fu_494_output_13_ce0,
        output_13_q0 => output_13_q0,
        output_14_address0 => grp_store_output_S0_fu_494_output_14_address0,
        output_14_ce0 => grp_store_output_S0_fu_494_output_14_ce0,
        output_14_q0 => output_14_q0,
        output_15_address0 => grp_store_output_S0_fu_494_output_15_address0,
        output_15_ce0 => grp_store_output_S0_fu_494_output_15_ce0,
        output_15_q0 => output_15_q0,
        m_axi_kernel_output_AWVALID => grp_store_output_S0_fu_494_m_axi_kernel_output_AWVALID,
        m_axi_kernel_output_AWREADY => m_axi_kernel_output_AWREADY,
        m_axi_kernel_output_AWADDR => grp_store_output_S0_fu_494_m_axi_kernel_output_AWADDR,
        m_axi_kernel_output_AWID => grp_store_output_S0_fu_494_m_axi_kernel_output_AWID,
        m_axi_kernel_output_AWLEN => grp_store_output_S0_fu_494_m_axi_kernel_output_AWLEN,
        m_axi_kernel_output_AWSIZE => grp_store_output_S0_fu_494_m_axi_kernel_output_AWSIZE,
        m_axi_kernel_output_AWBURST => grp_store_output_S0_fu_494_m_axi_kernel_output_AWBURST,
        m_axi_kernel_output_AWLOCK => grp_store_output_S0_fu_494_m_axi_kernel_output_AWLOCK,
        m_axi_kernel_output_AWCACHE => grp_store_output_S0_fu_494_m_axi_kernel_output_AWCACHE,
        m_axi_kernel_output_AWPROT => grp_store_output_S0_fu_494_m_axi_kernel_output_AWPROT,
        m_axi_kernel_output_AWQOS => grp_store_output_S0_fu_494_m_axi_kernel_output_AWQOS,
        m_axi_kernel_output_AWREGION => grp_store_output_S0_fu_494_m_axi_kernel_output_AWREGION,
        m_axi_kernel_output_AWUSER => grp_store_output_S0_fu_494_m_axi_kernel_output_AWUSER,
        m_axi_kernel_output_WVALID => grp_store_output_S0_fu_494_m_axi_kernel_output_WVALID,
        m_axi_kernel_output_WREADY => m_axi_kernel_output_WREADY,
        m_axi_kernel_output_WDATA => grp_store_output_S0_fu_494_m_axi_kernel_output_WDATA,
        m_axi_kernel_output_WSTRB => grp_store_output_S0_fu_494_m_axi_kernel_output_WSTRB,
        m_axi_kernel_output_WLAST => grp_store_output_S0_fu_494_m_axi_kernel_output_WLAST,
        m_axi_kernel_output_WID => grp_store_output_S0_fu_494_m_axi_kernel_output_WID,
        m_axi_kernel_output_WUSER => grp_store_output_S0_fu_494_m_axi_kernel_output_WUSER,
        m_axi_kernel_output_ARVALID => grp_store_output_S0_fu_494_m_axi_kernel_output_ARVALID,
        m_axi_kernel_output_ARREADY => ap_const_logic_0,
        m_axi_kernel_output_ARADDR => grp_store_output_S0_fu_494_m_axi_kernel_output_ARADDR,
        m_axi_kernel_output_ARID => grp_store_output_S0_fu_494_m_axi_kernel_output_ARID,
        m_axi_kernel_output_ARLEN => grp_store_output_S0_fu_494_m_axi_kernel_output_ARLEN,
        m_axi_kernel_output_ARSIZE => grp_store_output_S0_fu_494_m_axi_kernel_output_ARSIZE,
        m_axi_kernel_output_ARBURST => grp_store_output_S0_fu_494_m_axi_kernel_output_ARBURST,
        m_axi_kernel_output_ARLOCK => grp_store_output_S0_fu_494_m_axi_kernel_output_ARLOCK,
        m_axi_kernel_output_ARCACHE => grp_store_output_S0_fu_494_m_axi_kernel_output_ARCACHE,
        m_axi_kernel_output_ARPROT => grp_store_output_S0_fu_494_m_axi_kernel_output_ARPROT,
        m_axi_kernel_output_ARQOS => grp_store_output_S0_fu_494_m_axi_kernel_output_ARQOS,
        m_axi_kernel_output_ARREGION => grp_store_output_S0_fu_494_m_axi_kernel_output_ARREGION,
        m_axi_kernel_output_ARUSER => grp_store_output_S0_fu_494_m_axi_kernel_output_ARUSER,
        m_axi_kernel_output_RVALID => ap_const_logic_0,
        m_axi_kernel_output_RREADY => grp_store_output_S0_fu_494_m_axi_kernel_output_RREADY,
        m_axi_kernel_output_RDATA => ap_const_lv512_lc_1,
        m_axi_kernel_output_RLAST => ap_const_logic_0,
        m_axi_kernel_output_RID => ap_const_lv1_0,
        m_axi_kernel_output_RFIFONUM => ap_const_lv9_0,
        m_axi_kernel_output_RUSER => ap_const_lv1_0,
        m_axi_kernel_output_RRESP => ap_const_lv2_0,
        m_axi_kernel_output_BVALID => m_axi_kernel_output_BVALID,
        m_axi_kernel_output_BREADY => grp_store_output_S0_fu_494_m_axi_kernel_output_BREADY,
        m_axi_kernel_output_BRESP => m_axi_kernel_output_BRESP,
        m_axi_kernel_output_BID => m_axi_kernel_output_BID,
        m_axi_kernel_output_BUSER => m_axi_kernel_output_BUSER,
        voutput => voutput,
        d0 => trunc_ln304_reg_984);

    grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534 : component kernel_cnn_cnn_Pipeline_VITIS_LOOP_329_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_start,
        ap_done => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_done,
        ap_idle => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_idle,
        ap_ready => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_ready,
        input_0_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address0,
        input_0_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce0,
        input_0_q0 => input_0_q0,
        input_0_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address1,
        input_0_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce1,
        input_0_q1 => input_0_q1,
        input_0_address2 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address2,
        input_0_ce2 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce2,
        input_0_q2 => input_0_q2,
        input_0_address3 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address3,
        input_0_ce3 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce3,
        input_0_q3 => input_0_q3,
        input_0_address4 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address4,
        input_0_ce4 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce4,
        input_0_q4 => input_0_q4,
        input_0_address5 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address5,
        input_0_ce5 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce5,
        input_0_q5 => input_0_q5,
        input_0_address6 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address6,
        input_0_ce6 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce6,
        input_0_q6 => input_0_q6,
        input_0_address7 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address7,
        input_0_ce7 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce7,
        input_0_q7 => input_0_q7,
        input_0_address8 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address8,
        input_0_ce8 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce8,
        input_0_q8 => input_0_q8,
        input_0_address9 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address9,
        input_0_ce9 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce9,
        input_0_q9 => input_0_q9,
        input_0_address10 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address10,
        input_0_ce10 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce10,
        input_0_q10 => input_0_q10,
        input_0_address11 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address11,
        input_0_ce11 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce11,
        input_0_q11 => input_0_q11,
        input_0_address12 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address12,
        input_0_ce12 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce12,
        input_0_q12 => input_0_q12,
        input_0_address13 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address13,
        input_0_ce13 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce13,
        input_0_q13 => input_0_q13,
        input_0_address14 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address14,
        input_0_ce14 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce14,
        input_0_q14 => input_0_q14,
        input_0_address15 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address15,
        input_0_ce15 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce15,
        input_0_q15 => input_0_q15,
        input_0_address16 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address16,
        input_0_ce16 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce16,
        input_0_q16 => input_0_q16,
        input_1_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address0,
        input_1_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce0,
        input_1_q0 => input_1_q0,
        input_1_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address1,
        input_1_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce1,
        input_1_q1 => input_1_q1,
        input_1_address2 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address2,
        input_1_ce2 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce2,
        input_1_q2 => input_1_q2,
        input_1_address3 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address3,
        input_1_ce3 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce3,
        input_1_q3 => input_1_q3,
        input_1_address4 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address4,
        input_1_ce4 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce4,
        input_1_q4 => input_1_q4,
        input_1_address5 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address5,
        input_1_ce5 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce5,
        input_1_q5 => input_1_q5,
        input_1_address6 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address6,
        input_1_ce6 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce6,
        input_1_q6 => input_1_q6,
        input_1_address7 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address7,
        input_1_ce7 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce7,
        input_1_q7 => input_1_q7,
        input_1_address8 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address8,
        input_1_ce8 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce8,
        input_1_q8 => input_1_q8,
        input_1_address9 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address9,
        input_1_ce9 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce9,
        input_1_q9 => input_1_q9,
        input_1_address10 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address10,
        input_1_ce10 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce10,
        input_1_q10 => input_1_q10,
        input_1_address11 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address11,
        input_1_ce11 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce11,
        input_1_q11 => input_1_q11,
        input_1_address12 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address12,
        input_1_ce12 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce12,
        input_1_q12 => input_1_q12,
        input_1_address13 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address13,
        input_1_ce13 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce13,
        input_1_q13 => input_1_q13,
        input_1_address14 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address14,
        input_1_ce14 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce14,
        input_1_q14 => input_1_q14,
        input_1_address15 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address15,
        input_1_ce15 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce15,
        input_1_q15 => input_1_q15,
        input_1_address16 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address16,
        input_1_ce16 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce16,
        input_1_q16 => input_1_q16,
        input_2_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address0,
        input_2_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce0,
        input_2_q0 => input_2_q0,
        input_2_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address1,
        input_2_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce1,
        input_2_q1 => input_2_q1,
        input_2_address2 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address2,
        input_2_ce2 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce2,
        input_2_q2 => input_2_q2,
        input_2_address3 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address3,
        input_2_ce3 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce3,
        input_2_q3 => input_2_q3,
        input_2_address4 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address4,
        input_2_ce4 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce4,
        input_2_q4 => input_2_q4,
        input_2_address5 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address5,
        input_2_ce5 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce5,
        input_2_q5 => input_2_q5,
        input_2_address6 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address6,
        input_2_ce6 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce6,
        input_2_q6 => input_2_q6,
        input_2_address7 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address7,
        input_2_ce7 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce7,
        input_2_q7 => input_2_q7,
        input_2_address8 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address8,
        input_2_ce8 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce8,
        input_2_q8 => input_2_q8,
        input_2_address9 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address9,
        input_2_ce9 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce9,
        input_2_q9 => input_2_q9,
        input_2_address10 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address10,
        input_2_ce10 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce10,
        input_2_q10 => input_2_q10,
        input_2_address11 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address11,
        input_2_ce11 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce11,
        input_2_q11 => input_2_q11,
        input_2_address12 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address12,
        input_2_ce12 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce12,
        input_2_q12 => input_2_q12,
        input_2_address13 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address13,
        input_2_ce13 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce13,
        input_2_q13 => input_2_q13,
        input_2_address14 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address14,
        input_2_ce14 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce14,
        input_2_q14 => input_2_q14,
        input_2_address15 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address15,
        input_2_ce15 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce15,
        input_2_q15 => input_2_q15,
        input_2_address16 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address16,
        input_2_ce16 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce16,
        input_2_q16 => input_2_q16,
        input_3_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address0,
        input_3_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce0,
        input_3_q0 => input_3_q0,
        input_3_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address1,
        input_3_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce1,
        input_3_q1 => input_3_q1,
        input_3_address2 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address2,
        input_3_ce2 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce2,
        input_3_q2 => input_3_q2,
        input_3_address3 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address3,
        input_3_ce3 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce3,
        input_3_q3 => input_3_q3,
        input_3_address4 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address4,
        input_3_ce4 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce4,
        input_3_q4 => input_3_q4,
        input_3_address5 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address5,
        input_3_ce5 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce5,
        input_3_q5 => input_3_q5,
        input_3_address6 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address6,
        input_3_ce6 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce6,
        input_3_q6 => input_3_q6,
        input_3_address7 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address7,
        input_3_ce7 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce7,
        input_3_q7 => input_3_q7,
        input_3_address8 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address8,
        input_3_ce8 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce8,
        input_3_q8 => input_3_q8,
        input_3_address9 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address9,
        input_3_ce9 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce9,
        input_3_q9 => input_3_q9,
        input_3_address10 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address10,
        input_3_ce10 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce10,
        input_3_q10 => input_3_q10,
        input_3_address11 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address11,
        input_3_ce11 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce11,
        input_3_q11 => input_3_q11,
        input_3_address12 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address12,
        input_3_ce12 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce12,
        input_3_q12 => input_3_q12,
        input_3_address13 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address13,
        input_3_ce13 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce13,
        input_3_q13 => input_3_q13,
        input_3_address14 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address14,
        input_3_ce14 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce14,
        input_3_q14 => input_3_q14,
        input_3_address15 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address15,
        input_3_ce15 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce15,
        input_3_q15 => input_3_q15,
        input_3_address16 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address16,
        input_3_ce16 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce16,
        input_3_q16 => input_3_q16,
        empty => empty_reg_1017,
        output_0_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_address0,
        output_0_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_ce0,
        output_0_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_we0,
        output_0_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_d0,
        output_0_q0 => output_0_q0,
        output_0_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_address1,
        output_0_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_ce1,
        output_0_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_we1,
        output_0_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_d1,
        output_0_q1 => output_0_q1,
        output_1_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_address0,
        output_1_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_ce0,
        output_1_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_we0,
        output_1_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_d0,
        output_1_q0 => output_1_q0,
        output_1_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_address1,
        output_1_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_ce1,
        output_1_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_we1,
        output_1_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_d1,
        output_1_q1 => output_1_q1,
        output_2_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_address0,
        output_2_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_ce0,
        output_2_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_we0,
        output_2_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_d0,
        output_2_q0 => output_2_q0,
        output_2_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_address1,
        output_2_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_ce1,
        output_2_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_we1,
        output_2_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_d1,
        output_2_q1 => output_2_q1,
        output_3_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_address0,
        output_3_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_ce0,
        output_3_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_we0,
        output_3_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_d0,
        output_3_q0 => output_3_q0,
        output_3_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_address1,
        output_3_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_ce1,
        output_3_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_we1,
        output_3_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_d1,
        output_3_q1 => output_3_q1,
        output_4_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_address0,
        output_4_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_ce0,
        output_4_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_we0,
        output_4_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_d0,
        output_4_q0 => output_4_q0,
        output_4_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_address1,
        output_4_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_ce1,
        output_4_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_we1,
        output_4_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_d1,
        output_4_q1 => output_4_q1,
        output_5_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_address0,
        output_5_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_ce0,
        output_5_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_we0,
        output_5_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_d0,
        output_5_q0 => output_5_q0,
        output_5_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_address1,
        output_5_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_ce1,
        output_5_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_we1,
        output_5_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_d1,
        output_5_q1 => output_5_q1,
        output_6_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_address0,
        output_6_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_ce0,
        output_6_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_we0,
        output_6_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_d0,
        output_6_q0 => output_6_q0,
        output_6_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_address1,
        output_6_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_ce1,
        output_6_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_we1,
        output_6_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_d1,
        output_6_q1 => output_6_q1,
        output_7_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_address0,
        output_7_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_ce0,
        output_7_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_we0,
        output_7_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_d0,
        output_7_q0 => output_7_q0,
        output_7_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_address1,
        output_7_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_ce1,
        output_7_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_we1,
        output_7_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_d1,
        output_7_q1 => output_7_q1,
        output_8_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_address0,
        output_8_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_ce0,
        output_8_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_we0,
        output_8_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_d0,
        output_8_q0 => output_8_q0,
        output_8_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_address1,
        output_8_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_ce1,
        output_8_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_we1,
        output_8_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_d1,
        output_8_q1 => output_8_q1,
        output_9_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_address0,
        output_9_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_ce0,
        output_9_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_we0,
        output_9_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_d0,
        output_9_q0 => output_9_q0,
        output_9_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_address1,
        output_9_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_ce1,
        output_9_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_we1,
        output_9_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_d1,
        output_9_q1 => output_9_q1,
        output_10_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_address0,
        output_10_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_ce0,
        output_10_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_we0,
        output_10_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_d0,
        output_10_q0 => output_10_q0,
        output_10_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_address1,
        output_10_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_ce1,
        output_10_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_we1,
        output_10_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_d1,
        output_10_q1 => output_10_q1,
        output_11_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_address0,
        output_11_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_ce0,
        output_11_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_we0,
        output_11_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_d0,
        output_11_q0 => output_11_q0,
        output_11_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_address1,
        output_11_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_ce1,
        output_11_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_we1,
        output_11_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_d1,
        output_11_q1 => output_11_q1,
        output_12_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_address0,
        output_12_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_ce0,
        output_12_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_we0,
        output_12_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_d0,
        output_12_q0 => output_12_q0,
        output_12_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_address1,
        output_12_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_ce1,
        output_12_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_we1,
        output_12_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_d1,
        output_12_q1 => output_12_q1,
        output_13_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_address0,
        output_13_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_ce0,
        output_13_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_we0,
        output_13_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_d0,
        output_13_q0 => output_13_q0,
        output_13_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_address1,
        output_13_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_ce1,
        output_13_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_we1,
        output_13_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_d1,
        output_13_q1 => output_13_q1,
        output_14_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_address0,
        output_14_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_ce0,
        output_14_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_we0,
        output_14_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_d0,
        output_14_q0 => output_14_q0,
        output_14_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_address1,
        output_14_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_ce1,
        output_14_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_we1,
        output_14_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_d1,
        output_14_q1 => output_14_q1,
        output_15_address0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_address0,
        output_15_ce0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_ce0,
        output_15_we0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_we0,
        output_15_d0 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_d0,
        output_15_q0 => output_15_q0,
        output_15_address1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_address1,
        output_15_ce1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_ce1,
        output_15_we1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_we1,
        output_15_d1 => grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_d1,
        output_15_q1 => output_15_q1,
        weight_load => weight_load_reg_1065,
        weight_load_1 => weight_load_1_reg_1080,
        weight_load_2 => weight_load_2_reg_1085,
        weight_load_3 => weight_load_3_reg_1100,
        weight_load_4 => weight_load_4_reg_1105,
        weight_load_5 => weight_load_5_reg_1120,
        weight_load_6 => weight_load_6_reg_1125,
        weight_load_7 => weight_load_7_reg_1140,
        weight_load_8 => weight_load_8_reg_1145,
        weight_load_9 => weight_load_9_reg_1160,
        weight_load_10 => weight_load_10_reg_1165,
        weight_load_11 => weight_load_11_reg_1180,
        weight_load_12 => weight_load_12_reg_1185,
        weight_load_13 => weight_load_13_reg_1200,
        weight_load_14 => weight_load_14_reg_1205,
        weight_load_15 => weight_load_15_reg_1220,
        weight_load_16 => weight_load_16_reg_1225,
        weight_load_17 => weight_load_17_reg_1240,
        weight_load_18 => weight_load_18_reg_1245,
        weight_load_19 => weight_load_19_reg_1260,
        weight_load_20 => weight_load_20_reg_1265,
        weight_load_21 => weight_load_21_reg_1280,
        weight_load_22 => weight_load_22_reg_1285,
        weight_load_23 => weight_load_23_reg_1290,
        weight_load_24 => weight_load_24_reg_1295);

    am_addmul_13ns_9ns_5ns_19_4_1_U817 : component kernel_cnn_am_addmul_13ns_9ns_5ns_19_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 13,
        din1_WIDTH => 9,
        din2_WIDTH => 5,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_944_p0,
        din1 => grp_fu_944_p1,
        din2 => grp_fu_944_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_944_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                    grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_input_S0_fu_478_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_input_S0_fu_478_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln319_fu_630_p2 = ap_const_lv1_0))) then 
                    grp_load_input_S0_fu_478_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_input_S0_fu_478_ap_ready = ap_const_logic_1)) then 
                    grp_load_input_S0_fu_478_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_output_S0_fu_438_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_output_S0_fu_438_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln304_fu_612_p2 = ap_const_lv1_0))) then 
                    grp_load_output_S0_fu_438_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_output_S0_fu_438_ap_ready = ap_const_logic_1)) then 
                    grp_load_output_S0_fu_438_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_weight_S0_fu_428_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_weight_S0_fu_428_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln304_fu_612_p2 = ap_const_lv1_0))) then 
                    grp_load_weight_S0_fu_428_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_weight_S0_fu_428_ap_ready = ap_const_logic_1)) then 
                    grp_load_weight_S0_fu_428_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_store_output_S0_fu_494_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_store_output_S0_fu_494_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln319_fu_630_p2 = ap_const_lv1_1))) then 
                    grp_store_output_S0_fu_494_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_store_output_S0_fu_494_ap_ready = ap_const_logic_1)) then 
                    grp_store_output_S0_fu_494_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i0_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i0_fu_174 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln319_fu_630_p2 = ap_const_lv1_1))) then 
                i0_fu_174 <= i0_2_reg_979;
            end if; 
        end if;
    end process;

    i1_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_load_input_S0_fu_478_ap_done = ap_const_logic_1))) then 
                i1_reg_417 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state24) and (grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_done = ap_const_logic_1))) then 
                i1_reg_417 <= add_ln328_reg_1012;
            end if; 
        end if;
    end process;

    j_reg_405_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done))) then 
                j_reg_405 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln328_fu_655_p2 = ap_const_lv1_1))) then 
                j_reg_405 <= add_ln319_reg_994;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln319_reg_994 <= add_ln319_fu_636_p2;
                trunc_ln326_reg_999 <= trunc_ln326_fu_642_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln328_reg_1012 <= add_ln328_fu_661_p2;
                    empty_reg_1017(13 downto 5) <= empty_fu_691_p2(13 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i0_2_reg_979 <= i0_2_fu_618_p2;
                trunc_ln304_reg_984 <= trunc_ln304_fu_624_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                trunc_ln349_reg_1022 <= trunc_ln349_fu_701_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                weight_load_10_reg_1165 <= weight_q1;
                weight_load_9_reg_1160 <= weight_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                weight_load_11_reg_1180 <= weight_q0;
                weight_load_12_reg_1185 <= weight_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                weight_load_13_reg_1200 <= weight_q0;
                weight_load_14_reg_1205 <= weight_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                weight_load_15_reg_1220 <= weight_q0;
                weight_load_16_reg_1225 <= weight_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                weight_load_17_reg_1240 <= weight_q0;
                weight_load_18_reg_1245 <= weight_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                weight_load_19_reg_1260 <= weight_q0;
                weight_load_20_reg_1265 <= weight_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                weight_load_1_reg_1080 <= weight_q1;
                weight_load_2_reg_1085 <= weight_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                weight_load_21_reg_1280 <= weight_q0;
                weight_load_22_reg_1285 <= weight_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                weight_load_23_reg_1290 <= weight_q0;
                weight_load_24_reg_1295 <= weight_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                weight_load_3_reg_1100 <= weight_q0;
                weight_load_4_reg_1105 <= weight_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                weight_load_5_reg_1120 <= weight_q0;
                weight_load_6_reg_1125 <= weight_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                weight_load_7_reg_1140 <= weight_q0;
                weight_load_8_reg_1145 <= weight_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                weight_load_reg_1065 <= weight_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    zext_ln319_reg_1004(8 downto 0) <= zext_ln319_fu_651_p1(8 downto 0);
            end if;
        end if;
    end process;
    zext_ln319_reg_1004(13 downto 9) <= "00000";
    empty_reg_1017(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_load_input_S0_fu_478_ap_done, grp_store_output_S0_fu_494_ap_done, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_done, icmp_ln328_fu_655_p2, ap_CS_fsm_state3, ap_block_state3_on_subcall_done, ap_CS_fsm_state24, icmp_ln304_fu_612_p2, icmp_ln319_fu_630_p2, ap_CS_fsm_state25)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln304_fu_612_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln319_fu_630_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_load_input_S0_fu_478_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln328_fu_655_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and (grp_store_output_S0_fu_494_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln319_fu_636_p2 <= std_logic_vector(unsigned(j_reg_405) + unsigned(ap_const_lv9_1));
    add_ln328_fu_661_p2 <= std_logic_vector(unsigned(i1_reg_417) + unsigned(ap_const_lv5_1));
    add_ln349_1_fu_884_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_14));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_done)
    begin
        if ((grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state25_blk_assign_proc : process(grp_store_output_S0_fu_494_ap_done)
    begin
        if ((grp_store_output_S0_fu_494_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state3_on_subcall_done)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_load_input_S0_fu_478_ap_done)
    begin
        if ((grp_load_input_S0_fu_478_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state3_on_subcall_done_assign_proc : process(grp_load_weight_S0_fu_428_ap_done, grp_load_output_S0_fu_438_ap_done)
    begin
                ap_block_state3_on_subcall_done <= ((grp_load_output_S0_fu_438_ap_done = ap_const_logic_0) or (grp_load_weight_S0_fu_428_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln304_fu_612_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln304_fu_612_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln304_fu_612_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln304_fu_612_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_49_fu_704_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_1));
    empty_50_fu_714_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_2));
    empty_51_fu_724_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_3));
    empty_52_fu_734_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_4));
    empty_53_fu_744_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_5));
    empty_54_fu_754_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_6));
    empty_55_fu_764_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_7));
    empty_56_fu_774_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_8));
    empty_57_fu_784_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_9));
    empty_58_fu_794_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_A));
    empty_59_fu_804_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_B));
    empty_60_fu_814_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_C));
    empty_61_fu_824_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_D));
    empty_62_fu_834_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_E));
    empty_63_fu_844_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_F));
    empty_64_fu_854_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_10));
    empty_65_fu_864_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_11));
    empty_66_fu_874_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_12));
    empty_67_fu_894_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_13));
    empty_68_fu_904_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_15));
    empty_69_fu_914_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_16));
    empty_70_fu_924_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_17));
    empty_71_fu_934_p2 <= std_logic_vector(unsigned(trunc_ln349_reg_1022) + unsigned(ap_const_lv17_18));
    empty_fu_691_p2 <= std_logic_vector(unsigned(tmp_9_cast_fu_675_p1) - unsigned(tmp_10_cast_fu_687_p1));
    grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_start <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_ap_start_reg;
    grp_fu_944_p0 <= tmp_9_cast_fu_675_p1(13 - 1 downto 0);
    grp_fu_944_p1 <= zext_ln319_reg_1004(9 - 1 downto 0);
    grp_fu_944_p2 <= ap_const_lv19_19(5 - 1 downto 0);
    grp_load_input_S0_fu_478_ap_start <= grp_load_input_S0_fu_478_ap_start_reg;
    grp_load_output_S0_fu_438_ap_start <= grp_load_output_S0_fu_438_ap_start_reg;
    grp_load_weight_S0_fu_428_ap_start <= grp_load_weight_S0_fu_428_ap_start_reg;
    grp_store_output_S0_fu_494_ap_start <= grp_store_output_S0_fu_494_ap_start_reg;
    i0_2_fu_618_p2 <= std_logic_vector(unsigned(i0_fu_174) + unsigned(ap_const_lv5_1));
    icmp_ln304_fu_612_p2 <= "1" when (i0_fu_174 = ap_const_lv5_10) else "0";
    icmp_ln319_fu_630_p2 <= "1" when (j_reg_405 = ap_const_lv9_100) else "0";
    icmp_ln328_fu_655_p2 <= "1" when (i1_reg_417 = ap_const_lv5_10) else "0";

    input_0_address0_assign_proc : process(ap_CS_fsm_state5, grp_load_input_S0_fu_478_input_0_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address0, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_0_address0 <= grp_load_input_S0_fu_478_input_0_address0;
        else 
            input_0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    input_0_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address1;
    input_0_address10 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address10;
    input_0_address11 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address11;
    input_0_address12 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address12;
    input_0_address13 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address13;
    input_0_address14 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address14;
    input_0_address15 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address15;
    input_0_address16 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address16;
    input_0_address2 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address2;
    input_0_address3 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address3;
    input_0_address4 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address4;
    input_0_address5 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address5;
    input_0_address6 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address6;
    input_0_address7 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address7;
    input_0_address8 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address8;
    input_0_address9 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_address9;

    input_0_ce0_assign_proc : process(ap_CS_fsm_state5, grp_load_input_S0_fu_478_input_0_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce0, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_0_ce0 <= grp_load_input_S0_fu_478_input_0_ce0;
        else 
            input_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce1;
        else 
            input_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce10_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce10, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce10 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce10;
        else 
            input_0_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce11_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce11, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce11 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce11;
        else 
            input_0_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce12_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce12, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce12 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce12;
        else 
            input_0_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce13_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce13, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce13 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce13;
        else 
            input_0_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce14_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce14, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce14 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce14;
        else 
            input_0_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce15_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce15, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce15 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce15;
        else 
            input_0_ce15 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce16_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce16, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce16 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce16;
        else 
            input_0_ce16 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce2_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce2, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce2 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce2;
        else 
            input_0_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce3_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce3 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce3;
        else 
            input_0_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce4_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce4, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce4 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce4;
        else 
            input_0_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce5_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce5, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce5 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce5;
        else 
            input_0_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce6_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce6, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce6 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce6;
        else 
            input_0_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce7_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce7, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce7 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce7;
        else 
            input_0_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce8_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce8, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce8 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce8;
        else 
            input_0_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce9_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce9, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_0_ce9 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_0_ce9;
        else 
            input_0_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    input_0_d0 <= grp_load_input_S0_fu_478_input_0_d0;

    input_0_we0_assign_proc : process(ap_CS_fsm_state5, grp_load_input_S0_fu_478_input_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_0_we0 <= grp_load_input_S0_fu_478_input_0_we0;
        else 
            input_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_address0_assign_proc : process(ap_CS_fsm_state5, grp_load_input_S0_fu_478_input_1_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address0, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_1_address0 <= grp_load_input_S0_fu_478_input_1_address0;
        else 
            input_1_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    input_1_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address1;
    input_1_address10 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address10;
    input_1_address11 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address11;
    input_1_address12 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address12;
    input_1_address13 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address13;
    input_1_address14 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address14;
    input_1_address15 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address15;
    input_1_address16 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address16;
    input_1_address2 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address2;
    input_1_address3 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address3;
    input_1_address4 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address4;
    input_1_address5 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address5;
    input_1_address6 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address6;
    input_1_address7 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address7;
    input_1_address8 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address8;
    input_1_address9 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_address9;

    input_1_ce0_assign_proc : process(ap_CS_fsm_state5, grp_load_input_S0_fu_478_input_1_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce0, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_1_ce0 <= grp_load_input_S0_fu_478_input_1_ce0;
        else 
            input_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce1;
        else 
            input_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce10_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce10, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce10 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce10;
        else 
            input_1_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce11_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce11, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce11 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce11;
        else 
            input_1_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce12_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce12, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce12 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce12;
        else 
            input_1_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce13_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce13, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce13 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce13;
        else 
            input_1_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce14_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce14, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce14 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce14;
        else 
            input_1_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce15_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce15, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce15 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce15;
        else 
            input_1_ce15 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce16_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce16, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce16 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce16;
        else 
            input_1_ce16 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce2_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce2, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce2 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce2;
        else 
            input_1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce3_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce3 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce3;
        else 
            input_1_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce4_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce4, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce4 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce4;
        else 
            input_1_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce5_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce5, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce5 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce5;
        else 
            input_1_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce6_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce6, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce6 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce6;
        else 
            input_1_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce7_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce7, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce7 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce7;
        else 
            input_1_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce8_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce8, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce8 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce8;
        else 
            input_1_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce9_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce9, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_1_ce9 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_1_ce9;
        else 
            input_1_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    input_1_d0 <= grp_load_input_S0_fu_478_input_1_d0;

    input_1_we0_assign_proc : process(ap_CS_fsm_state5, grp_load_input_S0_fu_478_input_1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_1_we0 <= grp_load_input_S0_fu_478_input_1_we0;
        else 
            input_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_address0_assign_proc : process(ap_CS_fsm_state5, grp_load_input_S0_fu_478_input_2_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address0, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_2_address0 <= grp_load_input_S0_fu_478_input_2_address0;
        else 
            input_2_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    input_2_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address1;
    input_2_address10 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address10;
    input_2_address11 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address11;
    input_2_address12 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address12;
    input_2_address13 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address13;
    input_2_address14 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address14;
    input_2_address15 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address15;
    input_2_address16 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address16;
    input_2_address2 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address2;
    input_2_address3 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address3;
    input_2_address4 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address4;
    input_2_address5 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address5;
    input_2_address6 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address6;
    input_2_address7 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address7;
    input_2_address8 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address8;
    input_2_address9 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_address9;

    input_2_ce0_assign_proc : process(ap_CS_fsm_state5, grp_load_input_S0_fu_478_input_2_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce0, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_2_ce0 <= grp_load_input_S0_fu_478_input_2_ce0;
        else 
            input_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce1;
        else 
            input_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce10_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce10, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce10 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce10;
        else 
            input_2_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce11_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce11, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce11 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce11;
        else 
            input_2_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce12_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce12, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce12 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce12;
        else 
            input_2_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce13_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce13, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce13 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce13;
        else 
            input_2_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce14_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce14, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce14 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce14;
        else 
            input_2_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce15_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce15, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce15 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce15;
        else 
            input_2_ce15 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce16_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce16, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce16 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce16;
        else 
            input_2_ce16 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce2_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce2, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce2 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce2;
        else 
            input_2_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce3_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce3 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce3;
        else 
            input_2_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce4_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce4, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce4 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce4;
        else 
            input_2_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce5_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce5, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce5 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce5;
        else 
            input_2_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce6_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce6, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce6 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce6;
        else 
            input_2_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce7_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce7, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce7 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce7;
        else 
            input_2_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce8_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce8, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce8 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce8;
        else 
            input_2_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce9_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce9, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_2_ce9 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_2_ce9;
        else 
            input_2_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    input_2_d0 <= grp_load_input_S0_fu_478_input_2_d0;

    input_2_we0_assign_proc : process(ap_CS_fsm_state5, grp_load_input_S0_fu_478_input_2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_2_we0 <= grp_load_input_S0_fu_478_input_2_we0;
        else 
            input_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_address0_assign_proc : process(ap_CS_fsm_state5, grp_load_input_S0_fu_478_input_3_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address0, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_3_address0 <= grp_load_input_S0_fu_478_input_3_address0;
        else 
            input_3_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    input_3_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address1;
    input_3_address10 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address10;
    input_3_address11 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address11;
    input_3_address12 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address12;
    input_3_address13 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address13;
    input_3_address14 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address14;
    input_3_address15 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address15;
    input_3_address16 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address16;
    input_3_address2 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address2;
    input_3_address3 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address3;
    input_3_address4 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address4;
    input_3_address5 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address5;
    input_3_address6 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address6;
    input_3_address7 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address7;
    input_3_address8 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address8;
    input_3_address9 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_address9;

    input_3_ce0_assign_proc : process(ap_CS_fsm_state5, grp_load_input_S0_fu_478_input_3_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce0, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_3_ce0 <= grp_load_input_S0_fu_478_input_3_ce0;
        else 
            input_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce1;
        else 
            input_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce10_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce10, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce10 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce10;
        else 
            input_3_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce11_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce11, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce11 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce11;
        else 
            input_3_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce12_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce12, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce12 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce12;
        else 
            input_3_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce13_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce13, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce13 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce13;
        else 
            input_3_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce14_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce14, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce14 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce14;
        else 
            input_3_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce15_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce15, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce15 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce15;
        else 
            input_3_ce15 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce16_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce16, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce16 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce16;
        else 
            input_3_ce16 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce2_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce2, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce2 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce2;
        else 
            input_3_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce3_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce3 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce3;
        else 
            input_3_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce4_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce4, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce4 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce4;
        else 
            input_3_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce5_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce5, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce5 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce5;
        else 
            input_3_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce6_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce6, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce6 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce6;
        else 
            input_3_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce7_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce7, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce7 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce7;
        else 
            input_3_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce8_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce8, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce8 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce8;
        else 
            input_3_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    input_3_ce9_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce9, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            input_3_ce9 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_input_3_ce9;
        else 
            input_3_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    input_3_d0 <= grp_load_input_S0_fu_478_input_3_d0;

    input_3_we0_assign_proc : process(ap_CS_fsm_state5, grp_load_input_S0_fu_478_input_3_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_3_we0 <= grp_load_input_S0_fu_478_input_3_we0;
        else 
            input_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_kernel_input_ARADDR <= grp_load_input_S0_fu_478_m_axi_kernel_input_ARADDR;
    m_axi_kernel_input_ARBURST <= grp_load_input_S0_fu_478_m_axi_kernel_input_ARBURST;
    m_axi_kernel_input_ARCACHE <= grp_load_input_S0_fu_478_m_axi_kernel_input_ARCACHE;
    m_axi_kernel_input_ARID <= grp_load_input_S0_fu_478_m_axi_kernel_input_ARID;
    m_axi_kernel_input_ARLEN <= grp_load_input_S0_fu_478_m_axi_kernel_input_ARLEN;
    m_axi_kernel_input_ARLOCK <= grp_load_input_S0_fu_478_m_axi_kernel_input_ARLOCK;
    m_axi_kernel_input_ARPROT <= grp_load_input_S0_fu_478_m_axi_kernel_input_ARPROT;
    m_axi_kernel_input_ARQOS <= grp_load_input_S0_fu_478_m_axi_kernel_input_ARQOS;
    m_axi_kernel_input_ARREGION <= grp_load_input_S0_fu_478_m_axi_kernel_input_ARREGION;
    m_axi_kernel_input_ARSIZE <= grp_load_input_S0_fu_478_m_axi_kernel_input_ARSIZE;
    m_axi_kernel_input_ARUSER <= grp_load_input_S0_fu_478_m_axi_kernel_input_ARUSER;

    m_axi_kernel_input_ARVALID_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, grp_load_input_S0_fu_478_m_axi_kernel_input_ARVALID, icmp_ln319_fu_630_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln319_fu_630_p2 = ap_const_lv1_0)))) then 
            m_axi_kernel_input_ARVALID <= grp_load_input_S0_fu_478_m_axi_kernel_input_ARVALID;
        else 
            m_axi_kernel_input_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_kernel_input_AWADDR <= ap_const_lv64_0;
    m_axi_kernel_input_AWBURST <= ap_const_lv2_0;
    m_axi_kernel_input_AWCACHE <= ap_const_lv4_0;
    m_axi_kernel_input_AWID <= ap_const_lv1_0;
    m_axi_kernel_input_AWLEN <= ap_const_lv32_0;
    m_axi_kernel_input_AWLOCK <= ap_const_lv2_0;
    m_axi_kernel_input_AWPROT <= ap_const_lv3_0;
    m_axi_kernel_input_AWQOS <= ap_const_lv4_0;
    m_axi_kernel_input_AWREGION <= ap_const_lv4_0;
    m_axi_kernel_input_AWSIZE <= ap_const_lv3_0;
    m_axi_kernel_input_AWUSER <= ap_const_lv1_0;
    m_axi_kernel_input_AWVALID <= ap_const_logic_0;
    m_axi_kernel_input_BREADY <= ap_const_logic_0;

    m_axi_kernel_input_RREADY_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, grp_load_input_S0_fu_478_m_axi_kernel_input_RREADY, icmp_ln319_fu_630_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln319_fu_630_p2 = ap_const_lv1_0)))) then 
            m_axi_kernel_input_RREADY <= grp_load_input_S0_fu_478_m_axi_kernel_input_RREADY;
        else 
            m_axi_kernel_input_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_kernel_input_WDATA <= ap_const_lv128_lc_1;
    m_axi_kernel_input_WID <= ap_const_lv1_0;
    m_axi_kernel_input_WLAST <= ap_const_logic_0;
    m_axi_kernel_input_WSTRB <= ap_const_lv16_0;
    m_axi_kernel_input_WUSER <= ap_const_lv1_0;
    m_axi_kernel_input_WVALID <= ap_const_logic_0;
    m_axi_kernel_output_ARADDR <= grp_load_output_S0_fu_438_m_axi_kernel_output_ARADDR;
    m_axi_kernel_output_ARBURST <= grp_load_output_S0_fu_438_m_axi_kernel_output_ARBURST;
    m_axi_kernel_output_ARCACHE <= grp_load_output_S0_fu_438_m_axi_kernel_output_ARCACHE;
    m_axi_kernel_output_ARID <= grp_load_output_S0_fu_438_m_axi_kernel_output_ARID;
    m_axi_kernel_output_ARLEN <= grp_load_output_S0_fu_438_m_axi_kernel_output_ARLEN;
    m_axi_kernel_output_ARLOCK <= grp_load_output_S0_fu_438_m_axi_kernel_output_ARLOCK;
    m_axi_kernel_output_ARPROT <= grp_load_output_S0_fu_438_m_axi_kernel_output_ARPROT;
    m_axi_kernel_output_ARQOS <= grp_load_output_S0_fu_438_m_axi_kernel_output_ARQOS;
    m_axi_kernel_output_ARREGION <= grp_load_output_S0_fu_438_m_axi_kernel_output_ARREGION;
    m_axi_kernel_output_ARSIZE <= grp_load_output_S0_fu_438_m_axi_kernel_output_ARSIZE;
    m_axi_kernel_output_ARUSER <= grp_load_output_S0_fu_438_m_axi_kernel_output_ARUSER;

    m_axi_kernel_output_ARVALID_assign_proc : process(ap_CS_fsm_state2, grp_load_output_S0_fu_438_m_axi_kernel_output_ARVALID, ap_CS_fsm_state3, icmp_ln304_fu_612_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln304_fu_612_p2 = ap_const_lv1_0)))) then 
            m_axi_kernel_output_ARVALID <= grp_load_output_S0_fu_438_m_axi_kernel_output_ARVALID;
        else 
            m_axi_kernel_output_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_kernel_output_AWADDR <= grp_store_output_S0_fu_494_m_axi_kernel_output_AWADDR;
    m_axi_kernel_output_AWBURST <= grp_store_output_S0_fu_494_m_axi_kernel_output_AWBURST;
    m_axi_kernel_output_AWCACHE <= grp_store_output_S0_fu_494_m_axi_kernel_output_AWCACHE;
    m_axi_kernel_output_AWID <= grp_store_output_S0_fu_494_m_axi_kernel_output_AWID;
    m_axi_kernel_output_AWLEN <= grp_store_output_S0_fu_494_m_axi_kernel_output_AWLEN;
    m_axi_kernel_output_AWLOCK <= grp_store_output_S0_fu_494_m_axi_kernel_output_AWLOCK;
    m_axi_kernel_output_AWPROT <= grp_store_output_S0_fu_494_m_axi_kernel_output_AWPROT;
    m_axi_kernel_output_AWQOS <= grp_store_output_S0_fu_494_m_axi_kernel_output_AWQOS;
    m_axi_kernel_output_AWREGION <= grp_store_output_S0_fu_494_m_axi_kernel_output_AWREGION;
    m_axi_kernel_output_AWSIZE <= grp_store_output_S0_fu_494_m_axi_kernel_output_AWSIZE;
    m_axi_kernel_output_AWUSER <= grp_store_output_S0_fu_494_m_axi_kernel_output_AWUSER;

    m_axi_kernel_output_AWVALID_assign_proc : process(ap_CS_fsm_state4, grp_store_output_S0_fu_494_m_axi_kernel_output_AWVALID, icmp_ln319_fu_630_p2, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln319_fu_630_p2 = ap_const_lv1_1)))) then 
            m_axi_kernel_output_AWVALID <= grp_store_output_S0_fu_494_m_axi_kernel_output_AWVALID;
        else 
            m_axi_kernel_output_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_kernel_output_BREADY_assign_proc : process(ap_CS_fsm_state4, grp_store_output_S0_fu_494_m_axi_kernel_output_BREADY, icmp_ln319_fu_630_p2, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln319_fu_630_p2 = ap_const_lv1_1)))) then 
            m_axi_kernel_output_BREADY <= grp_store_output_S0_fu_494_m_axi_kernel_output_BREADY;
        else 
            m_axi_kernel_output_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_kernel_output_RREADY_assign_proc : process(ap_CS_fsm_state2, grp_load_output_S0_fu_438_m_axi_kernel_output_RREADY, ap_CS_fsm_state3, icmp_ln304_fu_612_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln304_fu_612_p2 = ap_const_lv1_0)))) then 
            m_axi_kernel_output_RREADY <= grp_load_output_S0_fu_438_m_axi_kernel_output_RREADY;
        else 
            m_axi_kernel_output_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_kernel_output_WDATA <= grp_store_output_S0_fu_494_m_axi_kernel_output_WDATA;
    m_axi_kernel_output_WID <= grp_store_output_S0_fu_494_m_axi_kernel_output_WID;
    m_axi_kernel_output_WLAST <= grp_store_output_S0_fu_494_m_axi_kernel_output_WLAST;
    m_axi_kernel_output_WSTRB <= grp_store_output_S0_fu_494_m_axi_kernel_output_WSTRB;
    m_axi_kernel_output_WUSER <= grp_store_output_S0_fu_494_m_axi_kernel_output_WUSER;

    m_axi_kernel_output_WVALID_assign_proc : process(ap_CS_fsm_state4, grp_store_output_S0_fu_494_m_axi_kernel_output_WVALID, icmp_ln319_fu_630_p2, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln319_fu_630_p2 = ap_const_lv1_1)))) then 
            m_axi_kernel_output_WVALID <= grp_store_output_S0_fu_494_m_axi_kernel_output_WVALID;
        else 
            m_axi_kernel_output_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_kernel_weight_ARADDR <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARADDR;
    m_axi_kernel_weight_ARBURST <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARBURST;
    m_axi_kernel_weight_ARCACHE <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARCACHE;
    m_axi_kernel_weight_ARID <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARID;
    m_axi_kernel_weight_ARLEN <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARLEN;
    m_axi_kernel_weight_ARLOCK <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARLOCK;
    m_axi_kernel_weight_ARPROT <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARPROT;
    m_axi_kernel_weight_ARQOS <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARQOS;
    m_axi_kernel_weight_ARREGION <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARREGION;
    m_axi_kernel_weight_ARSIZE <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARSIZE;
    m_axi_kernel_weight_ARUSER <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARUSER;

    m_axi_kernel_weight_ARVALID_assign_proc : process(ap_CS_fsm_state2, grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARVALID, ap_CS_fsm_state3, icmp_ln304_fu_612_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln304_fu_612_p2 = ap_const_lv1_0)))) then 
            m_axi_kernel_weight_ARVALID <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_ARVALID;
        else 
            m_axi_kernel_weight_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_kernel_weight_AWADDR <= ap_const_lv64_0;
    m_axi_kernel_weight_AWBURST <= ap_const_lv2_0;
    m_axi_kernel_weight_AWCACHE <= ap_const_lv4_0;
    m_axi_kernel_weight_AWID <= ap_const_lv1_0;
    m_axi_kernel_weight_AWLEN <= ap_const_lv32_0;
    m_axi_kernel_weight_AWLOCK <= ap_const_lv2_0;
    m_axi_kernel_weight_AWPROT <= ap_const_lv3_0;
    m_axi_kernel_weight_AWQOS <= ap_const_lv4_0;
    m_axi_kernel_weight_AWREGION <= ap_const_lv4_0;
    m_axi_kernel_weight_AWSIZE <= ap_const_lv3_0;
    m_axi_kernel_weight_AWUSER <= ap_const_lv1_0;
    m_axi_kernel_weight_AWVALID <= ap_const_logic_0;
    m_axi_kernel_weight_BREADY <= ap_const_logic_0;

    m_axi_kernel_weight_RREADY_assign_proc : process(ap_CS_fsm_state2, grp_load_weight_S0_fu_428_m_axi_kernel_weight_RREADY, ap_CS_fsm_state3, icmp_ln304_fu_612_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln304_fu_612_p2 = ap_const_lv1_0)))) then 
            m_axi_kernel_weight_RREADY <= grp_load_weight_S0_fu_428_m_axi_kernel_weight_RREADY;
        else 
            m_axi_kernel_weight_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_kernel_weight_WDATA <= ap_const_lv32_0;
    m_axi_kernel_weight_WID <= ap_const_lv1_0;
    m_axi_kernel_weight_WLAST <= ap_const_logic_0;
    m_axi_kernel_weight_WSTRB <= ap_const_lv4_0;
    m_axi_kernel_weight_WUSER <= ap_const_lv1_0;
    m_axi_kernel_weight_WVALID <= ap_const_logic_0;

    output_0_address0_assign_proc : process(grp_load_output_S0_fu_438_output_0_address0, grp_store_output_S0_fu_494_output_0_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_0_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_0_address0 <= grp_store_output_S0_fu_494_output_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_0_address0 <= grp_load_output_S0_fu_438_output_0_address0;
        else 
            output_0_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_0_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_address1;

    output_0_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_0_ce0, grp_store_output_S0_fu_494_output_0_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_0_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_0_ce0 <= grp_store_output_S0_fu_494_output_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_0_ce0 <= grp_load_output_S0_fu_438_output_0_ce0;
        else 
            output_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_0_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_0_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_ce1;
        else 
            output_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_0_d0_assign_proc : process(grp_load_output_S0_fu_438_output_0_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_0_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_0_d0 <= grp_load_output_S0_fu_438_output_0_d0;
        else 
            output_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_0_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_d1;

    output_0_we0_assign_proc : process(grp_load_output_S0_fu_438_output_0_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_0_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_0_we0 <= grp_load_output_S0_fu_438_output_0_we0;
        else 
            output_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_0_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_0_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_0_we1;
        else 
            output_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_10_address0_assign_proc : process(grp_load_output_S0_fu_438_output_10_address0, grp_store_output_S0_fu_494_output_10_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_10_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_10_address0 <= grp_store_output_S0_fu_494_output_10_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_10_address0 <= grp_load_output_S0_fu_438_output_10_address0;
        else 
            output_10_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_10_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_address1;

    output_10_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_10_ce0, grp_store_output_S0_fu_494_output_10_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_10_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_10_ce0 <= grp_store_output_S0_fu_494_output_10_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_10_ce0 <= grp_load_output_S0_fu_438_output_10_ce0;
        else 
            output_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_10_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_10_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_ce1;
        else 
            output_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_10_d0_assign_proc : process(grp_load_output_S0_fu_438_output_10_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_10_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_10_d0 <= grp_load_output_S0_fu_438_output_10_d0;
        else 
            output_10_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_10_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_d1;

    output_10_we0_assign_proc : process(grp_load_output_S0_fu_438_output_10_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_10_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_10_we0 <= grp_load_output_S0_fu_438_output_10_we0;
        else 
            output_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_10_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_10_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_10_we1;
        else 
            output_10_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_11_address0_assign_proc : process(grp_load_output_S0_fu_438_output_11_address0, grp_store_output_S0_fu_494_output_11_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_11_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_11_address0 <= grp_store_output_S0_fu_494_output_11_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_11_address0 <= grp_load_output_S0_fu_438_output_11_address0;
        else 
            output_11_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_11_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_address1;

    output_11_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_11_ce0, grp_store_output_S0_fu_494_output_11_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_11_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_11_ce0 <= grp_store_output_S0_fu_494_output_11_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_11_ce0 <= grp_load_output_S0_fu_438_output_11_ce0;
        else 
            output_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_11_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_11_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_ce1;
        else 
            output_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_11_d0_assign_proc : process(grp_load_output_S0_fu_438_output_11_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_11_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_11_d0 <= grp_load_output_S0_fu_438_output_11_d0;
        else 
            output_11_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_11_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_d1;

    output_11_we0_assign_proc : process(grp_load_output_S0_fu_438_output_11_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_11_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_11_we0 <= grp_load_output_S0_fu_438_output_11_we0;
        else 
            output_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_11_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_11_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_11_we1;
        else 
            output_11_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_12_address0_assign_proc : process(grp_load_output_S0_fu_438_output_12_address0, grp_store_output_S0_fu_494_output_12_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_12_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_12_address0 <= grp_store_output_S0_fu_494_output_12_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_12_address0 <= grp_load_output_S0_fu_438_output_12_address0;
        else 
            output_12_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_12_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_address1;

    output_12_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_12_ce0, grp_store_output_S0_fu_494_output_12_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_12_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_12_ce0 <= grp_store_output_S0_fu_494_output_12_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_12_ce0 <= grp_load_output_S0_fu_438_output_12_ce0;
        else 
            output_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_12_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_12_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_ce1;
        else 
            output_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_12_d0_assign_proc : process(grp_load_output_S0_fu_438_output_12_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_12_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_12_d0 <= grp_load_output_S0_fu_438_output_12_d0;
        else 
            output_12_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_12_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_d1;

    output_12_we0_assign_proc : process(grp_load_output_S0_fu_438_output_12_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_12_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_12_we0 <= grp_load_output_S0_fu_438_output_12_we0;
        else 
            output_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_12_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_12_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_12_we1;
        else 
            output_12_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_13_address0_assign_proc : process(grp_load_output_S0_fu_438_output_13_address0, grp_store_output_S0_fu_494_output_13_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_13_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_13_address0 <= grp_store_output_S0_fu_494_output_13_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_13_address0 <= grp_load_output_S0_fu_438_output_13_address0;
        else 
            output_13_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_13_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_address1;

    output_13_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_13_ce0, grp_store_output_S0_fu_494_output_13_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_13_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_13_ce0 <= grp_store_output_S0_fu_494_output_13_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_13_ce0 <= grp_load_output_S0_fu_438_output_13_ce0;
        else 
            output_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_13_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_13_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_ce1;
        else 
            output_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_13_d0_assign_proc : process(grp_load_output_S0_fu_438_output_13_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_13_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_13_d0 <= grp_load_output_S0_fu_438_output_13_d0;
        else 
            output_13_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_13_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_d1;

    output_13_we0_assign_proc : process(grp_load_output_S0_fu_438_output_13_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_13_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_13_we0 <= grp_load_output_S0_fu_438_output_13_we0;
        else 
            output_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_13_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_13_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_13_we1;
        else 
            output_13_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_14_address0_assign_proc : process(grp_load_output_S0_fu_438_output_14_address0, grp_store_output_S0_fu_494_output_14_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_14_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_14_address0 <= grp_store_output_S0_fu_494_output_14_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_14_address0 <= grp_load_output_S0_fu_438_output_14_address0;
        else 
            output_14_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_14_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_address1;

    output_14_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_14_ce0, grp_store_output_S0_fu_494_output_14_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_14_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_14_ce0 <= grp_store_output_S0_fu_494_output_14_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_14_ce0 <= grp_load_output_S0_fu_438_output_14_ce0;
        else 
            output_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_14_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_14_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_ce1;
        else 
            output_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_14_d0_assign_proc : process(grp_load_output_S0_fu_438_output_14_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_14_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_14_d0 <= grp_load_output_S0_fu_438_output_14_d0;
        else 
            output_14_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_14_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_d1;

    output_14_we0_assign_proc : process(grp_load_output_S0_fu_438_output_14_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_14_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_14_we0 <= grp_load_output_S0_fu_438_output_14_we0;
        else 
            output_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_14_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_14_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_14_we1;
        else 
            output_14_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_15_address0_assign_proc : process(grp_load_output_S0_fu_438_output_15_address0, grp_store_output_S0_fu_494_output_15_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_15_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_15_address0 <= grp_store_output_S0_fu_494_output_15_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_15_address0 <= grp_load_output_S0_fu_438_output_15_address0;
        else 
            output_15_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_15_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_address1;

    output_15_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_15_ce0, grp_store_output_S0_fu_494_output_15_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_15_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_15_ce0 <= grp_store_output_S0_fu_494_output_15_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_15_ce0 <= grp_load_output_S0_fu_438_output_15_ce0;
        else 
            output_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_15_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_15_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_ce1;
        else 
            output_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_15_d0_assign_proc : process(grp_load_output_S0_fu_438_output_15_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_15_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_15_d0 <= grp_load_output_S0_fu_438_output_15_d0;
        else 
            output_15_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_15_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_d1;

    output_15_we0_assign_proc : process(grp_load_output_S0_fu_438_output_15_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_15_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_15_we0 <= grp_load_output_S0_fu_438_output_15_we0;
        else 
            output_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_15_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_15_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_15_we1;
        else 
            output_15_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_1_address0_assign_proc : process(grp_load_output_S0_fu_438_output_1_address0, grp_store_output_S0_fu_494_output_1_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_1_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_1_address0 <= grp_store_output_S0_fu_494_output_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_1_address0 <= grp_load_output_S0_fu_438_output_1_address0;
        else 
            output_1_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_1_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_address1;

    output_1_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_1_ce0, grp_store_output_S0_fu_494_output_1_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_1_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_1_ce0 <= grp_store_output_S0_fu_494_output_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_1_ce0 <= grp_load_output_S0_fu_438_output_1_ce0;
        else 
            output_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_1_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_1_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_ce1;
        else 
            output_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_1_d0_assign_proc : process(grp_load_output_S0_fu_438_output_1_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_1_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_1_d0 <= grp_load_output_S0_fu_438_output_1_d0;
        else 
            output_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_1_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_d1;

    output_1_we0_assign_proc : process(grp_load_output_S0_fu_438_output_1_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_1_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_1_we0 <= grp_load_output_S0_fu_438_output_1_we0;
        else 
            output_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_1_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_1_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_1_we1;
        else 
            output_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_2_address0_assign_proc : process(grp_load_output_S0_fu_438_output_2_address0, grp_store_output_S0_fu_494_output_2_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_2_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_2_address0 <= grp_store_output_S0_fu_494_output_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_2_address0 <= grp_load_output_S0_fu_438_output_2_address0;
        else 
            output_2_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_2_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_address1;

    output_2_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_2_ce0, grp_store_output_S0_fu_494_output_2_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_2_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_2_ce0 <= grp_store_output_S0_fu_494_output_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_2_ce0 <= grp_load_output_S0_fu_438_output_2_ce0;
        else 
            output_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_2_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_2_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_ce1;
        else 
            output_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_2_d0_assign_proc : process(grp_load_output_S0_fu_438_output_2_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_2_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_2_d0 <= grp_load_output_S0_fu_438_output_2_d0;
        else 
            output_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_2_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_d1;

    output_2_we0_assign_proc : process(grp_load_output_S0_fu_438_output_2_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_2_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_2_we0 <= grp_load_output_S0_fu_438_output_2_we0;
        else 
            output_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_2_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_2_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_2_we1;
        else 
            output_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_3_address0_assign_proc : process(grp_load_output_S0_fu_438_output_3_address0, grp_store_output_S0_fu_494_output_3_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_3_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_3_address0 <= grp_store_output_S0_fu_494_output_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_3_address0 <= grp_load_output_S0_fu_438_output_3_address0;
        else 
            output_3_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_3_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_address1;

    output_3_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_3_ce0, grp_store_output_S0_fu_494_output_3_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_3_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_3_ce0 <= grp_store_output_S0_fu_494_output_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_3_ce0 <= grp_load_output_S0_fu_438_output_3_ce0;
        else 
            output_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_3_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_3_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_ce1;
        else 
            output_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_3_d0_assign_proc : process(grp_load_output_S0_fu_438_output_3_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_3_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_3_d0 <= grp_load_output_S0_fu_438_output_3_d0;
        else 
            output_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_3_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_d1;

    output_3_we0_assign_proc : process(grp_load_output_S0_fu_438_output_3_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_3_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_3_we0 <= grp_load_output_S0_fu_438_output_3_we0;
        else 
            output_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_3_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_3_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_3_we1;
        else 
            output_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_4_address0_assign_proc : process(grp_load_output_S0_fu_438_output_4_address0, grp_store_output_S0_fu_494_output_4_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_4_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_4_address0 <= grp_store_output_S0_fu_494_output_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_4_address0 <= grp_load_output_S0_fu_438_output_4_address0;
        else 
            output_4_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_4_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_address1;

    output_4_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_4_ce0, grp_store_output_S0_fu_494_output_4_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_4_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_4_ce0 <= grp_store_output_S0_fu_494_output_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_4_ce0 <= grp_load_output_S0_fu_438_output_4_ce0;
        else 
            output_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_4_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_4_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_ce1;
        else 
            output_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_4_d0_assign_proc : process(grp_load_output_S0_fu_438_output_4_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_4_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_4_d0 <= grp_load_output_S0_fu_438_output_4_d0;
        else 
            output_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_4_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_d1;

    output_4_we0_assign_proc : process(grp_load_output_S0_fu_438_output_4_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_4_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_4_we0 <= grp_load_output_S0_fu_438_output_4_we0;
        else 
            output_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_4_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_4_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_4_we1;
        else 
            output_4_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_5_address0_assign_proc : process(grp_load_output_S0_fu_438_output_5_address0, grp_store_output_S0_fu_494_output_5_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_5_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_5_address0 <= grp_store_output_S0_fu_494_output_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_5_address0 <= grp_load_output_S0_fu_438_output_5_address0;
        else 
            output_5_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_5_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_address1;

    output_5_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_5_ce0, grp_store_output_S0_fu_494_output_5_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_5_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_5_ce0 <= grp_store_output_S0_fu_494_output_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_5_ce0 <= grp_load_output_S0_fu_438_output_5_ce0;
        else 
            output_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_5_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_5_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_ce1;
        else 
            output_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_5_d0_assign_proc : process(grp_load_output_S0_fu_438_output_5_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_5_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_5_d0 <= grp_load_output_S0_fu_438_output_5_d0;
        else 
            output_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_5_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_d1;

    output_5_we0_assign_proc : process(grp_load_output_S0_fu_438_output_5_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_5_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_5_we0 <= grp_load_output_S0_fu_438_output_5_we0;
        else 
            output_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_5_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_5_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_5_we1;
        else 
            output_5_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_6_address0_assign_proc : process(grp_load_output_S0_fu_438_output_6_address0, grp_store_output_S0_fu_494_output_6_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_6_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_6_address0 <= grp_store_output_S0_fu_494_output_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_6_address0 <= grp_load_output_S0_fu_438_output_6_address0;
        else 
            output_6_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_6_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_address1;

    output_6_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_6_ce0, grp_store_output_S0_fu_494_output_6_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_6_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_6_ce0 <= grp_store_output_S0_fu_494_output_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_6_ce0 <= grp_load_output_S0_fu_438_output_6_ce0;
        else 
            output_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_6_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_6_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_ce1;
        else 
            output_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_6_d0_assign_proc : process(grp_load_output_S0_fu_438_output_6_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_6_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_6_d0 <= grp_load_output_S0_fu_438_output_6_d0;
        else 
            output_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_6_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_d1;

    output_6_we0_assign_proc : process(grp_load_output_S0_fu_438_output_6_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_6_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_6_we0 <= grp_load_output_S0_fu_438_output_6_we0;
        else 
            output_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_6_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_6_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_6_we1;
        else 
            output_6_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_7_address0_assign_proc : process(grp_load_output_S0_fu_438_output_7_address0, grp_store_output_S0_fu_494_output_7_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_7_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_7_address0 <= grp_store_output_S0_fu_494_output_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_7_address0 <= grp_load_output_S0_fu_438_output_7_address0;
        else 
            output_7_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_7_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_address1;

    output_7_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_7_ce0, grp_store_output_S0_fu_494_output_7_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_7_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_7_ce0 <= grp_store_output_S0_fu_494_output_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_7_ce0 <= grp_load_output_S0_fu_438_output_7_ce0;
        else 
            output_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_7_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_7_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_ce1;
        else 
            output_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_7_d0_assign_proc : process(grp_load_output_S0_fu_438_output_7_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_7_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_7_d0 <= grp_load_output_S0_fu_438_output_7_d0;
        else 
            output_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_7_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_d1;

    output_7_we0_assign_proc : process(grp_load_output_S0_fu_438_output_7_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_7_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_7_we0 <= grp_load_output_S0_fu_438_output_7_we0;
        else 
            output_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_7_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_7_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_7_we1;
        else 
            output_7_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_8_address0_assign_proc : process(grp_load_output_S0_fu_438_output_8_address0, grp_store_output_S0_fu_494_output_8_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_8_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_8_address0 <= grp_store_output_S0_fu_494_output_8_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_8_address0 <= grp_load_output_S0_fu_438_output_8_address0;
        else 
            output_8_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_8_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_address1;

    output_8_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_8_ce0, grp_store_output_S0_fu_494_output_8_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_8_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_8_ce0 <= grp_store_output_S0_fu_494_output_8_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_8_ce0 <= grp_load_output_S0_fu_438_output_8_ce0;
        else 
            output_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_8_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_8_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_ce1;
        else 
            output_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_8_d0_assign_proc : process(grp_load_output_S0_fu_438_output_8_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_8_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_8_d0 <= grp_load_output_S0_fu_438_output_8_d0;
        else 
            output_8_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_8_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_d1;

    output_8_we0_assign_proc : process(grp_load_output_S0_fu_438_output_8_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_8_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_8_we0 <= grp_load_output_S0_fu_438_output_8_we0;
        else 
            output_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_8_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_8_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_8_we1;
        else 
            output_8_we1 <= ap_const_logic_0;
        end if; 
    end process;


    output_9_address0_assign_proc : process(grp_load_output_S0_fu_438_output_9_address0, grp_store_output_S0_fu_494_output_9_address0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_9_address0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_9_address0 <= grp_store_output_S0_fu_494_output_9_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_9_address0 <= grp_load_output_S0_fu_438_output_9_address0;
        else 
            output_9_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_9_address1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_address1;

    output_9_ce0_assign_proc : process(grp_load_output_S0_fu_438_output_9_ce0, grp_store_output_S0_fu_494_output_9_ce0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_9_ce0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_9_ce0 <= grp_store_output_S0_fu_494_output_9_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_9_ce0 <= grp_load_output_S0_fu_438_output_9_ce0;
        else 
            output_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_9_ce1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_ce1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_9_ce1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_ce1;
        else 
            output_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_9_d0_assign_proc : process(grp_load_output_S0_fu_438_output_9_d0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_d0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_9_d0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_9_d0 <= grp_load_output_S0_fu_438_output_9_d0;
        else 
            output_9_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_9_d1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_d1;

    output_9_we0_assign_proc : process(grp_load_output_S0_fu_438_output_9_we0, grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_we0, ap_CS_fsm_state3, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_9_we0 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_9_we0 <= grp_load_output_S0_fu_438_output_9_we0;
        else 
            output_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_9_we1_assign_proc : process(grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_we1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            output_9_we1 <= grp_cnn_Pipeline_VITIS_LOOP_329_4_fu_534_output_9_we1;
        else 
            output_9_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast8336_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_50_fu_714_p2),64));
    p_cast8337_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_51_fu_724_p2),64));
    p_cast8338_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_52_fu_734_p2),64));
    p_cast8339_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_53_fu_744_p2),64));
    p_cast8340_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_54_fu_754_p2),64));
    p_cast8341_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_55_fu_764_p2),64));
    p_cast8342_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_56_fu_774_p2),64));
    p_cast8343_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_57_fu_784_p2),64));
    p_cast8344_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_58_fu_794_p2),64));
    p_cast8345_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_59_fu_804_p2),64));
    p_cast8346_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_60_fu_814_p2),64));
    p_cast8347_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_61_fu_824_p2),64));
    p_cast8348_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_62_fu_834_p2),64));
    p_cast8349_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_63_fu_844_p2),64));
    p_cast8350_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_64_fu_854_p2),64));
    p_cast8351_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_65_fu_864_p2),64));
    p_cast8352_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_66_fu_874_p2),64));
    p_cast8353_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_67_fu_894_p2),64));
    p_cast8354_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_68_fu_904_p2),64));
    p_cast8355_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_69_fu_914_p2),64));
    p_cast8356_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_70_fu_924_p2),64));
    p_cast8357_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_71_fu_934_p2),64));
    p_cast_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_49_fu_704_p2),64));
    tmp_10_cast_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_679_p3),14));
    tmp_9_cast_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_667_p3),14));
    tmp_9_fu_667_p3 <= (i1_reg_417 & ap_const_lv8_0);
    tmp_s_fu_679_p3 <= (i1_reg_417 & ap_const_lv5_0);
    trunc_ln304_fu_624_p1 <= i0_fu_174(4 - 1 downto 0);
    trunc_ln326_fu_642_p1 <= j_reg_405(8 - 1 downto 0);
    trunc_ln349_fu_701_p1 <= grp_fu_944_p3(17 - 1 downto 0);

    weight_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_load_weight_S0_fu_428_weight_address0, ap_CS_fsm_state3, zext_ln349_289_fu_697_p1, p_cast8336_fu_719_p1, p_cast8337_fu_729_p1, p_cast8339_fu_749_p1, p_cast8341_fu_769_p1, p_cast8343_fu_789_p1, p_cast8345_fu_809_p1, p_cast8347_fu_829_p1, p_cast8349_fu_849_p1, p_cast8351_fu_869_p1, p_cast8353_fu_899_p1, p_cast8354_fu_909_p1, p_cast8356_fu_929_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_address0 <= p_cast8356_fu_929_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            weight_address0 <= p_cast8354_fu_909_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_address0 <= p_cast8353_fu_899_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_address0 <= p_cast8351_fu_869_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_address0 <= p_cast8349_fu_849_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_address0 <= p_cast8347_fu_829_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_address0 <= p_cast8345_fu_809_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_address0 <= p_cast8343_fu_789_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_address0 <= p_cast8341_fu_769_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_address0 <= p_cast8339_fu_749_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_address0 <= p_cast8337_fu_729_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_address0 <= p_cast8336_fu_719_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            weight_address0 <= zext_ln349_289_fu_697_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight_address0 <= grp_load_weight_S0_fu_428_weight_address0;
        else 
            weight_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_address1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, p_cast_fu_709_p1, p_cast8338_fu_739_p1, p_cast8340_fu_759_p1, p_cast8342_fu_779_p1, p_cast8344_fu_799_p1, p_cast8346_fu_819_p1, p_cast8348_fu_839_p1, p_cast8350_fu_859_p1, p_cast8352_fu_879_p1, zext_ln349_290_fu_889_p1, p_cast8355_fu_919_p1, p_cast8357_fu_939_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            weight_address1 <= p_cast8357_fu_939_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            weight_address1 <= p_cast8355_fu_919_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            weight_address1 <= zext_ln349_290_fu_889_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            weight_address1 <= p_cast8352_fu_879_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            weight_address1 <= p_cast8350_fu_859_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            weight_address1 <= p_cast8348_fu_839_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            weight_address1 <= p_cast8346_fu_819_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_address1 <= p_cast8344_fu_799_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_address1 <= p_cast8342_fu_779_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_address1 <= p_cast8340_fu_759_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weight_address1 <= p_cast8338_fu_739_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            weight_address1 <= p_cast_fu_709_p1(17 - 1 downto 0);
        else 
            weight_address1 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_load_weight_S0_fu_428_weight_ce0, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            weight_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight_ce0 <= grp_load_weight_S0_fu_428_weight_ce0;
        else 
            weight_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_ce1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            weight_ce1 <= ap_const_logic_1;
        else 
            weight_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    weight_d0 <= grp_load_weight_S0_fu_428_weight_d0;

    weight_we0_assign_proc : process(grp_load_weight_S0_fu_428_weight_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weight_we0 <= grp_load_weight_S0_fu_428_weight_we0;
        else 
            weight_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln319_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_405),14));
    zext_ln349_289_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_944_p3),64));
    zext_ln349_290_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln349_1_fu_884_p2),64));
end behav;
