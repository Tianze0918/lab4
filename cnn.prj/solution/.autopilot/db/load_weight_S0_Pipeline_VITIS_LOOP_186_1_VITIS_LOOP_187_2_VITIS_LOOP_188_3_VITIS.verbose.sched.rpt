

================================================================
== Vitis HLS Report for 'load_weight_S0_Pipeline_VITIS_LOOP_186_1_VITIS_LOOP_187_2_VITIS_LOOP_188_3_VITIS'
================================================================
* Date:           Tue May 27 03:03:24 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        cnn.prj
* Solution:       solution (Vitis Kernel Flow Target)
* Product family: virtexuplus
* Target device:  xcu200-fsgd2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  4.00 ns|  2.920 ns|     1.08 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   102403|   102403|  0.410 ms|  0.410 ms|  102403|  102403|       no|
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------------------------------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                                                                       |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |                               Loop Name                               |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +-----------------------------------------------------------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_186_1_VITIS_LOOP_187_2_VITIS_LOOP_188_3_VITIS_LOOP_189_4  |   102401|   102401|         3|          1|          1|  102400|       yes|
        +-----------------------------------------------------------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.56>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i3 = alloca i32 1" [cnn.cpp:189]   --->   Operation 6 'alloca' 'i3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i2 = alloca i32 1" [cnn.cpp:188]   --->   Operation 7 'alloca' 'i2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i1 = alloca i32 1" [cnn.cpp:187]   --->   Operation 9 'alloca' 'i1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten12 = alloca i32 1"   --->   Operation 10 'alloca' 'indvar_flatten12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%i0 = alloca i32 1" [cnn.cpp:186]   --->   Operation 11 'alloca' 'i0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten34 = alloca i32 1"   --->   Operation 12 'alloca' 'indvar_flatten34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%sext_ln186_read = read i62 @_ssdm_op_Read.ap_auto.i62, i62 %sext_ln186"   --->   Operation 13 'read' 'sext_ln186_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sext_ln186_cast = sext i62 %sext_ln186_read"   --->   Operation 14 'sext' 'sext_ln186_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %kernel_weight, void @empty_16, i32 0, i32 0, void @empty_10, i32 64, i32 0, void @empty_8, void @empty_7, void @empty_10, i32 16, i32 16, i32 16, i32 16, void @empty_10, void @empty_10, i32 4294967295, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.38ns)   --->   "%store_ln0 = store i17 0, i17 %indvar_flatten34"   --->   Operation 16 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 17 [1/1] (0.38ns)   --->   "%store_ln186 = store i5 0, i5 %i0" [cnn.cpp:186]   --->   Operation 17 'store' 'store_ln186' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 18 [1/1] (0.38ns)   --->   "%store_ln0 = store i14 0, i14 %indvar_flatten12"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 19 [1/1] (0.38ns)   --->   "%store_ln187 = store i9 0, i9 %i1" [cnn.cpp:187]   --->   Operation 19 'store' 'store_ln187' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 20 [1/1] (0.38ns)   --->   "%store_ln0 = store i6 0, i6 %indvar_flatten"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 21 [1/1] (0.38ns)   --->   "%store_ln188 = store i3 0, i3 %i2" [cnn.cpp:188]   --->   Operation 21 'store' 'store_ln188' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 22 [1/1] (0.38ns)   --->   "%store_ln189 = store i3 0, i3 %i3" [cnn.cpp:189]   --->   Operation 22 'store' 'store_ln189' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 23 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%indvar_flatten34_load = load i17 %indvar_flatten34" [cnn.cpp:186]   --->   Operation 24 'load' 'indvar_flatten34_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.79ns)   --->   "%icmp_ln186 = icmp_eq  i17 %indvar_flatten34_load, i17 102400" [cnn.cpp:186]   --->   Operation 25 'icmp' 'icmp_ln186' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.79ns)   --->   "%add_ln186 = add i17 %indvar_flatten34_load, i17 1" [cnn.cpp:186]   --->   Operation 26 'add' 'add_ln186' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln186 = br i1 %icmp_ln186, void %for.inc34, void %for.end36.exitStub" [cnn.cpp:186]   --->   Operation 27 'br' 'br_ln186' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.38ns)   --->   "%store_ln186 = store i17 %add_ln186, i17 %indvar_flatten34" [cnn.cpp:186]   --->   Operation 28 'store' 'store_ln186' <Predicate = (!icmp_ln186)> <Delay = 0.38>

State 2 <SV = 1> <Delay = 2.92>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%i3_load = load i3 %i3" [cnn.cpp:188]   --->   Operation 29 'load' 'i3_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%i2_load = load i3 %i2" [cnn.cpp:187]   --->   Operation 30 'load' 'i2_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i6 %indvar_flatten" [cnn.cpp:188]   --->   Operation 31 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%i1_load = load i9 %i1" [cnn.cpp:186]   --->   Operation 32 'load' 'i1_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%indvar_flatten12_load = load i14 %indvar_flatten12" [cnn.cpp:187]   --->   Operation 33 'load' 'indvar_flatten12_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%i0_load = load i5 %i0" [cnn.cpp:186]   --->   Operation 34 'load' 'i0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%kernel_weight_addr = getelementptr i32 %kernel_weight, i64 %sext_ln186_cast" [cnn.cpp:186]   --->   Operation 35 'getelementptr' 'kernel_weight_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.70ns)   --->   "%add_ln186_1 = add i5 %i0_load, i5 1" [cnn.cpp:186]   --->   Operation 36 'add' 'add_ln186_1' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.76ns)   --->   "%icmp_ln187 = icmp_eq  i14 %indvar_flatten12_load, i14 6400" [cnn.cpp:187]   --->   Operation 37 'icmp' 'icmp_ln187' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.30ns)   --->   "%select_ln186 = select i1 %icmp_ln187, i9 0, i9 %i1_load" [cnn.cpp:186]   --->   Operation 38 'select' 'select_ln186' <Predicate = true> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.12ns)   --->   "%xor_ln186 = xor i1 %icmp_ln187, i1 1" [cnn.cpp:186]   --->   Operation 39 'xor' 'xor_ln186' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.57ns)   --->   "%icmp_ln189 = icmp_eq  i3 %i3_load, i3 5" [cnn.cpp:189]   --->   Operation 40 'icmp' 'icmp_ln189' <Predicate = true> <Delay = 0.57> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.70ns)   --->   "%icmp_ln188 = icmp_eq  i6 %indvar_flatten_load, i6 25" [cnn.cpp:188]   --->   Operation 41 'icmp' 'icmp_ln188' <Predicate = true> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.12ns)   --->   "%and_ln186_1 = and i1 %icmp_ln188, i1 %xor_ln186" [cnn.cpp:186]   --->   Operation 42 'and' 'and_ln186_1' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.27ns)   --->   "%select_ln186_1 = select i1 %icmp_ln187, i5 %add_ln186_1, i5 %i0_load" [cnn.cpp:186]   --->   Operation 43 'select' 'select_ln186_1' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.71ns)   --->   "%add_ln187 = add i9 %select_ln186, i9 1" [cnn.cpp:187]   --->   Operation 44 'add' 'add_ln187' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.12ns)   --->   "%or_ln187 = or i1 %and_ln186_1, i1 %icmp_ln187" [cnn.cpp:187]   --->   Operation 45 'or' 'or_ln187' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.27ns)   --->   "%select_ln187 = select i1 %or_ln187, i3 0, i3 %i2_load" [cnn.cpp:187]   --->   Operation 46 'select' 'select_ln187' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node and_ln187)   --->   "%xor_ln187 = xor i1 %icmp_ln188, i1 1" [cnn.cpp:187]   --->   Operation 47 'xor' 'xor_ln187' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node and_ln187)   --->   "%or_ln187_1 = or i1 %icmp_ln187, i1 %xor_ln187" [cnn.cpp:187]   --->   Operation 48 'or' 'or_ln187_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node and_ln187)   --->   "%and_ln186 = and i1 %or_ln187_1, i1 %xor_ln186" [cnn.cpp:186]   --->   Operation 49 'and' 'and_ln186' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln187 = and i1 %and_ln186, i1 %icmp_ln189" [cnn.cpp:187]   --->   Operation 50 'and' 'and_ln187' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.30ns)   --->   "%select_ln187_1 = select i1 %and_ln186_1, i9 %add_ln187, i9 %select_ln186" [cnn.cpp:187]   --->   Operation 51 'select' 'select_ln187_1' <Predicate = true> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.57ns)   --->   "%add_ln188 = add i3 %select_ln187, i3 1" [cnn.cpp:188]   --->   Operation 52 'add' 'add_ln188' <Predicate = true> <Delay = 0.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node select_ln188)   --->   "%or_ln188 = or i1 %and_ln187, i1 %and_ln186_1" [cnn.cpp:188]   --->   Operation 53 'or' 'or_ln188' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node select_ln188)   --->   "%or_ln188_1 = or i1 %or_ln188, i1 %icmp_ln187" [cnn.cpp:188]   --->   Operation 54 'or' 'or_ln188_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.27ns) (out node of the LUT)   --->   "%select_ln188 = select i1 %or_ln188_1, i3 0, i3 %i3_load" [cnn.cpp:188]   --->   Operation 55 'select' 'select_ln188' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.27ns)   --->   "%select_ln188_1 = select i1 %and_ln187, i3 %add_ln188, i3 %select_ln187" [cnn.cpp:188]   --->   Operation 56 'select' 'select_ln188_1' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i13 @_ssdm_op_BitConcatenate.i13.i5.i8, i5 %select_ln186_1, i8 0" [cnn.cpp:209]   --->   Operation 57 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln187 = zext i13 %tmp" [cnn.cpp:187]   --->   Operation 58 'zext' 'zext_ln187' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln209 = zext i9 %select_ln187_1" [cnn.cpp:209]   --->   Operation 59 'zext' 'zext_ln209' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.75ns)   --->   "%add_ln209 = add i14 %zext_ln187, i14 %zext_ln209" [cnn.cpp:209]   --->   Operation 60 'add' 'add_ln209' <Predicate = true> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (2.92ns)   --->   "%kernel_weight_addr_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %kernel_weight_addr" [cnn.cpp:203]   --->   Operation 61 'read' 'kernel_weight_addr_read' <Predicate = true> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 62 [1/1] (0.57ns)   --->   "%add_ln189 = add i3 %select_ln188, i3 1" [cnn.cpp:189]   --->   Operation 62 'add' 'add_ln189' <Predicate = true> <Delay = 0.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.70ns)   --->   "%add_ln188_1 = add i6 %indvar_flatten_load, i6 1" [cnn.cpp:188]   --->   Operation 63 'add' 'add_ln188_1' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.29ns)   --->   "%select_ln188_2 = select i1 %or_ln187, i6 1, i6 %add_ln188_1" [cnn.cpp:188]   --->   Operation 64 'select' 'select_ln188_2' <Predicate = true> <Delay = 0.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.76ns)   --->   "%add_ln187_1 = add i14 %indvar_flatten12_load, i14 1" [cnn.cpp:187]   --->   Operation 65 'add' 'add_ln187_1' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.34ns)   --->   "%select_ln187_2 = select i1 %icmp_ln187, i14 1, i14 %add_ln187_1" [cnn.cpp:187]   --->   Operation 66 'select' 'select_ln187_2' <Predicate = true> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.38ns)   --->   "%store_ln186 = store i5 %select_ln186_1, i5 %i0" [cnn.cpp:186]   --->   Operation 67 'store' 'store_ln186' <Predicate = true> <Delay = 0.38>
ST_2 : Operation 68 [1/1] (0.38ns)   --->   "%store_ln187 = store i14 %select_ln187_2, i14 %indvar_flatten12" [cnn.cpp:187]   --->   Operation 68 'store' 'store_ln187' <Predicate = true> <Delay = 0.38>
ST_2 : Operation 69 [1/1] (0.38ns)   --->   "%store_ln187 = store i9 %select_ln187_1, i9 %i1" [cnn.cpp:187]   --->   Operation 69 'store' 'store_ln187' <Predicate = true> <Delay = 0.38>
ST_2 : Operation 70 [1/1] (0.38ns)   --->   "%store_ln188 = store i6 %select_ln188_2, i6 %indvar_flatten" [cnn.cpp:188]   --->   Operation 70 'store' 'store_ln188' <Predicate = true> <Delay = 0.38>
ST_2 : Operation 71 [1/1] (0.38ns)   --->   "%store_ln188 = store i3 %select_ln188_1, i3 %i2" [cnn.cpp:188]   --->   Operation 71 'store' 'store_ln188' <Predicate = true> <Delay = 0.38>
ST_2 : Operation 72 [1/1] (0.38ns)   --->   "%store_ln189 = store i3 %add_ln189, i3 %i3" [cnn.cpp:189]   --->   Operation 72 'store' 'store_ln189' <Predicate = true> <Delay = 0.38>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 92 'ret' 'ret_ln0' <Predicate = (icmp_ln186)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.60>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_186_1_VITIS_LOOP_187_2_VITIS_LOOP_188_3_VITIS_LOOP_189_4_str"   --->   Operation 73 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 102400, i64 102400, i64 102400"   --->   Operation 74 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln209_1 = zext i14 %add_ln209" [cnn.cpp:209]   --->   Operation 75 'zext' 'zext_ln209_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_4 = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i14.i2, i14 %add_ln209, i2 0" [cnn.cpp:209]   --->   Operation 76 'bitconcatenate' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln209_1 = add i16 %tmp_4, i16 %zext_ln209_1" [cnn.cpp:209]   --->   Operation 77 'add' 'add_ln209_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln209_2 = zext i3 %select_ln188_1" [cnn.cpp:209]   --->   Operation 78 'zext' 'zext_ln209_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%add_ln209_2 = add i16 %add_ln209_1, i16 %zext_ln209_2" [cnn.cpp:209]   --->   Operation 79 'add' 'add_ln209_2' <Predicate = true> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln209_3 = zext i16 %add_ln209_2" [cnn.cpp:209]   --->   Operation 80 'zext' 'zext_ln209_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%trunc_ln209 = trunc i16 %add_ln209_2" [cnn.cpp:209]   --->   Operation 81 'trunc' 'trunc_ln209' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_5 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i15.i2, i15 %trunc_ln209, i2 0" [cnn.cpp:209]   --->   Operation 82 'bitconcatenate' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln209_3 = add i17 %tmp_5, i17 %zext_ln209_3" [cnn.cpp:209]   --->   Operation 83 'add' 'add_ln209_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln209_4 = zext i3 %select_ln188" [cnn.cpp:209]   --->   Operation 84 'zext' 'zext_ln209_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.67ns) (root node of TernaryAdder)   --->   "%add_ln209_4 = add i17 %add_ln209_3, i17 %zext_ln209_4" [cnn.cpp:209]   --->   Operation 85 'add' 'add_ln209_4' <Predicate = true> <Delay = 0.67> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.33> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln209_5 = zext i17 %add_ln209_4" [cnn.cpp:209]   --->   Operation 86 'zext' 'zext_ln209_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%weight_addr = getelementptr i32 %weight, i64 0, i64 %zext_ln209_5" [cnn.cpp:209]   --->   Operation 87 'getelementptr' 'weight_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%specpipeline_ln195 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_10" [cnn.cpp:195]   --->   Operation 88 'specpipeline' 'specpipeline_ln195' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%bitcast_ln203 = bitcast i32 %kernel_weight_addr_read" [cnn.cpp:203]   --->   Operation 89 'bitcast' 'bitcast_ln203' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (1.24ns)   --->   "%store_ln209 = store i32 %bitcast_ln203, i17 %weight_addr" [cnn.cpp:209]   --->   Operation 90 'store' 'store_ln209' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 102400> <RAM>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%br_ln189 = br void %for.inc" [cnn.cpp:189]   --->   Operation 91 'br' 'br_ln189' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4.000ns, clock uncertainty: 1.080ns.

 <State 1>: 1.565ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar_flatten34' [14]  (0.387 ns)
	'load' operation 17 bit ('indvar_flatten34_load', cnn.cpp:186) on local variable 'indvar_flatten34' [23]  (0.000 ns)
	'add' operation 17 bit ('add_ln186', cnn.cpp:186) [25]  (0.791 ns)
	'store' operation 0 bit ('store_ln186', cnn.cpp:186) of variable 'add_ln186', cnn.cpp:186 on local variable 'indvar_flatten34' [84]  (0.387 ns)

 <State 2>: 2.920ns
The critical path consists of the following:
	'getelementptr' operation 32 bit ('kernel_weight_addr', cnn.cpp:186) [34]  (0.000 ns)
	bus read operation ('kernel_weight_addr_read', cnn.cpp:203) on port 'kernel_weight' (cnn.cpp:203) [76]  (2.920 ns)

 <State 3>: 2.601ns
The critical path consists of the following:
	'add' operation 16 bit ('add_ln209_1', cnn.cpp:209) [64]  (0.000 ns)
	'add' operation 16 bit ('add_ln209_2', cnn.cpp:209) [66]  (0.675 ns)
	'add' operation 17 bit ('add_ln209_3', cnn.cpp:209) [70]  (0.000 ns)
	'add' operation 17 bit ('add_ln209_4', cnn.cpp:209) [72]  (0.678 ns)
	'getelementptr' operation 17 bit ('weight_addr', cnn.cpp:209) [74]  (0.000 ns)
	'store' operation 0 bit ('store_ln209', cnn.cpp:209) of variable 'bitcast_ln203', cnn.cpp:203 on array 'weight' [78]  (1.248 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
