

================================================================
== Vitis HLS Report for 'load_input_S0_Pipeline_VITIS_LOOP_63_2_VITIS_LOOP_64_3'
================================================================
* Date:           Tue May 27 03:03:25 2025

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        cnn.prj
* Solution:       solution (Vitis Kernel Flow Target)
* Product family: virtexuplus
* Target device:  xcu200-fsgd2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  4.00 ns|  2.920 ns|     1.08 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-------+-------+---------+
    |  Latency (cycles) |   Latency (absolute)  |    Interval   | Pipeline|
    |   min   |   max   |    min    |    max    |  min  |  max  |   Type  |
    +---------+---------+-----------+-----------+-------+-------+---------+
    |    13000|    13000|  52.000 us|  52.000 us|  13000|  13000|       no|
    +---------+---------+-----------+-----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- VITIS_LOOP_63_2_VITIS_LOOP_64_3  |    12998|    12998|         4|          1|          1|  12996|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.39>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i2 = alloca i32 1" [cnn.cpp:64]   --->   Operation 7 'alloca' 'i2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar = alloca i32 1"   --->   Operation 8 'alloca' 'indvar' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i1 = alloca i32 1" [cnn.cpp:63]   --->   Operation 9 'alloca' 'i1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 10 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%sext_ln63_read = read i60 @_ssdm_op_Read.ap_auto.i60, i60 %sext_ln63"   --->   Operation 11 'read' 'sext_ln63_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%sext_ln63_cast = sext i60 %sext_ln63_read"   --->   Operation 12 'sext' 'sext_ln63_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i128 %kernel_input, void @empty_16, i32 0, i32 0, void @empty_10, i32 64, i32 0, void @empty_6, void @empty_7, void @empty_10, i32 16, i32 16, i32 16, i32 16, void @empty_10, void @empty_10, i32 4294967295, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.38ns)   --->   "%store_ln0 = store i14 0, i14 %indvar_flatten"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 15 [1/1] (0.38ns)   --->   "%store_ln63 = store i8 0, i8 %i1" [cnn.cpp:63]   --->   Operation 15 'store' 'store_ln63' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 16 [1/1] (0.38ns)   --->   "%store_ln0 = store i6 0, i6 %indvar"   --->   Operation 16 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 17 [1/1] (0.38ns)   --->   "%store_ln64 = store i8 0, i8 %i2" [cnn.cpp:64]   --->   Operation 17 'store' 'store_ln64' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 18 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i14 %indvar_flatten" [cnn.cpp:63]   --->   Operation 19 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.76ns)   --->   "%icmp_ln63 = icmp_eq  i14 %indvar_flatten_load, i14 12996" [cnn.cpp:63]   --->   Operation 20 'icmp' 'icmp_ln63' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.76ns)   --->   "%add_ln63 = add i14 %indvar_flatten_load, i14 1" [cnn.cpp:63]   --->   Operation 21 'add' 'add_ln63' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln63 = br i1 %icmp_ln63, void %for.inc45, void %for.end50.exitStub" [cnn.cpp:63]   --->   Operation 22 'br' 'br_ln63' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%indvar_load = load i6 %indvar" [cnn.cpp:64]   --->   Operation 23 'load' 'indvar_load' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%i1_load = load i8 %i1" [cnn.cpp:63]   --->   Operation 24 'load' 'i1_load' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.70ns)   --->   "%add_ln63_1 = add i8 %i1_load, i8 1" [cnn.cpp:63]   --->   Operation 25 'add' 'add_ln63_1' <Predicate = (!icmp_ln63)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.70ns)   --->   "%icmp_ln64 = icmp_eq  i6 %indvar_load, i6 57" [cnn.cpp:64]   --->   Operation 26 'icmp' 'icmp_ln64' <Predicate = (!icmp_ln63)> <Delay = 0.70> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.30ns)   --->   "%select_ln63_1 = select i1 %icmp_ln64, i8 %add_ln63_1, i8 %i1_load" [cnn.cpp:63]   --->   Operation 27 'select' 'select_ln63_1' <Predicate = (!icmp_ln63)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln82 = zext i8 %select_ln63_1" [cnn.cpp:82]   --->   Operation 28 'zext' 'zext_ln82' <Predicate = (!icmp_ln63)> <Delay = 0.00>
ST_1 : Operation 29 [3/3] (0.99ns) (grouped into DSP with root node add_ln82)   --->   "%mul_ln82 = mul i14 %zext_ln82, i14 57" [cnn.cpp:82]   --->   Operation 29 'mul' 'mul_ln82' <Predicate = (!icmp_ln63)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 30 [1/1] (0.70ns)   --->   "%add_ln64_1 = add i6 %indvar_load, i6 1" [cnn.cpp:64]   --->   Operation 30 'add' 'add_ln64_1' <Predicate = (!icmp_ln63)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.29ns)   --->   "%select_ln64 = select i1 %icmp_ln64, i6 1, i6 %add_ln64_1" [cnn.cpp:64]   --->   Operation 31 'select' 'select_ln64' <Predicate = (!icmp_ln63)> <Delay = 0.29> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.38ns)   --->   "%store_ln63 = store i14 %add_ln63, i14 %indvar_flatten" [cnn.cpp:63]   --->   Operation 32 'store' 'store_ln63' <Predicate = (!icmp_ln63)> <Delay = 0.38>
ST_1 : Operation 33 [1/1] (0.38ns)   --->   "%store_ln63 = store i8 %select_ln63_1, i8 %i1" [cnn.cpp:63]   --->   Operation 33 'store' 'store_ln63' <Predicate = (!icmp_ln63)> <Delay = 0.38>
ST_1 : Operation 34 [1/1] (0.38ns)   --->   "%store_ln64 = store i6 %select_ln64, i6 %indvar" [cnn.cpp:64]   --->   Operation 34 'store' 'store_ln64' <Predicate = (!icmp_ln63)> <Delay = 0.38>

State 2 <SV = 1> <Delay = 0.99>
ST_2 : Operation 35 [2/3] (0.99ns) (grouped into DSP with root node add_ln82)   --->   "%mul_ln82 = mul i14 %zext_ln82, i14 57" [cnn.cpp:82]   --->   Operation 35 'mul' 'mul_ln82' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 2.92>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%i2_load = load i8 %i2" [cnn.cpp:63]   --->   Operation 36 'load' 'i2_load' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%kernel_input_addr = getelementptr i128 %kernel_input, i64 %sext_ln63_cast" [cnn.cpp:63]   --->   Operation 37 'getelementptr' 'kernel_input_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.30ns)   --->   "%select_ln63 = select i1 %icmp_ln64, i8 0, i8 %i2_load" [cnn.cpp:63]   --->   Operation 38 'select' 'select_ln63' <Predicate = true> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 39 [1/3] (0.00ns) (grouped into DSP with root node add_ln82)   --->   "%mul_ln82 = mul i14 %zext_ln82, i14 57" [cnn.cpp:82]   --->   Operation 39 'mul' 'mul_ln82' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i6 @_ssdm_op_PartSelect.i6.i8.i32.i32, i8 %select_ln63, i32 2, i32 7" [cnn.cpp:64]   --->   Operation 40 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln82_1 = zext i6 %lshr_ln" [cnn.cpp:82]   --->   Operation 41 'zext' 'zext_ln82_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln82 = add i14 %mul_ln82, i14 %zext_ln82_1" [cnn.cpp:82]   --->   Operation 42 'add' 'add_ln82' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 43 [1/1] (2.92ns)   --->   "%kernel_input_addr_read = read i128 @_ssdm_op_Read.m_axi.p1i128, i128 %kernel_input_addr" [cnn.cpp:76]   --->   Operation 43 'read' 'kernel_input_addr_read' <Predicate = true> <Delay = 2.92> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln76 = trunc i128 %kernel_input_addr_read" [cnn.cpp:76]   --->   Operation 44 'trunc' 'trunc_ln76' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln76_1 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %kernel_input_addr_read, i32 32, i32 63" [cnn.cpp:76]   --->   Operation 45 'partselect' 'trunc_ln76_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln76_2 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %kernel_input_addr_read, i32 64, i32 95" [cnn.cpp:76]   --->   Operation 46 'partselect' 'trunc_ln76_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%trunc_ln76_3 = partselect i32 @_ssdm_op_PartSelect.i32.i128.i32.i32, i128 %kernel_input_addr_read, i32 96, i32 127" [cnn.cpp:76]   --->   Operation 47 'partselect' 'trunc_ln76_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.70ns)   --->   "%add_ln64 = add i8 %select_ln63, i8 4" [cnn.cpp:64]   --->   Operation 48 'add' 'add_ln64' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.38ns)   --->   "%store_ln64 = store i8 %add_ln64, i8 %i2" [cnn.cpp:64]   --->   Operation 49 'store' 'store_ln64' <Predicate = true> <Delay = 0.38>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 68 'ret' 'ret_ln0' <Predicate = (icmp_ln63)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.89>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_63_2_VITIS_LOOP_64_3_str"   --->   Operation 50 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 12996, i64 12996, i64 12996"   --->   Operation 51 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%specpipeline_ln70 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_10" [cnn.cpp:70]   --->   Operation 52 'specpipeline' 'specpipeline_ln70' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln82 = add i14 %mul_ln82, i14 %zext_ln82_1" [cnn.cpp:82]   --->   Operation 53 'add' 'add_ln82' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln82_2 = zext i14 %add_ln82" [cnn.cpp:82]   --->   Operation 54 'zext' 'zext_ln82_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%input_0_addr = getelementptr i32 %input_0, i64 0, i64 %zext_ln82_2" [cnn.cpp:82]   --->   Operation 55 'getelementptr' 'input_0_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%input_1_addr = getelementptr i32 %input_1, i64 0, i64 %zext_ln82_2" [cnn.cpp:83]   --->   Operation 56 'getelementptr' 'input_1_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%input_2_addr = getelementptr i32 %input_2, i64 0, i64 %zext_ln82_2" [cnn.cpp:84]   --->   Operation 57 'getelementptr' 'input_2_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%input_3_addr = getelementptr i32 %input_3, i64 0, i64 %zext_ln82_2" [cnn.cpp:85]   --->   Operation 58 'getelementptr' 'input_3_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%bitcast_ln76 = bitcast i32 %trunc_ln76" [cnn.cpp:76]   --->   Operation 59 'bitcast' 'bitcast_ln76' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%bitcast_ln76_1 = bitcast i32 %trunc_ln76_1" [cnn.cpp:76]   --->   Operation 60 'bitcast' 'bitcast_ln76_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%bitcast_ln76_2 = bitcast i32 %trunc_ln76_2" [cnn.cpp:76]   --->   Operation 61 'bitcast' 'bitcast_ln76_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%bitcast_ln76_3 = bitcast i32 %trunc_ln76_3" [cnn.cpp:76]   --->   Operation 62 'bitcast' 'bitcast_ln76_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (1.24ns)   --->   "%store_ln82 = store i32 %bitcast_ln76, i14 %input_0_addr" [cnn.cpp:82]   --->   Operation 63 'store' 'store_ln82' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 12996> <RAM>
ST_4 : Operation 64 [1/1] (1.24ns)   --->   "%store_ln83 = store i32 %bitcast_ln76_1, i14 %input_1_addr" [cnn.cpp:83]   --->   Operation 64 'store' 'store_ln83' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 12996> <RAM>
ST_4 : Operation 65 [1/1] (1.24ns)   --->   "%store_ln84 = store i32 %bitcast_ln76_2, i14 %input_2_addr" [cnn.cpp:84]   --->   Operation 65 'store' 'store_ln84' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 12996> <RAM>
ST_4 : Operation 66 [1/1] (1.24ns)   --->   "%store_ln85 = store i32 %bitcast_ln76_3, i14 %input_3_addr" [cnn.cpp:85]   --->   Operation 66 'store' 'store_ln85' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 12996> <RAM>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%br_ln64 = br void %for.inc" [cnn.cpp:64]   --->   Operation 67 'br' 'br_ln64' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4.000ns, clock uncertainty: 1.080ns.

 <State 1>: 2.393ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar' [16]  (0.387 ns)
	'load' operation 6 bit ('indvar_load', cnn.cpp:64) on local variable 'indvar' [26]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln64', cnn.cpp:64) [32]  (0.706 ns)
	'select' operation 8 bit ('select_ln63_1', cnn.cpp:63) [34]  (0.303 ns)
	'mul' operation 14 bit of DSP[40] ('mul_ln82', cnn.cpp:82) [36]  (0.996 ns)

 <State 2>: 0.996ns
The critical path consists of the following:
	'mul' operation 14 bit of DSP[40] ('mul_ln82', cnn.cpp:82) [36]  (0.996 ns)

 <State 3>: 2.920ns
The critical path consists of the following:
	'getelementptr' operation 128 bit ('kernel_input_addr', cnn.cpp:63) [28]  (0.000 ns)
	bus read operation ('kernel_input_addr_read', cnn.cpp:76) on port 'kernel_input' (cnn.cpp:76) [46]  (2.920 ns)

 <State 4>: 1.893ns
The critical path consists of the following:
	'add' operation 14 bit of DSP[40] ('add_ln82', cnn.cpp:82) [40]  (0.645 ns)
	'getelementptr' operation 14 bit ('input_0_addr', cnn.cpp:82) [42]  (0.000 ns)
	'store' operation 0 bit ('store_ln82', cnn.cpp:82) of variable 'bitcast_ln76', cnn.cpp:76 on array 'input_0' [55]  (1.248 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
