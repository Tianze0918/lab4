<profile>

<section name = "Vitis HLS Report for 'kernel_cnn'" level="0">
<item name = "Date">Tue May 27 03:08:36 2025
</item>
<item name = "Version">2023.2 (Build 4023990 on Oct 11 2023)</item>
<item name = "Project">cnn.prj</item>
<item name = "Solution">solution (Vitis Kernel Flow Target)</item>
<item name = "Product family">virtexuplus</item>
<item name = "Target device">xcu200-fsgd2104-2-e</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">4.00 ns, 3.392 ns, 1.08 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">311007698, 311007698, 1.244 sec, 1.244 sec, 311007699, 311007699, no</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
<column name="grp_cnn_fu_164">cnn, 311007697, 311007697, 1.244 sec, 1.244 sec, 311007697, 311007697, no</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 2, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">40, 1656, 434171, 229653, 0</column>
<column name="Memory">3368, -, 0, 0, 0</column>
<column name="Multiplexer">-, -, -, 104, -</column>
<column name="Register">-, -, 199, -, -</column>
<specialColumn name="Available SLR">1440, 2280, 788160, 394080, 320</specialColumn>
<specialColumn name="Utilization SLR (%)">236, 72, 55, 58, 0</specialColumn>
<specialColumn name="Available">4320, 6840, 2364480, 1182240, 960</specialColumn>
<specialColumn name="Utilization (%)">78, 24, 18, 19, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="grp_cnn_fu_164">cnn, 0, 1656, 428527, 224697, 0</column>
<column name="control_s_axi_U">control_s_axi, 0, 0, 246, 424, 0</column>
<column name="kernel_input_m_axi_U">kernel_input_m_axi, 8, 0, 1181, 1117, 0</column>
<column name="kernel_output_m_axi_U">kernel_output_m_axi, 30, 0, 3521, 2695, 0</column>
<column name="kernel_weight_m_axi_U">kernel_weight_m_axi, 2, 0, 696, 720, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
<column name="input_U">input_RAM_1WNR_AUTO_1R1W, 400, 0, 0, 0, 12996, 32, 1, 415872</column>
<column name="input_1_U">input_RAM_1WNR_AUTO_1R1W, 400, 0, 0, 0, 12996, 32, 1, 415872</column>
<column name="input_2_U">input_RAM_1WNR_AUTO_1R1W, 400, 0, 0, 0, 12996, 32, 1, 415872</column>
<column name="input_3_U">input_RAM_1WNR_AUTO_1R1W, 400, 0, 0, 0, 12996, 32, 1, 415872</column>
<column name="output_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_1_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_2_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_3_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_4_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_5_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_6_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_7_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_8_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_9_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_10_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_11_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_12_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_13_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_14_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="output_15_U">output_RAM_AUTO_1R1W, 98, 0, 0, 0, 50176, 32, 1, 1605632</column>
<column name="weight_U">weight_RAM_AUTO_1R1W, 200, 0, 0, 0, 102400, 32, 1, 3276800</column>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="ap_block_state1">or, 0, 0, 2, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">14, 3, 1, 3</column>
<column name="ap_done">9, 2, 1, 2</column>
<column name="kernel_input_ARVALID">9, 2, 1, 2</column>
<column name="kernel_input_RREADY">9, 2, 1, 2</column>
<column name="kernel_output_ARVALID">9, 2, 1, 2</column>
<column name="kernel_output_AWVALID">9, 2, 1, 2</column>
<column name="kernel_output_BREADY">9, 2, 1, 2</column>
<column name="kernel_output_RREADY">9, 2, 1, 2</column>
<column name="kernel_output_WVALID">9, 2, 1, 2</column>
<column name="kernel_weight_ARVALID">9, 2, 1, 2</column>
<column name="kernel_weight_RREADY">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">2, 0, 2, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="ap_rst_n_inv">1, 0, 1, 0</column>
<column name="ap_rst_reg_1">1, 0, 1, 0</column>
<column name="ap_rst_reg_2">1, 0, 1, 0</column>
<column name="grp_cnn_fu_164_ap_start_reg">1, 0, 1, 0</column>
<column name="vinput_read_reg_232">64, 0, 64, 0</column>
<column name="voutput_read_reg_222">64, 0, 64, 0</column>
<column name="vweight_read_reg_227">64, 0, 64, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="s_axi_control_AWVALID">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_AWREADY">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_AWADDR">in, 6, s_axi, control, scalar</column>
<column name="s_axi_control_WVALID">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_WREADY">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_WDATA">in, 32, s_axi, control, scalar</column>
<column name="s_axi_control_WSTRB">in, 4, s_axi, control, scalar</column>
<column name="s_axi_control_ARVALID">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_ARREADY">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_ARADDR">in, 6, s_axi, control, scalar</column>
<column name="s_axi_control_RVALID">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_RREADY">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_RDATA">out, 32, s_axi, control, scalar</column>
<column name="s_axi_control_RRESP">out, 2, s_axi, control, scalar</column>
<column name="s_axi_control_BVALID">out, 1, s_axi, control, scalar</column>
<column name="s_axi_control_BREADY">in, 1, s_axi, control, scalar</column>
<column name="s_axi_control_BRESP">out, 2, s_axi, control, scalar</column>
<column name="ap_clk">in, 1, ap_ctrl_chain, kernel_cnn, return value</column>
<column name="ap_rst_n">in, 1, ap_ctrl_chain, kernel_cnn, return value</column>
<column name="interrupt">out, 1, ap_ctrl_chain, kernel_cnn, return value</column>
<column name="m_axi_kernel_input_AWVALID">out, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_AWREADY">in, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_AWADDR">out, 64, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_AWID">out, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_AWLEN">out, 8, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_AWSIZE">out, 3, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_AWBURST">out, 2, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_AWLOCK">out, 2, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_AWCACHE">out, 4, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_AWPROT">out, 3, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_AWQOS">out, 4, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_AWREGION">out, 4, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_AWUSER">out, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_WVALID">out, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_WREADY">in, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_WDATA">out, 128, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_WSTRB">out, 16, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_WLAST">out, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_WID">out, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_WUSER">out, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARVALID">out, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARREADY">in, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARADDR">out, 64, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARID">out, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARLEN">out, 8, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARSIZE">out, 3, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARBURST">out, 2, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARLOCK">out, 2, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARCACHE">out, 4, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARPROT">out, 3, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARQOS">out, 4, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARREGION">out, 4, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_ARUSER">out, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_RVALID">in, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_RREADY">out, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_RDATA">in, 128, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_RLAST">in, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_RID">in, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_RUSER">in, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_RRESP">in, 2, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_BVALID">in, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_BREADY">out, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_BRESP">in, 2, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_BID">in, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_input_BUSER">in, 1, m_axi, kernel_input, pointer</column>
<column name="m_axi_kernel_weight_AWVALID">out, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_AWREADY">in, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_AWADDR">out, 64, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_AWID">out, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_AWLEN">out, 8, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_AWSIZE">out, 3, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_AWBURST">out, 2, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_AWLOCK">out, 2, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_AWCACHE">out, 4, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_AWPROT">out, 3, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_AWQOS">out, 4, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_AWREGION">out, 4, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_AWUSER">out, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_WVALID">out, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_WREADY">in, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_WDATA">out, 32, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_WSTRB">out, 4, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_WLAST">out, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_WID">out, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_WUSER">out, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARVALID">out, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARREADY">in, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARADDR">out, 64, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARID">out, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARLEN">out, 8, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARSIZE">out, 3, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARBURST">out, 2, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARLOCK">out, 2, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARCACHE">out, 4, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARPROT">out, 3, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARQOS">out, 4, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARREGION">out, 4, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_ARUSER">out, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_RVALID">in, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_RREADY">out, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_RDATA">in, 32, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_RLAST">in, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_RID">in, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_RUSER">in, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_RRESP">in, 2, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_BVALID">in, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_BREADY">out, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_BRESP">in, 2, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_BID">in, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_weight_BUSER">in, 1, m_axi, kernel_weight, pointer</column>
<column name="m_axi_kernel_output_AWVALID">out, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_AWREADY">in, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_AWADDR">out, 64, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_AWID">out, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_AWLEN">out, 8, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_AWSIZE">out, 3, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_AWBURST">out, 2, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_AWLOCK">out, 2, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_AWCACHE">out, 4, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_AWPROT">out, 3, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_AWQOS">out, 4, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_AWREGION">out, 4, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_AWUSER">out, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_WVALID">out, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_WREADY">in, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_WDATA">out, 512, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_WSTRB">out, 64, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_WLAST">out, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_WID">out, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_WUSER">out, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARVALID">out, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARREADY">in, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARADDR">out, 64, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARID">out, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARLEN">out, 8, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARSIZE">out, 3, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARBURST">out, 2, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARLOCK">out, 2, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARCACHE">out, 4, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARPROT">out, 3, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARQOS">out, 4, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARREGION">out, 4, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_ARUSER">out, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_RVALID">in, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_RREADY">out, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_RDATA">in, 512, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_RLAST">in, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_RID">in, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_RUSER">in, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_RRESP">in, 2, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_BVALID">in, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_BREADY">out, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_BRESP">in, 2, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_BID">in, 1, m_axi, kernel_output, pointer</column>
<column name="m_axi_kernel_output_BUSER">in, 1, m_axi, kernel_output, pointer</column>
</table>
</item>
</section>
</profile>
