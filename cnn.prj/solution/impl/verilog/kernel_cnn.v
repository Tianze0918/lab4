// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel_cnn_kernel_cnn,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.392000,HLS_SYN_LAT=7323752913,HLS_SYN_TPT=none,HLS_SYN_MEM=3008,HLS_SYN_DSP=0,HLS_SYN_FF=19507,HLS_SYN_LUT=18864,HLS_VERSION=2023_2}" *)

module kernel_cnn (
        ap_clk,
        ap_rst_n,
        m_axi_kernel_input_AWVALID,
        m_axi_kernel_input_AWREADY,
        m_axi_kernel_input_AWADDR,
        m_axi_kernel_input_AWID,
        m_axi_kernel_input_AWLEN,
        m_axi_kernel_input_AWSIZE,
        m_axi_kernel_input_AWBURST,
        m_axi_kernel_input_AWLOCK,
        m_axi_kernel_input_AWCACHE,
        m_axi_kernel_input_AWPROT,
        m_axi_kernel_input_AWQOS,
        m_axi_kernel_input_AWREGION,
        m_axi_kernel_input_AWUSER,
        m_axi_kernel_input_WVALID,
        m_axi_kernel_input_WREADY,
        m_axi_kernel_input_WDATA,
        m_axi_kernel_input_WSTRB,
        m_axi_kernel_input_WLAST,
        m_axi_kernel_input_WID,
        m_axi_kernel_input_WUSER,
        m_axi_kernel_input_ARVALID,
        m_axi_kernel_input_ARREADY,
        m_axi_kernel_input_ARADDR,
        m_axi_kernel_input_ARID,
        m_axi_kernel_input_ARLEN,
        m_axi_kernel_input_ARSIZE,
        m_axi_kernel_input_ARBURST,
        m_axi_kernel_input_ARLOCK,
        m_axi_kernel_input_ARCACHE,
        m_axi_kernel_input_ARPROT,
        m_axi_kernel_input_ARQOS,
        m_axi_kernel_input_ARREGION,
        m_axi_kernel_input_ARUSER,
        m_axi_kernel_input_RVALID,
        m_axi_kernel_input_RREADY,
        m_axi_kernel_input_RDATA,
        m_axi_kernel_input_RLAST,
        m_axi_kernel_input_RID,
        m_axi_kernel_input_RUSER,
        m_axi_kernel_input_RRESP,
        m_axi_kernel_input_BVALID,
        m_axi_kernel_input_BREADY,
        m_axi_kernel_input_BRESP,
        m_axi_kernel_input_BID,
        m_axi_kernel_input_BUSER,
        m_axi_kernel_weight_AWVALID,
        m_axi_kernel_weight_AWREADY,
        m_axi_kernel_weight_AWADDR,
        m_axi_kernel_weight_AWID,
        m_axi_kernel_weight_AWLEN,
        m_axi_kernel_weight_AWSIZE,
        m_axi_kernel_weight_AWBURST,
        m_axi_kernel_weight_AWLOCK,
        m_axi_kernel_weight_AWCACHE,
        m_axi_kernel_weight_AWPROT,
        m_axi_kernel_weight_AWQOS,
        m_axi_kernel_weight_AWREGION,
        m_axi_kernel_weight_AWUSER,
        m_axi_kernel_weight_WVALID,
        m_axi_kernel_weight_WREADY,
        m_axi_kernel_weight_WDATA,
        m_axi_kernel_weight_WSTRB,
        m_axi_kernel_weight_WLAST,
        m_axi_kernel_weight_WID,
        m_axi_kernel_weight_WUSER,
        m_axi_kernel_weight_ARVALID,
        m_axi_kernel_weight_ARREADY,
        m_axi_kernel_weight_ARADDR,
        m_axi_kernel_weight_ARID,
        m_axi_kernel_weight_ARLEN,
        m_axi_kernel_weight_ARSIZE,
        m_axi_kernel_weight_ARBURST,
        m_axi_kernel_weight_ARLOCK,
        m_axi_kernel_weight_ARCACHE,
        m_axi_kernel_weight_ARPROT,
        m_axi_kernel_weight_ARQOS,
        m_axi_kernel_weight_ARREGION,
        m_axi_kernel_weight_ARUSER,
        m_axi_kernel_weight_RVALID,
        m_axi_kernel_weight_RREADY,
        m_axi_kernel_weight_RDATA,
        m_axi_kernel_weight_RLAST,
        m_axi_kernel_weight_RID,
        m_axi_kernel_weight_RUSER,
        m_axi_kernel_weight_RRESP,
        m_axi_kernel_weight_BVALID,
        m_axi_kernel_weight_BREADY,
        m_axi_kernel_weight_BRESP,
        m_axi_kernel_weight_BID,
        m_axi_kernel_weight_BUSER,
        m_axi_kernel_output_AWVALID,
        m_axi_kernel_output_AWREADY,
        m_axi_kernel_output_AWADDR,
        m_axi_kernel_output_AWID,
        m_axi_kernel_output_AWLEN,
        m_axi_kernel_output_AWSIZE,
        m_axi_kernel_output_AWBURST,
        m_axi_kernel_output_AWLOCK,
        m_axi_kernel_output_AWCACHE,
        m_axi_kernel_output_AWPROT,
        m_axi_kernel_output_AWQOS,
        m_axi_kernel_output_AWREGION,
        m_axi_kernel_output_AWUSER,
        m_axi_kernel_output_WVALID,
        m_axi_kernel_output_WREADY,
        m_axi_kernel_output_WDATA,
        m_axi_kernel_output_WSTRB,
        m_axi_kernel_output_WLAST,
        m_axi_kernel_output_WID,
        m_axi_kernel_output_WUSER,
        m_axi_kernel_output_ARVALID,
        m_axi_kernel_output_ARREADY,
        m_axi_kernel_output_ARADDR,
        m_axi_kernel_output_ARID,
        m_axi_kernel_output_ARLEN,
        m_axi_kernel_output_ARSIZE,
        m_axi_kernel_output_ARBURST,
        m_axi_kernel_output_ARLOCK,
        m_axi_kernel_output_ARCACHE,
        m_axi_kernel_output_ARPROT,
        m_axi_kernel_output_ARQOS,
        m_axi_kernel_output_ARREGION,
        m_axi_kernel_output_ARUSER,
        m_axi_kernel_output_RVALID,
        m_axi_kernel_output_RREADY,
        m_axi_kernel_output_RDATA,
        m_axi_kernel_output_RLAST,
        m_axi_kernel_output_RID,
        m_axi_kernel_output_RUSER,
        m_axi_kernel_output_RRESP,
        m_axi_kernel_output_BVALID,
        m_axi_kernel_output_BREADY,
        m_axi_kernel_output_BRESP,
        m_axi_kernel_output_BID,
        m_axi_kernel_output_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_KERNEL_INPUT_ID_WIDTH = 1;
parameter    C_M_AXI_KERNEL_INPUT_ADDR_WIDTH = 64;
parameter    C_M_AXI_KERNEL_INPUT_DATA_WIDTH = 128;
parameter    C_M_AXI_KERNEL_INPUT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_INPUT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_INPUT_WUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_INPUT_RUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_INPUT_BUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_INPUT_USER_VALUE = 0;
parameter    C_M_AXI_KERNEL_INPUT_PROT_VALUE = 0;
parameter    C_M_AXI_KERNEL_INPUT_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_KERNEL_OUTPUT_ID_WIDTH = 1;
parameter    C_M_AXI_KERNEL_OUTPUT_ADDR_WIDTH = 64;
parameter    C_M_AXI_KERNEL_OUTPUT_DATA_WIDTH = 512;
parameter    C_M_AXI_KERNEL_OUTPUT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_OUTPUT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_OUTPUT_WUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_OUTPUT_RUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_OUTPUT_BUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_OUTPUT_USER_VALUE = 0;
parameter    C_M_AXI_KERNEL_OUTPUT_PROT_VALUE = 0;
parameter    C_M_AXI_KERNEL_OUTPUT_CACHE_VALUE = 3;
parameter    C_M_AXI_KERNEL_WEIGHT_ID_WIDTH = 1;
parameter    C_M_AXI_KERNEL_WEIGHT_ADDR_WIDTH = 64;
parameter    C_M_AXI_KERNEL_WEIGHT_DATA_WIDTH = 32;
parameter    C_M_AXI_KERNEL_WEIGHT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_WEIGHT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_WEIGHT_WUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_WEIGHT_RUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_WEIGHT_BUSER_WIDTH = 1;
parameter    C_M_AXI_KERNEL_WEIGHT_USER_VALUE = 0;
parameter    C_M_AXI_KERNEL_WEIGHT_PROT_VALUE = 0;
parameter    C_M_AXI_KERNEL_WEIGHT_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_KERNEL_INPUT_WSTRB_WIDTH = (128 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_KERNEL_OUTPUT_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_KERNEL_WEIGHT_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_kernel_input_AWVALID;
input   m_axi_kernel_input_AWREADY;
output  [C_M_AXI_KERNEL_INPUT_ADDR_WIDTH - 1:0] m_axi_kernel_input_AWADDR;
output  [C_M_AXI_KERNEL_INPUT_ID_WIDTH - 1:0] m_axi_kernel_input_AWID;
output  [7:0] m_axi_kernel_input_AWLEN;
output  [2:0] m_axi_kernel_input_AWSIZE;
output  [1:0] m_axi_kernel_input_AWBURST;
output  [1:0] m_axi_kernel_input_AWLOCK;
output  [3:0] m_axi_kernel_input_AWCACHE;
output  [2:0] m_axi_kernel_input_AWPROT;
output  [3:0] m_axi_kernel_input_AWQOS;
output  [3:0] m_axi_kernel_input_AWREGION;
output  [C_M_AXI_KERNEL_INPUT_AWUSER_WIDTH - 1:0] m_axi_kernel_input_AWUSER;
output   m_axi_kernel_input_WVALID;
input   m_axi_kernel_input_WREADY;
output  [C_M_AXI_KERNEL_INPUT_DATA_WIDTH - 1:0] m_axi_kernel_input_WDATA;
output  [C_M_AXI_KERNEL_INPUT_WSTRB_WIDTH - 1:0] m_axi_kernel_input_WSTRB;
output   m_axi_kernel_input_WLAST;
output  [C_M_AXI_KERNEL_INPUT_ID_WIDTH - 1:0] m_axi_kernel_input_WID;
output  [C_M_AXI_KERNEL_INPUT_WUSER_WIDTH - 1:0] m_axi_kernel_input_WUSER;
output   m_axi_kernel_input_ARVALID;
input   m_axi_kernel_input_ARREADY;
output  [C_M_AXI_KERNEL_INPUT_ADDR_WIDTH - 1:0] m_axi_kernel_input_ARADDR;
output  [C_M_AXI_KERNEL_INPUT_ID_WIDTH - 1:0] m_axi_kernel_input_ARID;
output  [7:0] m_axi_kernel_input_ARLEN;
output  [2:0] m_axi_kernel_input_ARSIZE;
output  [1:0] m_axi_kernel_input_ARBURST;
output  [1:0] m_axi_kernel_input_ARLOCK;
output  [3:0] m_axi_kernel_input_ARCACHE;
output  [2:0] m_axi_kernel_input_ARPROT;
output  [3:0] m_axi_kernel_input_ARQOS;
output  [3:0] m_axi_kernel_input_ARREGION;
output  [C_M_AXI_KERNEL_INPUT_ARUSER_WIDTH - 1:0] m_axi_kernel_input_ARUSER;
input   m_axi_kernel_input_RVALID;
output   m_axi_kernel_input_RREADY;
input  [C_M_AXI_KERNEL_INPUT_DATA_WIDTH - 1:0] m_axi_kernel_input_RDATA;
input   m_axi_kernel_input_RLAST;
input  [C_M_AXI_KERNEL_INPUT_ID_WIDTH - 1:0] m_axi_kernel_input_RID;
input  [C_M_AXI_KERNEL_INPUT_RUSER_WIDTH - 1:0] m_axi_kernel_input_RUSER;
input  [1:0] m_axi_kernel_input_RRESP;
input   m_axi_kernel_input_BVALID;
output   m_axi_kernel_input_BREADY;
input  [1:0] m_axi_kernel_input_BRESP;
input  [C_M_AXI_KERNEL_INPUT_ID_WIDTH - 1:0] m_axi_kernel_input_BID;
input  [C_M_AXI_KERNEL_INPUT_BUSER_WIDTH - 1:0] m_axi_kernel_input_BUSER;
output   m_axi_kernel_weight_AWVALID;
input   m_axi_kernel_weight_AWREADY;
output  [C_M_AXI_KERNEL_WEIGHT_ADDR_WIDTH - 1:0] m_axi_kernel_weight_AWADDR;
output  [C_M_AXI_KERNEL_WEIGHT_ID_WIDTH - 1:0] m_axi_kernel_weight_AWID;
output  [7:0] m_axi_kernel_weight_AWLEN;
output  [2:0] m_axi_kernel_weight_AWSIZE;
output  [1:0] m_axi_kernel_weight_AWBURST;
output  [1:0] m_axi_kernel_weight_AWLOCK;
output  [3:0] m_axi_kernel_weight_AWCACHE;
output  [2:0] m_axi_kernel_weight_AWPROT;
output  [3:0] m_axi_kernel_weight_AWQOS;
output  [3:0] m_axi_kernel_weight_AWREGION;
output  [C_M_AXI_KERNEL_WEIGHT_AWUSER_WIDTH - 1:0] m_axi_kernel_weight_AWUSER;
output   m_axi_kernel_weight_WVALID;
input   m_axi_kernel_weight_WREADY;
output  [C_M_AXI_KERNEL_WEIGHT_DATA_WIDTH - 1:0] m_axi_kernel_weight_WDATA;
output  [C_M_AXI_KERNEL_WEIGHT_WSTRB_WIDTH - 1:0] m_axi_kernel_weight_WSTRB;
output   m_axi_kernel_weight_WLAST;
output  [C_M_AXI_KERNEL_WEIGHT_ID_WIDTH - 1:0] m_axi_kernel_weight_WID;
output  [C_M_AXI_KERNEL_WEIGHT_WUSER_WIDTH - 1:0] m_axi_kernel_weight_WUSER;
output   m_axi_kernel_weight_ARVALID;
input   m_axi_kernel_weight_ARREADY;
output  [C_M_AXI_KERNEL_WEIGHT_ADDR_WIDTH - 1:0] m_axi_kernel_weight_ARADDR;
output  [C_M_AXI_KERNEL_WEIGHT_ID_WIDTH - 1:0] m_axi_kernel_weight_ARID;
output  [7:0] m_axi_kernel_weight_ARLEN;
output  [2:0] m_axi_kernel_weight_ARSIZE;
output  [1:0] m_axi_kernel_weight_ARBURST;
output  [1:0] m_axi_kernel_weight_ARLOCK;
output  [3:0] m_axi_kernel_weight_ARCACHE;
output  [2:0] m_axi_kernel_weight_ARPROT;
output  [3:0] m_axi_kernel_weight_ARQOS;
output  [3:0] m_axi_kernel_weight_ARREGION;
output  [C_M_AXI_KERNEL_WEIGHT_ARUSER_WIDTH - 1:0] m_axi_kernel_weight_ARUSER;
input   m_axi_kernel_weight_RVALID;
output   m_axi_kernel_weight_RREADY;
input  [C_M_AXI_KERNEL_WEIGHT_DATA_WIDTH - 1:0] m_axi_kernel_weight_RDATA;
input   m_axi_kernel_weight_RLAST;
input  [C_M_AXI_KERNEL_WEIGHT_ID_WIDTH - 1:0] m_axi_kernel_weight_RID;
input  [C_M_AXI_KERNEL_WEIGHT_RUSER_WIDTH - 1:0] m_axi_kernel_weight_RUSER;
input  [1:0] m_axi_kernel_weight_RRESP;
input   m_axi_kernel_weight_BVALID;
output   m_axi_kernel_weight_BREADY;
input  [1:0] m_axi_kernel_weight_BRESP;
input  [C_M_AXI_KERNEL_WEIGHT_ID_WIDTH - 1:0] m_axi_kernel_weight_BID;
input  [C_M_AXI_KERNEL_WEIGHT_BUSER_WIDTH - 1:0] m_axi_kernel_weight_BUSER;
output   m_axi_kernel_output_AWVALID;
input   m_axi_kernel_output_AWREADY;
output  [C_M_AXI_KERNEL_OUTPUT_ADDR_WIDTH - 1:0] m_axi_kernel_output_AWADDR;
output  [C_M_AXI_KERNEL_OUTPUT_ID_WIDTH - 1:0] m_axi_kernel_output_AWID;
output  [7:0] m_axi_kernel_output_AWLEN;
output  [2:0] m_axi_kernel_output_AWSIZE;
output  [1:0] m_axi_kernel_output_AWBURST;
output  [1:0] m_axi_kernel_output_AWLOCK;
output  [3:0] m_axi_kernel_output_AWCACHE;
output  [2:0] m_axi_kernel_output_AWPROT;
output  [3:0] m_axi_kernel_output_AWQOS;
output  [3:0] m_axi_kernel_output_AWREGION;
output  [C_M_AXI_KERNEL_OUTPUT_AWUSER_WIDTH - 1:0] m_axi_kernel_output_AWUSER;
output   m_axi_kernel_output_WVALID;
input   m_axi_kernel_output_WREADY;
output  [C_M_AXI_KERNEL_OUTPUT_DATA_WIDTH - 1:0] m_axi_kernel_output_WDATA;
output  [C_M_AXI_KERNEL_OUTPUT_WSTRB_WIDTH - 1:0] m_axi_kernel_output_WSTRB;
output   m_axi_kernel_output_WLAST;
output  [C_M_AXI_KERNEL_OUTPUT_ID_WIDTH - 1:0] m_axi_kernel_output_WID;
output  [C_M_AXI_KERNEL_OUTPUT_WUSER_WIDTH - 1:0] m_axi_kernel_output_WUSER;
output   m_axi_kernel_output_ARVALID;
input   m_axi_kernel_output_ARREADY;
output  [C_M_AXI_KERNEL_OUTPUT_ADDR_WIDTH - 1:0] m_axi_kernel_output_ARADDR;
output  [C_M_AXI_KERNEL_OUTPUT_ID_WIDTH - 1:0] m_axi_kernel_output_ARID;
output  [7:0] m_axi_kernel_output_ARLEN;
output  [2:0] m_axi_kernel_output_ARSIZE;
output  [1:0] m_axi_kernel_output_ARBURST;
output  [1:0] m_axi_kernel_output_ARLOCK;
output  [3:0] m_axi_kernel_output_ARCACHE;
output  [2:0] m_axi_kernel_output_ARPROT;
output  [3:0] m_axi_kernel_output_ARQOS;
output  [3:0] m_axi_kernel_output_ARREGION;
output  [C_M_AXI_KERNEL_OUTPUT_ARUSER_WIDTH - 1:0] m_axi_kernel_output_ARUSER;
input   m_axi_kernel_output_RVALID;
output   m_axi_kernel_output_RREADY;
input  [C_M_AXI_KERNEL_OUTPUT_DATA_WIDTH - 1:0] m_axi_kernel_output_RDATA;
input   m_axi_kernel_output_RLAST;
input  [C_M_AXI_KERNEL_OUTPUT_ID_WIDTH - 1:0] m_axi_kernel_output_RID;
input  [C_M_AXI_KERNEL_OUTPUT_RUSER_WIDTH - 1:0] m_axi_kernel_output_RUSER;
input  [1:0] m_axi_kernel_output_RRESP;
input   m_axi_kernel_output_BVALID;
output   m_axi_kernel_output_BREADY;
input  [1:0] m_axi_kernel_output_BRESP;
input  [C_M_AXI_KERNEL_OUTPUT_ID_WIDTH - 1:0] m_axi_kernel_output_BID;
input  [C_M_AXI_KERNEL_OUTPUT_BUSER_WIDTH - 1:0] m_axi_kernel_output_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] vinput;
wire   [63:0] vweight;
wire   [63:0] voutput;
reg   [63:0] voutput_read_reg_1027;
reg    ap_block_state1;
reg   [63:0] vweight_read_reg_1033;
reg   [63:0] vinput_read_reg_1038;
wire   [4:0] i0_2_fu_634_p2;
reg   [4:0] i0_2_reg_1052;
wire    ap_CS_fsm_state2;
wire   [3:0] trunc_ln293_fu_640_p1;
reg   [3:0] trunc_ln293_reg_1057;
wire   [8:0] add_ln308_fu_652_p2;
reg   [8:0] add_ln308_reg_1067;
wire    ap_CS_fsm_state4;
wire   [7:0] trunc_ln315_fu_658_p1;
reg   [7:0] trunc_ln315_reg_1072;
wire   [13:0] zext_ln308_fu_667_p1;
reg   [13:0] zext_ln308_reg_1077;
wire    ap_CS_fsm_state5;
wire    grp_load_input_S0_fu_530_ap_done;
wire   [4:0] add_ln317_fu_677_p2;
reg   [4:0] add_ln317_reg_1085;
wire    ap_CS_fsm_state6;
wire   [13:0] empty_fu_707_p2;
reg   [13:0] empty_reg_1090;
wire   [16:0] trunc_ln331_fu_717_p1;
reg   [16:0] trunc_ln331_reg_1095;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire   [31:0] weight_q0;
reg   [31:0] weight_load_reg_1138;
wire    ap_CS_fsm_state11;
wire   [31:0] weight_q1;
reg   [31:0] weight_load_1_reg_1153;
reg   [31:0] weight_load_2_reg_1158;
wire    ap_CS_fsm_state12;
reg   [31:0] weight_load_3_reg_1173;
reg   [31:0] weight_load_4_reg_1178;
wire    ap_CS_fsm_state13;
reg   [31:0] weight_load_5_reg_1193;
reg   [31:0] weight_load_6_reg_1198;
wire    ap_CS_fsm_state14;
reg   [31:0] weight_load_7_reg_1213;
reg   [31:0] weight_load_8_reg_1218;
wire    ap_CS_fsm_state15;
reg   [31:0] weight_load_9_reg_1233;
reg   [31:0] weight_load_10_reg_1238;
wire    ap_CS_fsm_state16;
reg   [31:0] weight_load_11_reg_1253;
reg   [31:0] weight_load_12_reg_1258;
wire    ap_CS_fsm_state17;
reg   [31:0] weight_load_13_reg_1273;
reg   [31:0] weight_load_14_reg_1278;
wire    ap_CS_fsm_state18;
reg   [31:0] weight_load_15_reg_1293;
reg   [31:0] weight_load_16_reg_1298;
wire    ap_CS_fsm_state19;
reg   [31:0] weight_load_17_reg_1313;
reg   [31:0] weight_load_18_reg_1318;
wire    ap_CS_fsm_state20;
reg   [31:0] weight_load_19_reg_1333;
reg   [31:0] weight_load_20_reg_1338;
wire    ap_CS_fsm_state21;
reg   [31:0] weight_load_21_reg_1353;
reg   [31:0] weight_load_22_reg_1358;
wire  signed [14:0] sext_ln331_fu_960_p1;
reg  signed [14:0] sext_ln331_reg_1363;
wire    ap_CS_fsm_state22;
reg   [31:0] weight_load_23_reg_1368;
reg   [31:0] weight_load_24_reg_1373;
wire   [15:0] empty_41_fu_992_p2;
reg   [15:0] empty_41_reg_1378;
wire    ap_CS_fsm_state23;
wire   [7:0] trunc_ln318_fu_998_p1;
reg   [7:0] trunc_ln318_reg_1383;
reg   [13:0] input_address0;
reg    input_ce0;
reg    input_we0;
wire   [31:0] input_q0;
reg    input_ce1;
wire   [31:0] input_q1;
reg    input_ce2;
wire   [31:0] input_q2;
reg    input_ce3;
wire   [31:0] input_q3;
reg    input_ce4;
wire   [31:0] input_q4;
reg    input_ce5;
wire   [31:0] input_q5;
reg    input_ce6;
wire   [31:0] input_q6;
reg    input_ce7;
wire   [31:0] input_q7;
reg    input_ce8;
wire   [31:0] input_q8;
reg    input_ce9;
wire   [31:0] input_q9;
reg    input_ce10;
wire   [31:0] input_q10;
reg    input_ce11;
wire   [31:0] input_q11;
reg    input_ce12;
wire   [31:0] input_q12;
reg   [13:0] input_1_address0;
reg    input_1_ce0;
reg    input_1_we0;
wire   [31:0] input_1_q0;
reg    input_1_ce1;
wire   [31:0] input_1_q1;
reg    input_1_ce2;
wire   [31:0] input_1_q2;
reg    input_1_ce3;
wire   [31:0] input_1_q3;
reg    input_1_ce4;
wire   [31:0] input_1_q4;
reg    input_1_ce5;
wire   [31:0] input_1_q5;
reg    input_1_ce6;
wire   [31:0] input_1_q6;
reg    input_1_ce7;
wire   [31:0] input_1_q7;
reg    input_1_ce8;
wire   [31:0] input_1_q8;
reg    input_1_ce9;
wire   [31:0] input_1_q9;
reg    input_1_ce10;
wire   [31:0] input_1_q10;
reg    input_1_ce11;
wire   [31:0] input_1_q11;
reg    input_1_ce12;
wire   [31:0] input_1_q12;
reg   [13:0] input_2_address0;
reg    input_2_ce0;
reg    input_2_we0;
wire   [31:0] input_2_q0;
reg    input_2_ce1;
wire   [31:0] input_2_q1;
reg    input_2_ce2;
wire   [31:0] input_2_q2;
reg    input_2_ce3;
wire   [31:0] input_2_q3;
reg    input_2_ce4;
wire   [31:0] input_2_q4;
reg    input_2_ce5;
wire   [31:0] input_2_q5;
reg    input_2_ce6;
wire   [31:0] input_2_q6;
reg    input_2_ce7;
wire   [31:0] input_2_q7;
reg    input_2_ce8;
wire   [31:0] input_2_q8;
reg    input_2_ce9;
wire   [31:0] input_2_q9;
reg    input_2_ce10;
wire   [31:0] input_2_q10;
reg    input_2_ce11;
wire   [31:0] input_2_q11;
reg    input_2_ce12;
wire   [31:0] input_2_q12;
reg   [13:0] input_3_address0;
reg    input_3_ce0;
reg    input_3_we0;
wire   [31:0] input_3_q0;
reg    input_3_ce1;
wire   [31:0] input_3_q1;
reg    input_3_ce2;
wire   [31:0] input_3_q2;
reg    input_3_ce3;
wire   [31:0] input_3_q3;
reg    input_3_ce4;
wire   [31:0] input_3_q4;
reg    input_3_ce5;
wire   [31:0] input_3_q5;
reg    input_3_ce6;
wire   [31:0] input_3_q6;
reg    input_3_ce7;
wire   [31:0] input_3_q7;
reg    input_3_ce8;
wire   [31:0] input_3_q8;
reg    input_3_ce9;
wire   [31:0] input_3_q9;
reg    input_3_ce10;
wire   [31:0] input_3_q10;
reg    input_3_ce11;
wire   [31:0] input_3_q11;
reg    input_3_ce12;
wire   [31:0] input_3_q12;
reg   [15:0] output_address0;
reg    output_ce0;
reg    output_we0;
reg   [31:0] output_d0;
wire   [31:0] output_q0;
reg   [15:0] output_1_address0;
reg    output_1_ce0;
reg    output_1_we0;
reg   [31:0] output_1_d0;
wire   [31:0] output_1_q0;
reg   [15:0] output_2_address0;
reg    output_2_ce0;
reg    output_2_we0;
reg   [31:0] output_2_d0;
wire   [31:0] output_2_q0;
reg   [15:0] output_3_address0;
reg    output_3_ce0;
reg    output_3_we0;
reg   [31:0] output_3_d0;
wire   [31:0] output_3_q0;
reg   [15:0] output_4_address0;
reg    output_4_ce0;
reg    output_4_we0;
reg   [31:0] output_4_d0;
wire   [31:0] output_4_q0;
reg   [15:0] output_5_address0;
reg    output_5_ce0;
reg    output_5_we0;
reg   [31:0] output_5_d0;
wire   [31:0] output_5_q0;
reg   [15:0] output_6_address0;
reg    output_6_ce0;
reg    output_6_we0;
reg   [31:0] output_6_d0;
wire   [31:0] output_6_q0;
reg   [15:0] output_7_address0;
reg    output_7_ce0;
reg    output_7_we0;
reg   [31:0] output_7_d0;
wire   [31:0] output_7_q0;
reg   [15:0] output_8_address0;
reg    output_8_ce0;
reg    output_8_we0;
reg   [31:0] output_8_d0;
wire   [31:0] output_8_q0;
reg   [15:0] output_9_address0;
reg    output_9_ce0;
reg    output_9_we0;
reg   [31:0] output_9_d0;
wire   [31:0] output_9_q0;
reg   [15:0] output_10_address0;
reg    output_10_ce0;
reg    output_10_we0;
reg   [31:0] output_10_d0;
wire   [31:0] output_10_q0;
reg   [15:0] output_11_address0;
reg    output_11_ce0;
reg    output_11_we0;
reg   [31:0] output_11_d0;
wire   [31:0] output_11_q0;
reg   [15:0] output_12_address0;
reg    output_12_ce0;
reg    output_12_we0;
reg   [31:0] output_12_d0;
wire   [31:0] output_12_q0;
reg   [15:0] output_13_address0;
reg    output_13_ce0;
reg    output_13_we0;
reg   [31:0] output_13_d0;
wire   [31:0] output_13_q0;
reg   [15:0] output_14_address0;
reg    output_14_ce0;
reg    output_14_we0;
reg   [31:0] output_14_d0;
wire   [31:0] output_14_q0;
reg   [15:0] output_15_address0;
reg    output_15_ce0;
reg    output_15_we0;
reg   [31:0] output_15_d0;
wire   [31:0] output_15_q0;
reg   [16:0] weight_address0;
reg    weight_ce0;
reg    weight_we0;
reg   [16:0] weight_address1;
reg    weight_ce1;
wire    grp_load_weight_S0_fu_497_ap_start;
wire    grp_load_weight_S0_fu_497_ap_done;
wire    grp_load_weight_S0_fu_497_ap_idle;
wire    grp_load_weight_S0_fu_497_ap_ready;
wire   [16:0] grp_load_weight_S0_fu_497_weight_address0;
wire    grp_load_weight_S0_fu_497_weight_ce0;
wire    grp_load_weight_S0_fu_497_weight_we0;
wire   [31:0] grp_load_weight_S0_fu_497_weight_d0;
wire    grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWVALID;
wire   [63:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWADDR;
wire   [0:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWID;
wire   [31:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWLEN;
wire   [2:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWSIZE;
wire   [1:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWBURST;
wire   [1:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWLOCK;
wire   [3:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWCACHE;
wire   [2:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWPROT;
wire   [3:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWQOS;
wire   [3:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWREGION;
wire   [0:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWUSER;
wire    grp_load_weight_S0_fu_497_m_axi_kernel_weight_WVALID;
wire   [31:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_WDATA;
wire   [3:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_WSTRB;
wire    grp_load_weight_S0_fu_497_m_axi_kernel_weight_WLAST;
wire   [0:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_WID;
wire   [0:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_WUSER;
wire    grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARVALID;
wire   [63:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARADDR;
wire   [0:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARID;
wire   [31:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARLEN;
wire   [2:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARSIZE;
wire   [1:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARBURST;
wire   [1:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARLOCK;
wire   [3:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARCACHE;
wire   [2:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARPROT;
wire   [3:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARQOS;
wire   [3:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARREGION;
wire   [0:0] grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARUSER;
wire    grp_load_weight_S0_fu_497_m_axi_kernel_weight_RREADY;
wire    grp_load_weight_S0_fu_497_m_axi_kernel_weight_BREADY;
wire    grp_load_output_S0_fu_506_ap_start;
wire    grp_load_output_S0_fu_506_ap_done;
wire    grp_load_output_S0_fu_506_ap_idle;
wire    grp_load_output_S0_fu_506_ap_ready;
wire   [15:0] grp_load_output_S0_fu_506_output_0_address0;
wire    grp_load_output_S0_fu_506_output_0_ce0;
wire    grp_load_output_S0_fu_506_output_0_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_0_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_1_address0;
wire    grp_load_output_S0_fu_506_output_1_ce0;
wire    grp_load_output_S0_fu_506_output_1_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_1_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_2_address0;
wire    grp_load_output_S0_fu_506_output_2_ce0;
wire    grp_load_output_S0_fu_506_output_2_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_2_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_3_address0;
wire    grp_load_output_S0_fu_506_output_3_ce0;
wire    grp_load_output_S0_fu_506_output_3_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_3_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_4_address0;
wire    grp_load_output_S0_fu_506_output_4_ce0;
wire    grp_load_output_S0_fu_506_output_4_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_4_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_5_address0;
wire    grp_load_output_S0_fu_506_output_5_ce0;
wire    grp_load_output_S0_fu_506_output_5_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_5_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_6_address0;
wire    grp_load_output_S0_fu_506_output_6_ce0;
wire    grp_load_output_S0_fu_506_output_6_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_6_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_7_address0;
wire    grp_load_output_S0_fu_506_output_7_ce0;
wire    grp_load_output_S0_fu_506_output_7_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_7_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_8_address0;
wire    grp_load_output_S0_fu_506_output_8_ce0;
wire    grp_load_output_S0_fu_506_output_8_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_8_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_9_address0;
wire    grp_load_output_S0_fu_506_output_9_ce0;
wire    grp_load_output_S0_fu_506_output_9_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_9_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_10_address0;
wire    grp_load_output_S0_fu_506_output_10_ce0;
wire    grp_load_output_S0_fu_506_output_10_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_10_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_11_address0;
wire    grp_load_output_S0_fu_506_output_11_ce0;
wire    grp_load_output_S0_fu_506_output_11_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_11_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_12_address0;
wire    grp_load_output_S0_fu_506_output_12_ce0;
wire    grp_load_output_S0_fu_506_output_12_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_12_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_13_address0;
wire    grp_load_output_S0_fu_506_output_13_ce0;
wire    grp_load_output_S0_fu_506_output_13_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_13_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_14_address0;
wire    grp_load_output_S0_fu_506_output_14_ce0;
wire    grp_load_output_S0_fu_506_output_14_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_14_d0;
wire   [15:0] grp_load_output_S0_fu_506_output_15_address0;
wire    grp_load_output_S0_fu_506_output_15_ce0;
wire    grp_load_output_S0_fu_506_output_15_we0;
wire   [31:0] grp_load_output_S0_fu_506_output_15_d0;
wire    grp_load_output_S0_fu_506_m_axi_kernel_output_AWVALID;
wire   [63:0] grp_load_output_S0_fu_506_m_axi_kernel_output_AWADDR;
wire   [0:0] grp_load_output_S0_fu_506_m_axi_kernel_output_AWID;
wire   [31:0] grp_load_output_S0_fu_506_m_axi_kernel_output_AWLEN;
wire   [2:0] grp_load_output_S0_fu_506_m_axi_kernel_output_AWSIZE;
wire   [1:0] grp_load_output_S0_fu_506_m_axi_kernel_output_AWBURST;
wire   [1:0] grp_load_output_S0_fu_506_m_axi_kernel_output_AWLOCK;
wire   [3:0] grp_load_output_S0_fu_506_m_axi_kernel_output_AWCACHE;
wire   [2:0] grp_load_output_S0_fu_506_m_axi_kernel_output_AWPROT;
wire   [3:0] grp_load_output_S0_fu_506_m_axi_kernel_output_AWQOS;
wire   [3:0] grp_load_output_S0_fu_506_m_axi_kernel_output_AWREGION;
wire   [0:0] grp_load_output_S0_fu_506_m_axi_kernel_output_AWUSER;
wire    grp_load_output_S0_fu_506_m_axi_kernel_output_WVALID;
wire   [511:0] grp_load_output_S0_fu_506_m_axi_kernel_output_WDATA;
wire   [63:0] grp_load_output_S0_fu_506_m_axi_kernel_output_WSTRB;
wire    grp_load_output_S0_fu_506_m_axi_kernel_output_WLAST;
wire   [0:0] grp_load_output_S0_fu_506_m_axi_kernel_output_WID;
wire   [0:0] grp_load_output_S0_fu_506_m_axi_kernel_output_WUSER;
wire    grp_load_output_S0_fu_506_m_axi_kernel_output_ARVALID;
wire   [63:0] grp_load_output_S0_fu_506_m_axi_kernel_output_ARADDR;
wire   [0:0] grp_load_output_S0_fu_506_m_axi_kernel_output_ARID;
wire   [31:0] grp_load_output_S0_fu_506_m_axi_kernel_output_ARLEN;
wire   [2:0] grp_load_output_S0_fu_506_m_axi_kernel_output_ARSIZE;
wire   [1:0] grp_load_output_S0_fu_506_m_axi_kernel_output_ARBURST;
wire   [1:0] grp_load_output_S0_fu_506_m_axi_kernel_output_ARLOCK;
wire   [3:0] grp_load_output_S0_fu_506_m_axi_kernel_output_ARCACHE;
wire   [2:0] grp_load_output_S0_fu_506_m_axi_kernel_output_ARPROT;
wire   [3:0] grp_load_output_S0_fu_506_m_axi_kernel_output_ARQOS;
wire   [3:0] grp_load_output_S0_fu_506_m_axi_kernel_output_ARREGION;
wire   [0:0] grp_load_output_S0_fu_506_m_axi_kernel_output_ARUSER;
wire    grp_load_output_S0_fu_506_m_axi_kernel_output_RREADY;
wire    grp_load_output_S0_fu_506_m_axi_kernel_output_BREADY;
wire    grp_load_input_S0_fu_530_ap_start;
wire    grp_load_input_S0_fu_530_ap_idle;
wire    grp_load_input_S0_fu_530_ap_ready;
wire   [13:0] grp_load_input_S0_fu_530_input_0_address0;
wire    grp_load_input_S0_fu_530_input_0_ce0;
wire    grp_load_input_S0_fu_530_input_0_we0;
wire   [31:0] grp_load_input_S0_fu_530_input_0_d0;
wire   [13:0] grp_load_input_S0_fu_530_input_1_address0;
wire    grp_load_input_S0_fu_530_input_1_ce0;
wire    grp_load_input_S0_fu_530_input_1_we0;
wire   [31:0] grp_load_input_S0_fu_530_input_1_d0;
wire   [13:0] grp_load_input_S0_fu_530_input_2_address0;
wire    grp_load_input_S0_fu_530_input_2_ce0;
wire    grp_load_input_S0_fu_530_input_2_we0;
wire   [31:0] grp_load_input_S0_fu_530_input_2_d0;
wire   [13:0] grp_load_input_S0_fu_530_input_3_address0;
wire    grp_load_input_S0_fu_530_input_3_ce0;
wire    grp_load_input_S0_fu_530_input_3_we0;
wire   [31:0] grp_load_input_S0_fu_530_input_3_d0;
wire    grp_load_input_S0_fu_530_m_axi_kernel_input_AWVALID;
wire   [63:0] grp_load_input_S0_fu_530_m_axi_kernel_input_AWADDR;
wire   [0:0] grp_load_input_S0_fu_530_m_axi_kernel_input_AWID;
wire   [31:0] grp_load_input_S0_fu_530_m_axi_kernel_input_AWLEN;
wire   [2:0] grp_load_input_S0_fu_530_m_axi_kernel_input_AWSIZE;
wire   [1:0] grp_load_input_S0_fu_530_m_axi_kernel_input_AWBURST;
wire   [1:0] grp_load_input_S0_fu_530_m_axi_kernel_input_AWLOCK;
wire   [3:0] grp_load_input_S0_fu_530_m_axi_kernel_input_AWCACHE;
wire   [2:0] grp_load_input_S0_fu_530_m_axi_kernel_input_AWPROT;
wire   [3:0] grp_load_input_S0_fu_530_m_axi_kernel_input_AWQOS;
wire   [3:0] grp_load_input_S0_fu_530_m_axi_kernel_input_AWREGION;
wire   [0:0] grp_load_input_S0_fu_530_m_axi_kernel_input_AWUSER;
wire    grp_load_input_S0_fu_530_m_axi_kernel_input_WVALID;
wire   [127:0] grp_load_input_S0_fu_530_m_axi_kernel_input_WDATA;
wire   [15:0] grp_load_input_S0_fu_530_m_axi_kernel_input_WSTRB;
wire    grp_load_input_S0_fu_530_m_axi_kernel_input_WLAST;
wire   [0:0] grp_load_input_S0_fu_530_m_axi_kernel_input_WID;
wire   [0:0] grp_load_input_S0_fu_530_m_axi_kernel_input_WUSER;
wire    grp_load_input_S0_fu_530_m_axi_kernel_input_ARVALID;
wire   [63:0] grp_load_input_S0_fu_530_m_axi_kernel_input_ARADDR;
wire   [0:0] grp_load_input_S0_fu_530_m_axi_kernel_input_ARID;
wire   [31:0] grp_load_input_S0_fu_530_m_axi_kernel_input_ARLEN;
wire   [2:0] grp_load_input_S0_fu_530_m_axi_kernel_input_ARSIZE;
wire   [1:0] grp_load_input_S0_fu_530_m_axi_kernel_input_ARBURST;
wire   [1:0] grp_load_input_S0_fu_530_m_axi_kernel_input_ARLOCK;
wire   [3:0] grp_load_input_S0_fu_530_m_axi_kernel_input_ARCACHE;
wire   [2:0] grp_load_input_S0_fu_530_m_axi_kernel_input_ARPROT;
wire   [3:0] grp_load_input_S0_fu_530_m_axi_kernel_input_ARQOS;
wire   [3:0] grp_load_input_S0_fu_530_m_axi_kernel_input_ARREGION;
wire   [0:0] grp_load_input_S0_fu_530_m_axi_kernel_input_ARUSER;
wire    grp_load_input_S0_fu_530_m_axi_kernel_input_RREADY;
wire    grp_load_input_S0_fu_530_m_axi_kernel_input_BREADY;
wire    grp_store_output_S0_fu_542_ap_start;
wire    grp_store_output_S0_fu_542_ap_done;
wire    grp_store_output_S0_fu_542_ap_idle;
wire    grp_store_output_S0_fu_542_ap_ready;
wire   [15:0] grp_store_output_S0_fu_542_output_0_address0;
wire    grp_store_output_S0_fu_542_output_0_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_1_address0;
wire    grp_store_output_S0_fu_542_output_1_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_2_address0;
wire    grp_store_output_S0_fu_542_output_2_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_3_address0;
wire    grp_store_output_S0_fu_542_output_3_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_4_address0;
wire    grp_store_output_S0_fu_542_output_4_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_5_address0;
wire    grp_store_output_S0_fu_542_output_5_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_6_address0;
wire    grp_store_output_S0_fu_542_output_6_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_7_address0;
wire    grp_store_output_S0_fu_542_output_7_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_8_address0;
wire    grp_store_output_S0_fu_542_output_8_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_9_address0;
wire    grp_store_output_S0_fu_542_output_9_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_10_address0;
wire    grp_store_output_S0_fu_542_output_10_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_11_address0;
wire    grp_store_output_S0_fu_542_output_11_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_12_address0;
wire    grp_store_output_S0_fu_542_output_12_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_13_address0;
wire    grp_store_output_S0_fu_542_output_13_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_14_address0;
wire    grp_store_output_S0_fu_542_output_14_ce0;
wire   [15:0] grp_store_output_S0_fu_542_output_15_address0;
wire    grp_store_output_S0_fu_542_output_15_ce0;
wire    grp_store_output_S0_fu_542_m_axi_kernel_output_AWVALID;
wire   [63:0] grp_store_output_S0_fu_542_m_axi_kernel_output_AWADDR;
wire   [0:0] grp_store_output_S0_fu_542_m_axi_kernel_output_AWID;
wire   [31:0] grp_store_output_S0_fu_542_m_axi_kernel_output_AWLEN;
wire   [2:0] grp_store_output_S0_fu_542_m_axi_kernel_output_AWSIZE;
wire   [1:0] grp_store_output_S0_fu_542_m_axi_kernel_output_AWBURST;
wire   [1:0] grp_store_output_S0_fu_542_m_axi_kernel_output_AWLOCK;
wire   [3:0] grp_store_output_S0_fu_542_m_axi_kernel_output_AWCACHE;
wire   [2:0] grp_store_output_S0_fu_542_m_axi_kernel_output_AWPROT;
wire   [3:0] grp_store_output_S0_fu_542_m_axi_kernel_output_AWQOS;
wire   [3:0] grp_store_output_S0_fu_542_m_axi_kernel_output_AWREGION;
wire   [0:0] grp_store_output_S0_fu_542_m_axi_kernel_output_AWUSER;
wire    grp_store_output_S0_fu_542_m_axi_kernel_output_WVALID;
wire   [511:0] grp_store_output_S0_fu_542_m_axi_kernel_output_WDATA;
wire   [63:0] grp_store_output_S0_fu_542_m_axi_kernel_output_WSTRB;
wire    grp_store_output_S0_fu_542_m_axi_kernel_output_WLAST;
wire   [0:0] grp_store_output_S0_fu_542_m_axi_kernel_output_WID;
wire   [0:0] grp_store_output_S0_fu_542_m_axi_kernel_output_WUSER;
wire    grp_store_output_S0_fu_542_m_axi_kernel_output_ARVALID;
wire   [63:0] grp_store_output_S0_fu_542_m_axi_kernel_output_ARADDR;
wire   [0:0] grp_store_output_S0_fu_542_m_axi_kernel_output_ARID;
wire   [31:0] grp_store_output_S0_fu_542_m_axi_kernel_output_ARLEN;
wire   [2:0] grp_store_output_S0_fu_542_m_axi_kernel_output_ARSIZE;
wire   [1:0] grp_store_output_S0_fu_542_m_axi_kernel_output_ARBURST;
wire   [1:0] grp_store_output_S0_fu_542_m_axi_kernel_output_ARLOCK;
wire   [3:0] grp_store_output_S0_fu_542_m_axi_kernel_output_ARCACHE;
wire   [2:0] grp_store_output_S0_fu_542_m_axi_kernel_output_ARPROT;
wire   [3:0] grp_store_output_S0_fu_542_m_axi_kernel_output_ARQOS;
wire   [3:0] grp_store_output_S0_fu_542_m_axi_kernel_output_ARREGION;
wire   [0:0] grp_store_output_S0_fu_542_m_axi_kernel_output_ARUSER;
wire    grp_store_output_S0_fu_542_m_axi_kernel_output_RREADY;
wire    grp_store_output_S0_fu_542_m_axi_kernel_output_BREADY;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_start;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_done;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_idle;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_ready;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_r_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_r_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_r_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_r_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_1_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_1_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_1_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_1_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_2_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_2_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_2_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_2_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_3_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_3_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_3_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_3_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_4_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_4_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_4_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_4_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_5_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_5_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_5_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_5_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_6_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_6_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_6_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_6_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_7_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_7_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_7_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_7_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_8_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_8_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_8_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_8_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_9_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_9_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_9_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_9_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_10_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_10_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_10_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_10_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_11_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_11_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_11_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_11_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_12_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_12_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_12_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_12_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_13_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_13_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_13_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_13_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_14_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_14_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_14_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_14_d0;
wire   [15:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_15_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_15_ce0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_15_we0;
wire   [31:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_15_d0;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce0;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address1;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce1;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address2;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce2;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address3;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce3;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address4;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce4;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address5;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce5;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address6;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce6;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address7;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce7;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address8;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce8;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address9;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce9;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address10;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce10;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address11;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce11;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address12;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce12;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce0;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address1;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce1;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address2;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce2;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address3;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce3;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address4;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce4;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address5;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce5;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address6;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce6;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address7;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce7;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address8;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce8;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address9;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce9;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address10;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce10;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address11;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce11;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address12;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce12;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce0;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address1;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce1;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address2;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce2;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address3;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce3;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address4;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce4;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address5;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce5;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address6;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce6;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address7;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce7;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address8;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce8;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address9;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce9;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address10;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce10;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address11;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce11;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address12;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce12;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address0;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce0;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address1;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce1;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address2;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce2;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address3;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce3;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address4;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce4;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address5;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce5;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address6;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce6;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address7;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce7;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address8;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce8;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address9;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce9;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address10;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce10;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address11;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce11;
wire   [13:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address12;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce12;
wire   [63:0] grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_p_phi_out;
wire    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_p_phi_out_ap_vld;
wire    kernel_input_AWREADY;
wire    kernel_input_WREADY;
reg    kernel_input_ARVALID;
wire    kernel_input_ARREADY;
wire    kernel_input_RVALID;
reg    kernel_input_RREADY;
wire   [127:0] kernel_input_RDATA;
wire   [8:0] kernel_input_RFIFONUM;
wire    kernel_input_BVALID;
reg    kernel_output_AWVALID;
wire    kernel_output_AWREADY;
reg    kernel_output_WVALID;
wire    kernel_output_WREADY;
reg    kernel_output_ARVALID;
wire    kernel_output_ARREADY;
wire    kernel_output_RVALID;
reg    kernel_output_RREADY;
wire   [511:0] kernel_output_RDATA;
wire   [8:0] kernel_output_RFIFONUM;
wire    kernel_output_BVALID;
reg    kernel_output_BREADY;
wire    kernel_weight_AWREADY;
wire    kernel_weight_WREADY;
reg    kernel_weight_ARVALID;
wire    kernel_weight_ARREADY;
wire    kernel_weight_RVALID;
reg    kernel_weight_RREADY;
wire   [31:0] kernel_weight_RDATA;
wire   [8:0] kernel_weight_RFIFONUM;
wire    kernel_weight_BVALID;
reg   [8:0] j_reg_462;
wire   [0:0] icmp_ln317_fu_671_p2;
wire    ap_CS_fsm_state3;
reg    ap_block_state3_on_subcall_done;
reg   [4:0] i1_reg_474;
wire    ap_CS_fsm_state26;
wire   [0:0] icmp_ln318_fu_1005_p2;
reg   [63:0] h_reg_485;
reg    grp_load_weight_S0_fu_497_ap_start_reg;
wire   [0:0] icmp_ln293_fu_628_p2;
reg    grp_load_output_S0_fu_506_ap_start_reg;
reg    grp_load_input_S0_fu_530_ap_start_reg;
wire   [0:0] icmp_ln308_fu_646_p2;
reg    grp_store_output_S0_fu_542_ap_start_reg;
wire    ap_CS_fsm_state27;
reg    grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_start_reg;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire   [63:0] zext_ln331_33_fu_713_p1;
wire   [63:0] zext_ln331_34_fu_725_p1;
wire   [63:0] zext_ln331_35_fu_735_p1;
wire   [63:0] zext_ln331_36_fu_745_p1;
wire   [63:0] zext_ln331_37_fu_755_p1;
wire   [63:0] zext_ln331_38_fu_765_p1;
wire   [63:0] zext_ln331_39_fu_775_p1;
wire   [63:0] zext_ln331_40_fu_785_p1;
wire   [63:0] zext_ln331_41_fu_795_p1;
wire   [63:0] zext_ln331_42_fu_805_p1;
wire   [63:0] zext_ln331_43_fu_815_p1;
wire   [63:0] zext_ln331_44_fu_825_p1;
wire   [63:0] zext_ln331_45_fu_835_p1;
wire   [63:0] zext_ln331_46_fu_845_p1;
wire   [63:0] zext_ln331_47_fu_855_p1;
wire   [63:0] zext_ln331_48_fu_865_p1;
wire   [63:0] zext_ln331_49_fu_875_p1;
wire   [63:0] zext_ln331_50_fu_885_p1;
wire   [63:0] zext_ln331_51_fu_895_p1;
wire   [63:0] zext_ln331_52_fu_905_p1;
wire   [63:0] zext_ln331_53_fu_915_p1;
wire   [63:0] zext_ln331_54_fu_925_p1;
wire   [63:0] zext_ln331_55_fu_935_p1;
wire   [63:0] zext_ln331_56_fu_945_p1;
wire   [63:0] zext_ln331_57_fu_955_p1;
reg   [4:0] i0_fu_168;
wire   [12:0] tmp_s_fu_683_p3;
wire   [9:0] tmp_25_fu_695_p3;
wire   [13:0] tmp_25_cast_fu_691_p1;
wire   [13:0] tmp_26_cast_fu_703_p1;
wire   [18:0] grp_fu_1011_p3;
wire   [16:0] add_ln331_5_fu_720_p2;
wire   [16:0] add_ln331_6_fu_730_p2;
wire   [16:0] add_ln331_7_fu_740_p2;
wire   [16:0] add_ln331_8_fu_750_p2;
wire   [16:0] add_ln331_9_fu_760_p2;
wire   [16:0] add_ln331_10_fu_770_p2;
wire   [16:0] add_ln331_11_fu_780_p2;
wire   [16:0] add_ln331_12_fu_790_p2;
wire   [16:0] add_ln331_13_fu_800_p2;
wire   [16:0] add_ln331_14_fu_810_p2;
wire   [16:0] add_ln331_15_fu_820_p2;
wire   [16:0] add_ln331_16_fu_830_p2;
wire   [16:0] add_ln331_17_fu_840_p2;
wire   [16:0] add_ln331_18_fu_850_p2;
wire   [16:0] add_ln331_19_fu_860_p2;
wire   [16:0] add_ln331_20_fu_870_p2;
wire   [16:0] add_ln331_21_fu_880_p2;
wire   [16:0] add_ln331_22_fu_890_p2;
wire   [16:0] add_ln331_23_fu_900_p2;
wire   [16:0] add_ln331_24_fu_910_p2;
wire   [16:0] add_ln331_25_fu_920_p2;
wire   [16:0] add_ln331_26_fu_930_p2;
wire   [16:0] add_ln331_27_fu_940_p2;
wire   [16:0] add_ln331_28_fu_950_p2;
wire   [14:0] empty_38_fu_963_p1;
wire   [14:0] empty_39_fu_967_p2;
wire   [11:0] empty_40_fu_972_p1;
wire   [15:0] tmp_fu_976_p3;
wire   [15:0] tmp_27_fu_984_p3;
wire   [12:0] grp_fu_1011_p0;
wire   [8:0] grp_fu_1011_p1;
wire   [4:0] grp_fu_1011_p2;
reg   [26:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
reg    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
reg    ap_ST_fsm_state27_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 27'd1;
#0 grp_load_weight_S0_fu_497_ap_start_reg = 1'b0;
#0 grp_load_output_S0_fu_506_ap_start_reg = 1'b0;
#0 grp_load_input_S0_fu_530_ap_start_reg = 1'b0;
#0 grp_store_output_S0_fu_542_ap_start_reg = 1'b0;
#0 grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_start_reg = 1'b0;
#0 i0_fu_168 = 5'd0;
end

kernel_cnn_input_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 12996 ),
    .AddressWidth( 14 ))
input_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_address0),
    .ce0(input_ce0),
    .we0(input_we0),
    .d0(grp_load_input_S0_fu_530_input_0_d0),
    .q0(input_q0),
    .address1(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address1),
    .ce1(input_ce1),
    .q1(input_q1),
    .address2(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address2),
    .ce2(input_ce2),
    .q2(input_q2),
    .address3(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address3),
    .ce3(input_ce3),
    .q3(input_q3),
    .address4(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address4),
    .ce4(input_ce4),
    .q4(input_q4),
    .address5(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address5),
    .ce5(input_ce5),
    .q5(input_q5),
    .address6(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address6),
    .ce6(input_ce6),
    .q6(input_q6),
    .address7(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address7),
    .ce7(input_ce7),
    .q7(input_q7),
    .address8(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address8),
    .ce8(input_ce8),
    .q8(input_q8),
    .address9(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address9),
    .ce9(input_ce9),
    .q9(input_q9),
    .address10(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address10),
    .ce10(input_ce10),
    .q10(input_q10),
    .address11(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address11),
    .ce11(input_ce11),
    .q11(input_q11),
    .address12(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address12),
    .ce12(input_ce12),
    .q12(input_q12)
);

kernel_cnn_input_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 12996 ),
    .AddressWidth( 14 ))
input_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_1_address0),
    .ce0(input_1_ce0),
    .we0(input_1_we0),
    .d0(grp_load_input_S0_fu_530_input_1_d0),
    .q0(input_1_q0),
    .address1(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address1),
    .ce1(input_1_ce1),
    .q1(input_1_q1),
    .address2(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address2),
    .ce2(input_1_ce2),
    .q2(input_1_q2),
    .address3(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address3),
    .ce3(input_1_ce3),
    .q3(input_1_q3),
    .address4(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address4),
    .ce4(input_1_ce4),
    .q4(input_1_q4),
    .address5(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address5),
    .ce5(input_1_ce5),
    .q5(input_1_q5),
    .address6(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address6),
    .ce6(input_1_ce6),
    .q6(input_1_q6),
    .address7(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address7),
    .ce7(input_1_ce7),
    .q7(input_1_q7),
    .address8(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address8),
    .ce8(input_1_ce8),
    .q8(input_1_q8),
    .address9(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address9),
    .ce9(input_1_ce9),
    .q9(input_1_q9),
    .address10(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address10),
    .ce10(input_1_ce10),
    .q10(input_1_q10),
    .address11(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address11),
    .ce11(input_1_ce11),
    .q11(input_1_q11),
    .address12(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address12),
    .ce12(input_1_ce12),
    .q12(input_1_q12)
);

kernel_cnn_input_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 12996 ),
    .AddressWidth( 14 ))
input_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_2_address0),
    .ce0(input_2_ce0),
    .we0(input_2_we0),
    .d0(grp_load_input_S0_fu_530_input_2_d0),
    .q0(input_2_q0),
    .address1(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address1),
    .ce1(input_2_ce1),
    .q1(input_2_q1),
    .address2(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address2),
    .ce2(input_2_ce2),
    .q2(input_2_q2),
    .address3(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address3),
    .ce3(input_2_ce3),
    .q3(input_2_q3),
    .address4(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address4),
    .ce4(input_2_ce4),
    .q4(input_2_q4),
    .address5(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address5),
    .ce5(input_2_ce5),
    .q5(input_2_q5),
    .address6(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address6),
    .ce6(input_2_ce6),
    .q6(input_2_q6),
    .address7(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address7),
    .ce7(input_2_ce7),
    .q7(input_2_q7),
    .address8(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address8),
    .ce8(input_2_ce8),
    .q8(input_2_q8),
    .address9(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address9),
    .ce9(input_2_ce9),
    .q9(input_2_q9),
    .address10(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address10),
    .ce10(input_2_ce10),
    .q10(input_2_q10),
    .address11(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address11),
    .ce11(input_2_ce11),
    .q11(input_2_q11),
    .address12(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address12),
    .ce12(input_2_ce12),
    .q12(input_2_q12)
);

kernel_cnn_input_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 12996 ),
    .AddressWidth( 14 ))
input_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_3_address0),
    .ce0(input_3_ce0),
    .we0(input_3_we0),
    .d0(grp_load_input_S0_fu_530_input_3_d0),
    .q0(input_3_q0),
    .address1(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address1),
    .ce1(input_3_ce1),
    .q1(input_3_q1),
    .address2(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address2),
    .ce2(input_3_ce2),
    .q2(input_3_q2),
    .address3(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address3),
    .ce3(input_3_ce3),
    .q3(input_3_q3),
    .address4(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address4),
    .ce4(input_3_ce4),
    .q4(input_3_q4),
    .address5(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address5),
    .ce5(input_3_ce5),
    .q5(input_3_q5),
    .address6(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address6),
    .ce6(input_3_ce6),
    .q6(input_3_q6),
    .address7(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address7),
    .ce7(input_3_ce7),
    .q7(input_3_q7),
    .address8(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address8),
    .ce8(input_3_ce8),
    .q8(input_3_q8),
    .address9(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address9),
    .ce9(input_3_ce9),
    .q9(input_3_q9),
    .address10(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address10),
    .ce10(input_3_ce10),
    .q10(input_3_q10),
    .address11(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address11),
    .ce11(input_3_ce11),
    .q11(input_3_q11),
    .address12(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address12),
    .ce12(input_3_ce12),
    .q12(input_3_q12)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_address0),
    .ce0(output_ce0),
    .we0(output_we0),
    .d0(output_d0),
    .q0(output_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_1_address0),
    .ce0(output_1_ce0),
    .we0(output_1_we0),
    .d0(output_1_d0),
    .q0(output_1_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_2_address0),
    .ce0(output_2_ce0),
    .we0(output_2_we0),
    .d0(output_2_d0),
    .q0(output_2_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_3_address0),
    .ce0(output_3_ce0),
    .we0(output_3_we0),
    .d0(output_3_d0),
    .q0(output_3_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_4_address0),
    .ce0(output_4_ce0),
    .we0(output_4_we0),
    .d0(output_4_d0),
    .q0(output_4_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_5_address0),
    .ce0(output_5_ce0),
    .we0(output_5_we0),
    .d0(output_5_d0),
    .q0(output_5_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_6_address0),
    .ce0(output_6_ce0),
    .we0(output_6_we0),
    .d0(output_6_d0),
    .q0(output_6_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_7_address0),
    .ce0(output_7_ce0),
    .we0(output_7_we0),
    .d0(output_7_d0),
    .q0(output_7_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_8_address0),
    .ce0(output_8_ce0),
    .we0(output_8_we0),
    .d0(output_8_d0),
    .q0(output_8_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_9_address0),
    .ce0(output_9_ce0),
    .we0(output_9_we0),
    .d0(output_9_d0),
    .q0(output_9_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_10_address0),
    .ce0(output_10_ce0),
    .we0(output_10_we0),
    .d0(output_10_d0),
    .q0(output_10_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_11_address0),
    .ce0(output_11_ce0),
    .we0(output_11_we0),
    .d0(output_11_d0),
    .q0(output_11_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_12_address0),
    .ce0(output_12_ce0),
    .we0(output_12_we0),
    .d0(output_12_d0),
    .q0(output_12_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_13_address0),
    .ce0(output_13_ce0),
    .we0(output_13_we0),
    .d0(output_13_d0),
    .q0(output_13_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_14_address0),
    .ce0(output_14_ce0),
    .we0(output_14_we0),
    .d0(output_14_d0),
    .q0(output_14_q0)
);

kernel_cnn_output_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 50176 ),
    .AddressWidth( 16 ))
output_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_15_address0),
    .ce0(output_15_ce0),
    .we0(output_15_we0),
    .d0(output_15_d0),
    .q0(output_15_q0)
);

kernel_cnn_weight_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 102400 ),
    .AddressWidth( 17 ))
weight_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_address0),
    .ce0(weight_ce0),
    .we0(weight_we0),
    .d0(grp_load_weight_S0_fu_497_weight_d0),
    .q0(weight_q0),
    .address1(weight_address1),
    .ce1(weight_ce1),
    .q1(weight_q1)
);

kernel_cnn_load_weight_S0 grp_load_weight_S0_fu_497(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_load_weight_S0_fu_497_ap_start),
    .ap_done(grp_load_weight_S0_fu_497_ap_done),
    .ap_idle(grp_load_weight_S0_fu_497_ap_idle),
    .ap_ready(grp_load_weight_S0_fu_497_ap_ready),
    .weight_address0(grp_load_weight_S0_fu_497_weight_address0),
    .weight_ce0(grp_load_weight_S0_fu_497_weight_ce0),
    .weight_we0(grp_load_weight_S0_fu_497_weight_we0),
    .weight_d0(grp_load_weight_S0_fu_497_weight_d0),
    .m_axi_kernel_weight_AWVALID(grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWVALID),
    .m_axi_kernel_weight_AWREADY(1'b0),
    .m_axi_kernel_weight_AWADDR(grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWADDR),
    .m_axi_kernel_weight_AWID(grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWID),
    .m_axi_kernel_weight_AWLEN(grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWLEN),
    .m_axi_kernel_weight_AWSIZE(grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWSIZE),
    .m_axi_kernel_weight_AWBURST(grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWBURST),
    .m_axi_kernel_weight_AWLOCK(grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWLOCK),
    .m_axi_kernel_weight_AWCACHE(grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWCACHE),
    .m_axi_kernel_weight_AWPROT(grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWPROT),
    .m_axi_kernel_weight_AWQOS(grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWQOS),
    .m_axi_kernel_weight_AWREGION(grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWREGION),
    .m_axi_kernel_weight_AWUSER(grp_load_weight_S0_fu_497_m_axi_kernel_weight_AWUSER),
    .m_axi_kernel_weight_WVALID(grp_load_weight_S0_fu_497_m_axi_kernel_weight_WVALID),
    .m_axi_kernel_weight_WREADY(1'b0),
    .m_axi_kernel_weight_WDATA(grp_load_weight_S0_fu_497_m_axi_kernel_weight_WDATA),
    .m_axi_kernel_weight_WSTRB(grp_load_weight_S0_fu_497_m_axi_kernel_weight_WSTRB),
    .m_axi_kernel_weight_WLAST(grp_load_weight_S0_fu_497_m_axi_kernel_weight_WLAST),
    .m_axi_kernel_weight_WID(grp_load_weight_S0_fu_497_m_axi_kernel_weight_WID),
    .m_axi_kernel_weight_WUSER(grp_load_weight_S0_fu_497_m_axi_kernel_weight_WUSER),
    .m_axi_kernel_weight_ARVALID(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARVALID),
    .m_axi_kernel_weight_ARREADY(kernel_weight_ARREADY),
    .m_axi_kernel_weight_ARADDR(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARADDR),
    .m_axi_kernel_weight_ARID(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARID),
    .m_axi_kernel_weight_ARLEN(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARLEN),
    .m_axi_kernel_weight_ARSIZE(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARSIZE),
    .m_axi_kernel_weight_ARBURST(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARBURST),
    .m_axi_kernel_weight_ARLOCK(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARLOCK),
    .m_axi_kernel_weight_ARCACHE(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARCACHE),
    .m_axi_kernel_weight_ARPROT(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARPROT),
    .m_axi_kernel_weight_ARQOS(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARQOS),
    .m_axi_kernel_weight_ARREGION(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARREGION),
    .m_axi_kernel_weight_ARUSER(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARUSER),
    .m_axi_kernel_weight_RVALID(kernel_weight_RVALID),
    .m_axi_kernel_weight_RREADY(grp_load_weight_S0_fu_497_m_axi_kernel_weight_RREADY),
    .m_axi_kernel_weight_RDATA(kernel_weight_RDATA),
    .m_axi_kernel_weight_RLAST(1'b0),
    .m_axi_kernel_weight_RID(1'd0),
    .m_axi_kernel_weight_RFIFONUM(kernel_weight_RFIFONUM),
    .m_axi_kernel_weight_RUSER(1'd0),
    .m_axi_kernel_weight_RRESP(2'd0),
    .m_axi_kernel_weight_BVALID(1'b0),
    .m_axi_kernel_weight_BREADY(grp_load_weight_S0_fu_497_m_axi_kernel_weight_BREADY),
    .m_axi_kernel_weight_BRESP(2'd0),
    .m_axi_kernel_weight_BID(1'd0),
    .m_axi_kernel_weight_BUSER(1'd0),
    .vweight(vweight_read_reg_1033),
    .d0(trunc_ln293_reg_1057)
);

kernel_cnn_load_output_S0 grp_load_output_S0_fu_506(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_load_output_S0_fu_506_ap_start),
    .ap_done(grp_load_output_S0_fu_506_ap_done),
    .ap_idle(grp_load_output_S0_fu_506_ap_idle),
    .ap_ready(grp_load_output_S0_fu_506_ap_ready),
    .output_0_address0(grp_load_output_S0_fu_506_output_0_address0),
    .output_0_ce0(grp_load_output_S0_fu_506_output_0_ce0),
    .output_0_we0(grp_load_output_S0_fu_506_output_0_we0),
    .output_0_d0(grp_load_output_S0_fu_506_output_0_d0),
    .output_1_address0(grp_load_output_S0_fu_506_output_1_address0),
    .output_1_ce0(grp_load_output_S0_fu_506_output_1_ce0),
    .output_1_we0(grp_load_output_S0_fu_506_output_1_we0),
    .output_1_d0(grp_load_output_S0_fu_506_output_1_d0),
    .output_2_address0(grp_load_output_S0_fu_506_output_2_address0),
    .output_2_ce0(grp_load_output_S0_fu_506_output_2_ce0),
    .output_2_we0(grp_load_output_S0_fu_506_output_2_we0),
    .output_2_d0(grp_load_output_S0_fu_506_output_2_d0),
    .output_3_address0(grp_load_output_S0_fu_506_output_3_address0),
    .output_3_ce0(grp_load_output_S0_fu_506_output_3_ce0),
    .output_3_we0(grp_load_output_S0_fu_506_output_3_we0),
    .output_3_d0(grp_load_output_S0_fu_506_output_3_d0),
    .output_4_address0(grp_load_output_S0_fu_506_output_4_address0),
    .output_4_ce0(grp_load_output_S0_fu_506_output_4_ce0),
    .output_4_we0(grp_load_output_S0_fu_506_output_4_we0),
    .output_4_d0(grp_load_output_S0_fu_506_output_4_d0),
    .output_5_address0(grp_load_output_S0_fu_506_output_5_address0),
    .output_5_ce0(grp_load_output_S0_fu_506_output_5_ce0),
    .output_5_we0(grp_load_output_S0_fu_506_output_5_we0),
    .output_5_d0(grp_load_output_S0_fu_506_output_5_d0),
    .output_6_address0(grp_load_output_S0_fu_506_output_6_address0),
    .output_6_ce0(grp_load_output_S0_fu_506_output_6_ce0),
    .output_6_we0(grp_load_output_S0_fu_506_output_6_we0),
    .output_6_d0(grp_load_output_S0_fu_506_output_6_d0),
    .output_7_address0(grp_load_output_S0_fu_506_output_7_address0),
    .output_7_ce0(grp_load_output_S0_fu_506_output_7_ce0),
    .output_7_we0(grp_load_output_S0_fu_506_output_7_we0),
    .output_7_d0(grp_load_output_S0_fu_506_output_7_d0),
    .output_8_address0(grp_load_output_S0_fu_506_output_8_address0),
    .output_8_ce0(grp_load_output_S0_fu_506_output_8_ce0),
    .output_8_we0(grp_load_output_S0_fu_506_output_8_we0),
    .output_8_d0(grp_load_output_S0_fu_506_output_8_d0),
    .output_9_address0(grp_load_output_S0_fu_506_output_9_address0),
    .output_9_ce0(grp_load_output_S0_fu_506_output_9_ce0),
    .output_9_we0(grp_load_output_S0_fu_506_output_9_we0),
    .output_9_d0(grp_load_output_S0_fu_506_output_9_d0),
    .output_10_address0(grp_load_output_S0_fu_506_output_10_address0),
    .output_10_ce0(grp_load_output_S0_fu_506_output_10_ce0),
    .output_10_we0(grp_load_output_S0_fu_506_output_10_we0),
    .output_10_d0(grp_load_output_S0_fu_506_output_10_d0),
    .output_11_address0(grp_load_output_S0_fu_506_output_11_address0),
    .output_11_ce0(grp_load_output_S0_fu_506_output_11_ce0),
    .output_11_we0(grp_load_output_S0_fu_506_output_11_we0),
    .output_11_d0(grp_load_output_S0_fu_506_output_11_d0),
    .output_12_address0(grp_load_output_S0_fu_506_output_12_address0),
    .output_12_ce0(grp_load_output_S0_fu_506_output_12_ce0),
    .output_12_we0(grp_load_output_S0_fu_506_output_12_we0),
    .output_12_d0(grp_load_output_S0_fu_506_output_12_d0),
    .output_13_address0(grp_load_output_S0_fu_506_output_13_address0),
    .output_13_ce0(grp_load_output_S0_fu_506_output_13_ce0),
    .output_13_we0(grp_load_output_S0_fu_506_output_13_we0),
    .output_13_d0(grp_load_output_S0_fu_506_output_13_d0),
    .output_14_address0(grp_load_output_S0_fu_506_output_14_address0),
    .output_14_ce0(grp_load_output_S0_fu_506_output_14_ce0),
    .output_14_we0(grp_load_output_S0_fu_506_output_14_we0),
    .output_14_d0(grp_load_output_S0_fu_506_output_14_d0),
    .output_15_address0(grp_load_output_S0_fu_506_output_15_address0),
    .output_15_ce0(grp_load_output_S0_fu_506_output_15_ce0),
    .output_15_we0(grp_load_output_S0_fu_506_output_15_we0),
    .output_15_d0(grp_load_output_S0_fu_506_output_15_d0),
    .m_axi_kernel_output_AWVALID(grp_load_output_S0_fu_506_m_axi_kernel_output_AWVALID),
    .m_axi_kernel_output_AWREADY(1'b0),
    .m_axi_kernel_output_AWADDR(grp_load_output_S0_fu_506_m_axi_kernel_output_AWADDR),
    .m_axi_kernel_output_AWID(grp_load_output_S0_fu_506_m_axi_kernel_output_AWID),
    .m_axi_kernel_output_AWLEN(grp_load_output_S0_fu_506_m_axi_kernel_output_AWLEN),
    .m_axi_kernel_output_AWSIZE(grp_load_output_S0_fu_506_m_axi_kernel_output_AWSIZE),
    .m_axi_kernel_output_AWBURST(grp_load_output_S0_fu_506_m_axi_kernel_output_AWBURST),
    .m_axi_kernel_output_AWLOCK(grp_load_output_S0_fu_506_m_axi_kernel_output_AWLOCK),
    .m_axi_kernel_output_AWCACHE(grp_load_output_S0_fu_506_m_axi_kernel_output_AWCACHE),
    .m_axi_kernel_output_AWPROT(grp_load_output_S0_fu_506_m_axi_kernel_output_AWPROT),
    .m_axi_kernel_output_AWQOS(grp_load_output_S0_fu_506_m_axi_kernel_output_AWQOS),
    .m_axi_kernel_output_AWREGION(grp_load_output_S0_fu_506_m_axi_kernel_output_AWREGION),
    .m_axi_kernel_output_AWUSER(grp_load_output_S0_fu_506_m_axi_kernel_output_AWUSER),
    .m_axi_kernel_output_WVALID(grp_load_output_S0_fu_506_m_axi_kernel_output_WVALID),
    .m_axi_kernel_output_WREADY(1'b0),
    .m_axi_kernel_output_WDATA(grp_load_output_S0_fu_506_m_axi_kernel_output_WDATA),
    .m_axi_kernel_output_WSTRB(grp_load_output_S0_fu_506_m_axi_kernel_output_WSTRB),
    .m_axi_kernel_output_WLAST(grp_load_output_S0_fu_506_m_axi_kernel_output_WLAST),
    .m_axi_kernel_output_WID(grp_load_output_S0_fu_506_m_axi_kernel_output_WID),
    .m_axi_kernel_output_WUSER(grp_load_output_S0_fu_506_m_axi_kernel_output_WUSER),
    .m_axi_kernel_output_ARVALID(grp_load_output_S0_fu_506_m_axi_kernel_output_ARVALID),
    .m_axi_kernel_output_ARREADY(kernel_output_ARREADY),
    .m_axi_kernel_output_ARADDR(grp_load_output_S0_fu_506_m_axi_kernel_output_ARADDR),
    .m_axi_kernel_output_ARID(grp_load_output_S0_fu_506_m_axi_kernel_output_ARID),
    .m_axi_kernel_output_ARLEN(grp_load_output_S0_fu_506_m_axi_kernel_output_ARLEN),
    .m_axi_kernel_output_ARSIZE(grp_load_output_S0_fu_506_m_axi_kernel_output_ARSIZE),
    .m_axi_kernel_output_ARBURST(grp_load_output_S0_fu_506_m_axi_kernel_output_ARBURST),
    .m_axi_kernel_output_ARLOCK(grp_load_output_S0_fu_506_m_axi_kernel_output_ARLOCK),
    .m_axi_kernel_output_ARCACHE(grp_load_output_S0_fu_506_m_axi_kernel_output_ARCACHE),
    .m_axi_kernel_output_ARPROT(grp_load_output_S0_fu_506_m_axi_kernel_output_ARPROT),
    .m_axi_kernel_output_ARQOS(grp_load_output_S0_fu_506_m_axi_kernel_output_ARQOS),
    .m_axi_kernel_output_ARREGION(grp_load_output_S0_fu_506_m_axi_kernel_output_ARREGION),
    .m_axi_kernel_output_ARUSER(grp_load_output_S0_fu_506_m_axi_kernel_output_ARUSER),
    .m_axi_kernel_output_RVALID(kernel_output_RVALID),
    .m_axi_kernel_output_RREADY(grp_load_output_S0_fu_506_m_axi_kernel_output_RREADY),
    .m_axi_kernel_output_RDATA(kernel_output_RDATA),
    .m_axi_kernel_output_RLAST(1'b0),
    .m_axi_kernel_output_RID(1'd0),
    .m_axi_kernel_output_RFIFONUM(kernel_output_RFIFONUM),
    .m_axi_kernel_output_RUSER(1'd0),
    .m_axi_kernel_output_RRESP(2'd0),
    .m_axi_kernel_output_BVALID(1'b0),
    .m_axi_kernel_output_BREADY(grp_load_output_S0_fu_506_m_axi_kernel_output_BREADY),
    .m_axi_kernel_output_BRESP(2'd0),
    .m_axi_kernel_output_BID(1'd0),
    .m_axi_kernel_output_BUSER(1'd0),
    .voutput(voutput_read_reg_1027),
    .d0(trunc_ln293_reg_1057)
);

kernel_cnn_load_input_S0 grp_load_input_S0_fu_530(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_load_input_S0_fu_530_ap_start),
    .ap_done(grp_load_input_S0_fu_530_ap_done),
    .ap_idle(grp_load_input_S0_fu_530_ap_idle),
    .ap_ready(grp_load_input_S0_fu_530_ap_ready),
    .input_0_address0(grp_load_input_S0_fu_530_input_0_address0),
    .input_0_ce0(grp_load_input_S0_fu_530_input_0_ce0),
    .input_0_we0(grp_load_input_S0_fu_530_input_0_we0),
    .input_0_d0(grp_load_input_S0_fu_530_input_0_d0),
    .input_1_address0(grp_load_input_S0_fu_530_input_1_address0),
    .input_1_ce0(grp_load_input_S0_fu_530_input_1_ce0),
    .input_1_we0(grp_load_input_S0_fu_530_input_1_we0),
    .input_1_d0(grp_load_input_S0_fu_530_input_1_d0),
    .input_2_address0(grp_load_input_S0_fu_530_input_2_address0),
    .input_2_ce0(grp_load_input_S0_fu_530_input_2_ce0),
    .input_2_we0(grp_load_input_S0_fu_530_input_2_we0),
    .input_2_d0(grp_load_input_S0_fu_530_input_2_d0),
    .input_3_address0(grp_load_input_S0_fu_530_input_3_address0),
    .input_3_ce0(grp_load_input_S0_fu_530_input_3_ce0),
    .input_3_we0(grp_load_input_S0_fu_530_input_3_we0),
    .input_3_d0(grp_load_input_S0_fu_530_input_3_d0),
    .m_axi_kernel_input_AWVALID(grp_load_input_S0_fu_530_m_axi_kernel_input_AWVALID),
    .m_axi_kernel_input_AWREADY(1'b0),
    .m_axi_kernel_input_AWADDR(grp_load_input_S0_fu_530_m_axi_kernel_input_AWADDR),
    .m_axi_kernel_input_AWID(grp_load_input_S0_fu_530_m_axi_kernel_input_AWID),
    .m_axi_kernel_input_AWLEN(grp_load_input_S0_fu_530_m_axi_kernel_input_AWLEN),
    .m_axi_kernel_input_AWSIZE(grp_load_input_S0_fu_530_m_axi_kernel_input_AWSIZE),
    .m_axi_kernel_input_AWBURST(grp_load_input_S0_fu_530_m_axi_kernel_input_AWBURST),
    .m_axi_kernel_input_AWLOCK(grp_load_input_S0_fu_530_m_axi_kernel_input_AWLOCK),
    .m_axi_kernel_input_AWCACHE(grp_load_input_S0_fu_530_m_axi_kernel_input_AWCACHE),
    .m_axi_kernel_input_AWPROT(grp_load_input_S0_fu_530_m_axi_kernel_input_AWPROT),
    .m_axi_kernel_input_AWQOS(grp_load_input_S0_fu_530_m_axi_kernel_input_AWQOS),
    .m_axi_kernel_input_AWREGION(grp_load_input_S0_fu_530_m_axi_kernel_input_AWREGION),
    .m_axi_kernel_input_AWUSER(grp_load_input_S0_fu_530_m_axi_kernel_input_AWUSER),
    .m_axi_kernel_input_WVALID(grp_load_input_S0_fu_530_m_axi_kernel_input_WVALID),
    .m_axi_kernel_input_WREADY(1'b0),
    .m_axi_kernel_input_WDATA(grp_load_input_S0_fu_530_m_axi_kernel_input_WDATA),
    .m_axi_kernel_input_WSTRB(grp_load_input_S0_fu_530_m_axi_kernel_input_WSTRB),
    .m_axi_kernel_input_WLAST(grp_load_input_S0_fu_530_m_axi_kernel_input_WLAST),
    .m_axi_kernel_input_WID(grp_load_input_S0_fu_530_m_axi_kernel_input_WID),
    .m_axi_kernel_input_WUSER(grp_load_input_S0_fu_530_m_axi_kernel_input_WUSER),
    .m_axi_kernel_input_ARVALID(grp_load_input_S0_fu_530_m_axi_kernel_input_ARVALID),
    .m_axi_kernel_input_ARREADY(kernel_input_ARREADY),
    .m_axi_kernel_input_ARADDR(grp_load_input_S0_fu_530_m_axi_kernel_input_ARADDR),
    .m_axi_kernel_input_ARID(grp_load_input_S0_fu_530_m_axi_kernel_input_ARID),
    .m_axi_kernel_input_ARLEN(grp_load_input_S0_fu_530_m_axi_kernel_input_ARLEN),
    .m_axi_kernel_input_ARSIZE(grp_load_input_S0_fu_530_m_axi_kernel_input_ARSIZE),
    .m_axi_kernel_input_ARBURST(grp_load_input_S0_fu_530_m_axi_kernel_input_ARBURST),
    .m_axi_kernel_input_ARLOCK(grp_load_input_S0_fu_530_m_axi_kernel_input_ARLOCK),
    .m_axi_kernel_input_ARCACHE(grp_load_input_S0_fu_530_m_axi_kernel_input_ARCACHE),
    .m_axi_kernel_input_ARPROT(grp_load_input_S0_fu_530_m_axi_kernel_input_ARPROT),
    .m_axi_kernel_input_ARQOS(grp_load_input_S0_fu_530_m_axi_kernel_input_ARQOS),
    .m_axi_kernel_input_ARREGION(grp_load_input_S0_fu_530_m_axi_kernel_input_ARREGION),
    .m_axi_kernel_input_ARUSER(grp_load_input_S0_fu_530_m_axi_kernel_input_ARUSER),
    .m_axi_kernel_input_RVALID(kernel_input_RVALID),
    .m_axi_kernel_input_RREADY(grp_load_input_S0_fu_530_m_axi_kernel_input_RREADY),
    .m_axi_kernel_input_RDATA(kernel_input_RDATA),
    .m_axi_kernel_input_RLAST(1'b0),
    .m_axi_kernel_input_RID(1'd0),
    .m_axi_kernel_input_RFIFONUM(kernel_input_RFIFONUM),
    .m_axi_kernel_input_RUSER(1'd0),
    .m_axi_kernel_input_RRESP(2'd0),
    .m_axi_kernel_input_BVALID(1'b0),
    .m_axi_kernel_input_BREADY(grp_load_input_S0_fu_530_m_axi_kernel_input_BREADY),
    .m_axi_kernel_input_BRESP(2'd0),
    .m_axi_kernel_input_BID(1'd0),
    .m_axi_kernel_input_BUSER(1'd0),
    .vinput(vinput_read_reg_1038),
    .d0(trunc_ln315_reg_1072)
);

kernel_cnn_store_output_S0 grp_store_output_S0_fu_542(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_store_output_S0_fu_542_ap_start),
    .ap_done(grp_store_output_S0_fu_542_ap_done),
    .ap_idle(grp_store_output_S0_fu_542_ap_idle),
    .ap_ready(grp_store_output_S0_fu_542_ap_ready),
    .output_0_address0(grp_store_output_S0_fu_542_output_0_address0),
    .output_0_ce0(grp_store_output_S0_fu_542_output_0_ce0),
    .output_0_q0(output_q0),
    .output_1_address0(grp_store_output_S0_fu_542_output_1_address0),
    .output_1_ce0(grp_store_output_S0_fu_542_output_1_ce0),
    .output_1_q0(output_1_q0),
    .output_2_address0(grp_store_output_S0_fu_542_output_2_address0),
    .output_2_ce0(grp_store_output_S0_fu_542_output_2_ce0),
    .output_2_q0(output_2_q0),
    .output_3_address0(grp_store_output_S0_fu_542_output_3_address0),
    .output_3_ce0(grp_store_output_S0_fu_542_output_3_ce0),
    .output_3_q0(output_3_q0),
    .output_4_address0(grp_store_output_S0_fu_542_output_4_address0),
    .output_4_ce0(grp_store_output_S0_fu_542_output_4_ce0),
    .output_4_q0(output_4_q0),
    .output_5_address0(grp_store_output_S0_fu_542_output_5_address0),
    .output_5_ce0(grp_store_output_S0_fu_542_output_5_ce0),
    .output_5_q0(output_5_q0),
    .output_6_address0(grp_store_output_S0_fu_542_output_6_address0),
    .output_6_ce0(grp_store_output_S0_fu_542_output_6_ce0),
    .output_6_q0(output_6_q0),
    .output_7_address0(grp_store_output_S0_fu_542_output_7_address0),
    .output_7_ce0(grp_store_output_S0_fu_542_output_7_ce0),
    .output_7_q0(output_7_q0),
    .output_8_address0(grp_store_output_S0_fu_542_output_8_address0),
    .output_8_ce0(grp_store_output_S0_fu_542_output_8_ce0),
    .output_8_q0(output_8_q0),
    .output_9_address0(grp_store_output_S0_fu_542_output_9_address0),
    .output_9_ce0(grp_store_output_S0_fu_542_output_9_ce0),
    .output_9_q0(output_9_q0),
    .output_10_address0(grp_store_output_S0_fu_542_output_10_address0),
    .output_10_ce0(grp_store_output_S0_fu_542_output_10_ce0),
    .output_10_q0(output_10_q0),
    .output_11_address0(grp_store_output_S0_fu_542_output_11_address0),
    .output_11_ce0(grp_store_output_S0_fu_542_output_11_ce0),
    .output_11_q0(output_11_q0),
    .output_12_address0(grp_store_output_S0_fu_542_output_12_address0),
    .output_12_ce0(grp_store_output_S0_fu_542_output_12_ce0),
    .output_12_q0(output_12_q0),
    .output_13_address0(grp_store_output_S0_fu_542_output_13_address0),
    .output_13_ce0(grp_store_output_S0_fu_542_output_13_ce0),
    .output_13_q0(output_13_q0),
    .output_14_address0(grp_store_output_S0_fu_542_output_14_address0),
    .output_14_ce0(grp_store_output_S0_fu_542_output_14_ce0),
    .output_14_q0(output_14_q0),
    .output_15_address0(grp_store_output_S0_fu_542_output_15_address0),
    .output_15_ce0(grp_store_output_S0_fu_542_output_15_ce0),
    .output_15_q0(output_15_q0),
    .m_axi_kernel_output_AWVALID(grp_store_output_S0_fu_542_m_axi_kernel_output_AWVALID),
    .m_axi_kernel_output_AWREADY(kernel_output_AWREADY),
    .m_axi_kernel_output_AWADDR(grp_store_output_S0_fu_542_m_axi_kernel_output_AWADDR),
    .m_axi_kernel_output_AWID(grp_store_output_S0_fu_542_m_axi_kernel_output_AWID),
    .m_axi_kernel_output_AWLEN(grp_store_output_S0_fu_542_m_axi_kernel_output_AWLEN),
    .m_axi_kernel_output_AWSIZE(grp_store_output_S0_fu_542_m_axi_kernel_output_AWSIZE),
    .m_axi_kernel_output_AWBURST(grp_store_output_S0_fu_542_m_axi_kernel_output_AWBURST),
    .m_axi_kernel_output_AWLOCK(grp_store_output_S0_fu_542_m_axi_kernel_output_AWLOCK),
    .m_axi_kernel_output_AWCACHE(grp_store_output_S0_fu_542_m_axi_kernel_output_AWCACHE),
    .m_axi_kernel_output_AWPROT(grp_store_output_S0_fu_542_m_axi_kernel_output_AWPROT),
    .m_axi_kernel_output_AWQOS(grp_store_output_S0_fu_542_m_axi_kernel_output_AWQOS),
    .m_axi_kernel_output_AWREGION(grp_store_output_S0_fu_542_m_axi_kernel_output_AWREGION),
    .m_axi_kernel_output_AWUSER(grp_store_output_S0_fu_542_m_axi_kernel_output_AWUSER),
    .m_axi_kernel_output_WVALID(grp_store_output_S0_fu_542_m_axi_kernel_output_WVALID),
    .m_axi_kernel_output_WREADY(kernel_output_WREADY),
    .m_axi_kernel_output_WDATA(grp_store_output_S0_fu_542_m_axi_kernel_output_WDATA),
    .m_axi_kernel_output_WSTRB(grp_store_output_S0_fu_542_m_axi_kernel_output_WSTRB),
    .m_axi_kernel_output_WLAST(grp_store_output_S0_fu_542_m_axi_kernel_output_WLAST),
    .m_axi_kernel_output_WID(grp_store_output_S0_fu_542_m_axi_kernel_output_WID),
    .m_axi_kernel_output_WUSER(grp_store_output_S0_fu_542_m_axi_kernel_output_WUSER),
    .m_axi_kernel_output_ARVALID(grp_store_output_S0_fu_542_m_axi_kernel_output_ARVALID),
    .m_axi_kernel_output_ARREADY(1'b0),
    .m_axi_kernel_output_ARADDR(grp_store_output_S0_fu_542_m_axi_kernel_output_ARADDR),
    .m_axi_kernel_output_ARID(grp_store_output_S0_fu_542_m_axi_kernel_output_ARID),
    .m_axi_kernel_output_ARLEN(grp_store_output_S0_fu_542_m_axi_kernel_output_ARLEN),
    .m_axi_kernel_output_ARSIZE(grp_store_output_S0_fu_542_m_axi_kernel_output_ARSIZE),
    .m_axi_kernel_output_ARBURST(grp_store_output_S0_fu_542_m_axi_kernel_output_ARBURST),
    .m_axi_kernel_output_ARLOCK(grp_store_output_S0_fu_542_m_axi_kernel_output_ARLOCK),
    .m_axi_kernel_output_ARCACHE(grp_store_output_S0_fu_542_m_axi_kernel_output_ARCACHE),
    .m_axi_kernel_output_ARPROT(grp_store_output_S0_fu_542_m_axi_kernel_output_ARPROT),
    .m_axi_kernel_output_ARQOS(grp_store_output_S0_fu_542_m_axi_kernel_output_ARQOS),
    .m_axi_kernel_output_ARREGION(grp_store_output_S0_fu_542_m_axi_kernel_output_ARREGION),
    .m_axi_kernel_output_ARUSER(grp_store_output_S0_fu_542_m_axi_kernel_output_ARUSER),
    .m_axi_kernel_output_RVALID(1'b0),
    .m_axi_kernel_output_RREADY(grp_store_output_S0_fu_542_m_axi_kernel_output_RREADY),
    .m_axi_kernel_output_RDATA(512'd0),
    .m_axi_kernel_output_RLAST(1'b0),
    .m_axi_kernel_output_RID(1'd0),
    .m_axi_kernel_output_RFIFONUM(9'd0),
    .m_axi_kernel_output_RUSER(1'd0),
    .m_axi_kernel_output_RRESP(2'd0),
    .m_axi_kernel_output_BVALID(kernel_output_BVALID),
    .m_axi_kernel_output_BREADY(grp_store_output_S0_fu_542_m_axi_kernel_output_BREADY),
    .m_axi_kernel_output_BRESP(2'd0),
    .m_axi_kernel_output_BID(1'd0),
    .m_axi_kernel_output_BUSER(1'd0),
    .voutput(voutput_read_reg_1027),
    .d0(trunc_ln293_reg_1057)
);

kernel_cnn_kernel_cnn_Pipeline_VITIS_LOOP_320_5 grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_start),
    .ap_done(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_done),
    .ap_idle(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_idle),
    .ap_ready(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_ready),
    .empty_30(empty_41_reg_1378),
    .output_r_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_r_address0),
    .output_r_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_r_ce0),
    .output_r_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_r_we0),
    .output_r_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_r_d0),
    .output_r_q0(output_q0),
    .output_1_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_1_address0),
    .output_1_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_1_ce0),
    .output_1_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_1_we0),
    .output_1_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_1_d0),
    .output_1_q0(output_1_q0),
    .output_2_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_2_address0),
    .output_2_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_2_ce0),
    .output_2_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_2_we0),
    .output_2_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_2_d0),
    .output_2_q0(output_2_q0),
    .output_3_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_3_address0),
    .output_3_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_3_ce0),
    .output_3_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_3_we0),
    .output_3_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_3_d0),
    .output_3_q0(output_3_q0),
    .output_4_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_4_address0),
    .output_4_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_4_ce0),
    .output_4_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_4_we0),
    .output_4_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_4_d0),
    .output_4_q0(output_4_q0),
    .output_5_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_5_address0),
    .output_5_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_5_ce0),
    .output_5_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_5_we0),
    .output_5_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_5_d0),
    .output_5_q0(output_5_q0),
    .output_6_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_6_address0),
    .output_6_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_6_ce0),
    .output_6_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_6_we0),
    .output_6_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_6_d0),
    .output_6_q0(output_6_q0),
    .output_7_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_7_address0),
    .output_7_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_7_ce0),
    .output_7_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_7_we0),
    .output_7_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_7_d0),
    .output_7_q0(output_7_q0),
    .output_8_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_8_address0),
    .output_8_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_8_ce0),
    .output_8_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_8_we0),
    .output_8_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_8_d0),
    .output_8_q0(output_8_q0),
    .output_9_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_9_address0),
    .output_9_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_9_ce0),
    .output_9_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_9_we0),
    .output_9_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_9_d0),
    .output_9_q0(output_9_q0),
    .output_10_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_10_address0),
    .output_10_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_10_ce0),
    .output_10_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_10_we0),
    .output_10_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_10_d0),
    .output_10_q0(output_10_q0),
    .output_11_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_11_address0),
    .output_11_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_11_ce0),
    .output_11_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_11_we0),
    .output_11_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_11_d0),
    .output_11_q0(output_11_q0),
    .output_12_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_12_address0),
    .output_12_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_12_ce0),
    .output_12_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_12_we0),
    .output_12_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_12_d0),
    .output_12_q0(output_12_q0),
    .output_13_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_13_address0),
    .output_13_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_13_ce0),
    .output_13_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_13_we0),
    .output_13_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_13_d0),
    .output_13_q0(output_13_q0),
    .output_14_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_14_address0),
    .output_14_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_14_ce0),
    .output_14_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_14_we0),
    .output_14_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_14_d0),
    .output_14_q0(output_14_q0),
    .output_15_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_15_address0),
    .output_15_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_15_ce0),
    .output_15_we0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_15_we0),
    .output_15_d0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_15_d0),
    .output_15_q0(output_15_q0),
    .h(h_reg_485),
    .input_r_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address0),
    .input_r_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce0),
    .input_r_q0(input_q0),
    .input_r_address1(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address1),
    .input_r_ce1(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce1),
    .input_r_q1(input_q1),
    .input_r_address2(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address2),
    .input_r_ce2(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce2),
    .input_r_q2(input_q2),
    .input_r_address3(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address3),
    .input_r_ce3(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce3),
    .input_r_q3(input_q3),
    .input_r_address4(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address4),
    .input_r_ce4(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce4),
    .input_r_q4(input_q4),
    .input_r_address5(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address5),
    .input_r_ce5(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce5),
    .input_r_q5(input_q5),
    .input_r_address6(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address6),
    .input_r_ce6(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce6),
    .input_r_q6(input_q6),
    .input_r_address7(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address7),
    .input_r_ce7(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce7),
    .input_r_q7(input_q7),
    .input_r_address8(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address8),
    .input_r_ce8(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce8),
    .input_r_q8(input_q8),
    .input_r_address9(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address9),
    .input_r_ce9(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce9),
    .input_r_q9(input_q9),
    .input_r_address10(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address10),
    .input_r_ce10(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce10),
    .input_r_q10(input_q10),
    .input_r_address11(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address11),
    .input_r_ce11(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce11),
    .input_r_q11(input_q11),
    .input_r_address12(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address12),
    .input_r_ce12(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce12),
    .input_r_q12(input_q12),
    .input_1_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address0),
    .input_1_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce0),
    .input_1_q0(input_1_q0),
    .input_1_address1(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address1),
    .input_1_ce1(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce1),
    .input_1_q1(input_1_q1),
    .input_1_address2(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address2),
    .input_1_ce2(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce2),
    .input_1_q2(input_1_q2),
    .input_1_address3(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address3),
    .input_1_ce3(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce3),
    .input_1_q3(input_1_q3),
    .input_1_address4(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address4),
    .input_1_ce4(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce4),
    .input_1_q4(input_1_q4),
    .input_1_address5(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address5),
    .input_1_ce5(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce5),
    .input_1_q5(input_1_q5),
    .input_1_address6(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address6),
    .input_1_ce6(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce6),
    .input_1_q6(input_1_q6),
    .input_1_address7(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address7),
    .input_1_ce7(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce7),
    .input_1_q7(input_1_q7),
    .input_1_address8(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address8),
    .input_1_ce8(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce8),
    .input_1_q8(input_1_q8),
    .input_1_address9(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address9),
    .input_1_ce9(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce9),
    .input_1_q9(input_1_q9),
    .input_1_address10(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address10),
    .input_1_ce10(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce10),
    .input_1_q10(input_1_q10),
    .input_1_address11(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address11),
    .input_1_ce11(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce11),
    .input_1_q11(input_1_q11),
    .input_1_address12(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address12),
    .input_1_ce12(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce12),
    .input_1_q12(input_1_q12),
    .input_2_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address0),
    .input_2_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce0),
    .input_2_q0(input_2_q0),
    .input_2_address1(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address1),
    .input_2_ce1(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce1),
    .input_2_q1(input_2_q1),
    .input_2_address2(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address2),
    .input_2_ce2(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce2),
    .input_2_q2(input_2_q2),
    .input_2_address3(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address3),
    .input_2_ce3(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce3),
    .input_2_q3(input_2_q3),
    .input_2_address4(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address4),
    .input_2_ce4(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce4),
    .input_2_q4(input_2_q4),
    .input_2_address5(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address5),
    .input_2_ce5(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce5),
    .input_2_q5(input_2_q5),
    .input_2_address6(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address6),
    .input_2_ce6(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce6),
    .input_2_q6(input_2_q6),
    .input_2_address7(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address7),
    .input_2_ce7(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce7),
    .input_2_q7(input_2_q7),
    .input_2_address8(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address8),
    .input_2_ce8(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce8),
    .input_2_q8(input_2_q8),
    .input_2_address9(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address9),
    .input_2_ce9(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce9),
    .input_2_q9(input_2_q9),
    .input_2_address10(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address10),
    .input_2_ce10(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce10),
    .input_2_q10(input_2_q10),
    .input_2_address11(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address11),
    .input_2_ce11(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce11),
    .input_2_q11(input_2_q11),
    .input_2_address12(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address12),
    .input_2_ce12(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce12),
    .input_2_q12(input_2_q12),
    .input_3_address0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address0),
    .input_3_ce0(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce0),
    .input_3_q0(input_3_q0),
    .input_3_address1(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address1),
    .input_3_ce1(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce1),
    .input_3_q1(input_3_q1),
    .input_3_address2(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address2),
    .input_3_ce2(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce2),
    .input_3_q2(input_3_q2),
    .input_3_address3(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address3),
    .input_3_ce3(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce3),
    .input_3_q3(input_3_q3),
    .input_3_address4(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address4),
    .input_3_ce4(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce4),
    .input_3_q4(input_3_q4),
    .input_3_address5(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address5),
    .input_3_ce5(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce5),
    .input_3_q5(input_3_q5),
    .input_3_address6(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address6),
    .input_3_ce6(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce6),
    .input_3_q6(input_3_q6),
    .input_3_address7(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address7),
    .input_3_ce7(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce7),
    .input_3_q7(input_3_q7),
    .input_3_address8(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address8),
    .input_3_ce8(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce8),
    .input_3_q8(input_3_q8),
    .input_3_address9(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address9),
    .input_3_ce9(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce9),
    .input_3_q9(input_3_q9),
    .input_3_address10(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address10),
    .input_3_ce10(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce10),
    .input_3_q10(input_3_q10),
    .input_3_address11(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address11),
    .input_3_ce11(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce11),
    .input_3_q11(input_3_q11),
    .input_3_address12(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address12),
    .input_3_ce12(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce12),
    .input_3_q12(input_3_q12),
    .weight_load(weight_load_reg_1138),
    .weight_load_1(weight_load_1_reg_1153),
    .weight_load_2(weight_load_2_reg_1158),
    .weight_load_3(weight_load_3_reg_1173),
    .weight_load_4(weight_load_4_reg_1178),
    .weight_load_5(weight_load_5_reg_1193),
    .weight_load_6(weight_load_6_reg_1198),
    .weight_load_7(weight_load_7_reg_1213),
    .weight_load_8(weight_load_8_reg_1218),
    .weight_load_9(weight_load_9_reg_1233),
    .empty(trunc_ln318_reg_1383),
    .weight_load_10(weight_load_10_reg_1238),
    .weight_load_11(weight_load_11_reg_1253),
    .weight_load_12(weight_load_12_reg_1258),
    .weight_load_13(weight_load_13_reg_1273),
    .weight_load_14(weight_load_14_reg_1278),
    .weight_load_15(weight_load_15_reg_1293),
    .weight_load_16(weight_load_16_reg_1298),
    .weight_load_17(weight_load_17_reg_1313),
    .weight_load_18(weight_load_18_reg_1318),
    .weight_load_19(weight_load_19_reg_1333),
    .weight_load_20(weight_load_20_reg_1338),
    .weight_load_21(weight_load_21_reg_1353),
    .weight_load_22(weight_load_22_reg_1358),
    .weight_load_23(weight_load_23_reg_1368),
    .weight_load_24(weight_load_24_reg_1373),
    .p_phi_out(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_p_phi_out),
    .p_phi_out_ap_vld(grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_p_phi_out_ap_vld)
);

kernel_cnn_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .vinput(vinput),
    .vweight(vweight),
    .voutput(voutput),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

kernel_cnn_kernel_input_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 70 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_KERNEL_INPUT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_KERNEL_INPUT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_KERNEL_INPUT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_KERNEL_INPUT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_KERNEL_INPUT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_KERNEL_INPUT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_KERNEL_INPUT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_KERNEL_INPUT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_KERNEL_INPUT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_KERNEL_INPUT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_KERNEL_INPUT_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 128 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
kernel_input_m_axi_U(
    .AWVALID(m_axi_kernel_input_AWVALID),
    .AWREADY(m_axi_kernel_input_AWREADY),
    .AWADDR(m_axi_kernel_input_AWADDR),
    .AWID(m_axi_kernel_input_AWID),
    .AWLEN(m_axi_kernel_input_AWLEN),
    .AWSIZE(m_axi_kernel_input_AWSIZE),
    .AWBURST(m_axi_kernel_input_AWBURST),
    .AWLOCK(m_axi_kernel_input_AWLOCK),
    .AWCACHE(m_axi_kernel_input_AWCACHE),
    .AWPROT(m_axi_kernel_input_AWPROT),
    .AWQOS(m_axi_kernel_input_AWQOS),
    .AWREGION(m_axi_kernel_input_AWREGION),
    .AWUSER(m_axi_kernel_input_AWUSER),
    .WVALID(m_axi_kernel_input_WVALID),
    .WREADY(m_axi_kernel_input_WREADY),
    .WDATA(m_axi_kernel_input_WDATA),
    .WSTRB(m_axi_kernel_input_WSTRB),
    .WLAST(m_axi_kernel_input_WLAST),
    .WID(m_axi_kernel_input_WID),
    .WUSER(m_axi_kernel_input_WUSER),
    .ARVALID(m_axi_kernel_input_ARVALID),
    .ARREADY(m_axi_kernel_input_ARREADY),
    .ARADDR(m_axi_kernel_input_ARADDR),
    .ARID(m_axi_kernel_input_ARID),
    .ARLEN(m_axi_kernel_input_ARLEN),
    .ARSIZE(m_axi_kernel_input_ARSIZE),
    .ARBURST(m_axi_kernel_input_ARBURST),
    .ARLOCK(m_axi_kernel_input_ARLOCK),
    .ARCACHE(m_axi_kernel_input_ARCACHE),
    .ARPROT(m_axi_kernel_input_ARPROT),
    .ARQOS(m_axi_kernel_input_ARQOS),
    .ARREGION(m_axi_kernel_input_ARREGION),
    .ARUSER(m_axi_kernel_input_ARUSER),
    .RVALID(m_axi_kernel_input_RVALID),
    .RREADY(m_axi_kernel_input_RREADY),
    .RDATA(m_axi_kernel_input_RDATA),
    .RLAST(m_axi_kernel_input_RLAST),
    .RID(m_axi_kernel_input_RID),
    .RUSER(m_axi_kernel_input_RUSER),
    .RRESP(m_axi_kernel_input_RRESP),
    .BVALID(m_axi_kernel_input_BVALID),
    .BREADY(m_axi_kernel_input_BREADY),
    .BRESP(m_axi_kernel_input_BRESP),
    .BID(m_axi_kernel_input_BID),
    .BUSER(m_axi_kernel_input_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(kernel_input_ARVALID),
    .I_ARREADY(kernel_input_ARREADY),
    .I_ARADDR(grp_load_input_S0_fu_530_m_axi_kernel_input_ARADDR),
    .I_ARLEN(grp_load_input_S0_fu_530_m_axi_kernel_input_ARLEN),
    .I_RVALID(kernel_input_RVALID),
    .I_RREADY(kernel_input_RREADY),
    .I_RDATA(kernel_input_RDATA),
    .I_RFIFONUM(kernel_input_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(kernel_input_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(kernel_input_WREADY),
    .I_WDATA(128'd0),
    .I_WSTRB(16'd0),
    .I_BVALID(kernel_input_BVALID),
    .I_BREADY(1'b0)
);

kernel_cnn_kernel_output_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 70 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_KERNEL_OUTPUT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_KERNEL_OUTPUT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_KERNEL_OUTPUT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_KERNEL_OUTPUT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_KERNEL_OUTPUT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_KERNEL_OUTPUT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_KERNEL_OUTPUT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_KERNEL_OUTPUT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_KERNEL_OUTPUT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_KERNEL_OUTPUT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_KERNEL_OUTPUT_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
kernel_output_m_axi_U(
    .AWVALID(m_axi_kernel_output_AWVALID),
    .AWREADY(m_axi_kernel_output_AWREADY),
    .AWADDR(m_axi_kernel_output_AWADDR),
    .AWID(m_axi_kernel_output_AWID),
    .AWLEN(m_axi_kernel_output_AWLEN),
    .AWSIZE(m_axi_kernel_output_AWSIZE),
    .AWBURST(m_axi_kernel_output_AWBURST),
    .AWLOCK(m_axi_kernel_output_AWLOCK),
    .AWCACHE(m_axi_kernel_output_AWCACHE),
    .AWPROT(m_axi_kernel_output_AWPROT),
    .AWQOS(m_axi_kernel_output_AWQOS),
    .AWREGION(m_axi_kernel_output_AWREGION),
    .AWUSER(m_axi_kernel_output_AWUSER),
    .WVALID(m_axi_kernel_output_WVALID),
    .WREADY(m_axi_kernel_output_WREADY),
    .WDATA(m_axi_kernel_output_WDATA),
    .WSTRB(m_axi_kernel_output_WSTRB),
    .WLAST(m_axi_kernel_output_WLAST),
    .WID(m_axi_kernel_output_WID),
    .WUSER(m_axi_kernel_output_WUSER),
    .ARVALID(m_axi_kernel_output_ARVALID),
    .ARREADY(m_axi_kernel_output_ARREADY),
    .ARADDR(m_axi_kernel_output_ARADDR),
    .ARID(m_axi_kernel_output_ARID),
    .ARLEN(m_axi_kernel_output_ARLEN),
    .ARSIZE(m_axi_kernel_output_ARSIZE),
    .ARBURST(m_axi_kernel_output_ARBURST),
    .ARLOCK(m_axi_kernel_output_ARLOCK),
    .ARCACHE(m_axi_kernel_output_ARCACHE),
    .ARPROT(m_axi_kernel_output_ARPROT),
    .ARQOS(m_axi_kernel_output_ARQOS),
    .ARREGION(m_axi_kernel_output_ARREGION),
    .ARUSER(m_axi_kernel_output_ARUSER),
    .RVALID(m_axi_kernel_output_RVALID),
    .RREADY(m_axi_kernel_output_RREADY),
    .RDATA(m_axi_kernel_output_RDATA),
    .RLAST(m_axi_kernel_output_RLAST),
    .RID(m_axi_kernel_output_RID),
    .RUSER(m_axi_kernel_output_RUSER),
    .RRESP(m_axi_kernel_output_RRESP),
    .BVALID(m_axi_kernel_output_BVALID),
    .BREADY(m_axi_kernel_output_BREADY),
    .BRESP(m_axi_kernel_output_BRESP),
    .BID(m_axi_kernel_output_BID),
    .BUSER(m_axi_kernel_output_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(kernel_output_ARVALID),
    .I_ARREADY(kernel_output_ARREADY),
    .I_ARADDR(grp_load_output_S0_fu_506_m_axi_kernel_output_ARADDR),
    .I_ARLEN(grp_load_output_S0_fu_506_m_axi_kernel_output_ARLEN),
    .I_RVALID(kernel_output_RVALID),
    .I_RREADY(kernel_output_RREADY),
    .I_RDATA(kernel_output_RDATA),
    .I_RFIFONUM(kernel_output_RFIFONUM),
    .I_AWVALID(kernel_output_AWVALID),
    .I_AWREADY(kernel_output_AWREADY),
    .I_AWADDR(grp_store_output_S0_fu_542_m_axi_kernel_output_AWADDR),
    .I_AWLEN(grp_store_output_S0_fu_542_m_axi_kernel_output_AWLEN),
    .I_WVALID(kernel_output_WVALID),
    .I_WREADY(kernel_output_WREADY),
    .I_WDATA(grp_store_output_S0_fu_542_m_axi_kernel_output_WDATA),
    .I_WSTRB(grp_store_output_S0_fu_542_m_axi_kernel_output_WSTRB),
    .I_BVALID(kernel_output_BVALID),
    .I_BREADY(kernel_output_BREADY)
);

kernel_cnn_kernel_weight_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 70 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_KERNEL_WEIGHT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_KERNEL_WEIGHT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_KERNEL_WEIGHT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_KERNEL_WEIGHT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_KERNEL_WEIGHT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_KERNEL_WEIGHT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_KERNEL_WEIGHT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_KERNEL_WEIGHT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_KERNEL_WEIGHT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_KERNEL_WEIGHT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_KERNEL_WEIGHT_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
kernel_weight_m_axi_U(
    .AWVALID(m_axi_kernel_weight_AWVALID),
    .AWREADY(m_axi_kernel_weight_AWREADY),
    .AWADDR(m_axi_kernel_weight_AWADDR),
    .AWID(m_axi_kernel_weight_AWID),
    .AWLEN(m_axi_kernel_weight_AWLEN),
    .AWSIZE(m_axi_kernel_weight_AWSIZE),
    .AWBURST(m_axi_kernel_weight_AWBURST),
    .AWLOCK(m_axi_kernel_weight_AWLOCK),
    .AWCACHE(m_axi_kernel_weight_AWCACHE),
    .AWPROT(m_axi_kernel_weight_AWPROT),
    .AWQOS(m_axi_kernel_weight_AWQOS),
    .AWREGION(m_axi_kernel_weight_AWREGION),
    .AWUSER(m_axi_kernel_weight_AWUSER),
    .WVALID(m_axi_kernel_weight_WVALID),
    .WREADY(m_axi_kernel_weight_WREADY),
    .WDATA(m_axi_kernel_weight_WDATA),
    .WSTRB(m_axi_kernel_weight_WSTRB),
    .WLAST(m_axi_kernel_weight_WLAST),
    .WID(m_axi_kernel_weight_WID),
    .WUSER(m_axi_kernel_weight_WUSER),
    .ARVALID(m_axi_kernel_weight_ARVALID),
    .ARREADY(m_axi_kernel_weight_ARREADY),
    .ARADDR(m_axi_kernel_weight_ARADDR),
    .ARID(m_axi_kernel_weight_ARID),
    .ARLEN(m_axi_kernel_weight_ARLEN),
    .ARSIZE(m_axi_kernel_weight_ARSIZE),
    .ARBURST(m_axi_kernel_weight_ARBURST),
    .ARLOCK(m_axi_kernel_weight_ARLOCK),
    .ARCACHE(m_axi_kernel_weight_ARCACHE),
    .ARPROT(m_axi_kernel_weight_ARPROT),
    .ARQOS(m_axi_kernel_weight_ARQOS),
    .ARREGION(m_axi_kernel_weight_ARREGION),
    .ARUSER(m_axi_kernel_weight_ARUSER),
    .RVALID(m_axi_kernel_weight_RVALID),
    .RREADY(m_axi_kernel_weight_RREADY),
    .RDATA(m_axi_kernel_weight_RDATA),
    .RLAST(m_axi_kernel_weight_RLAST),
    .RID(m_axi_kernel_weight_RID),
    .RUSER(m_axi_kernel_weight_RUSER),
    .RRESP(m_axi_kernel_weight_RRESP),
    .BVALID(m_axi_kernel_weight_BVALID),
    .BREADY(m_axi_kernel_weight_BREADY),
    .BRESP(m_axi_kernel_weight_BRESP),
    .BID(m_axi_kernel_weight_BID),
    .BUSER(m_axi_kernel_weight_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(kernel_weight_ARVALID),
    .I_ARREADY(kernel_weight_ARREADY),
    .I_ARADDR(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARADDR),
    .I_ARLEN(grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARLEN),
    .I_RVALID(kernel_weight_RVALID),
    .I_RREADY(kernel_weight_RREADY),
    .I_RDATA(kernel_weight_RDATA),
    .I_RFIFONUM(kernel_weight_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(kernel_weight_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(kernel_weight_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(kernel_weight_BVALID),
    .I_BREADY(1'b0)
);

kernel_cnn_am_addmul_13ns_9ns_5ns_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 19 ))
am_addmul_13ns_9ns_5ns_19_4_1_U213(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1011_p0),
    .din1(grp_fu_1011_p1),
    .din2(grp_fu_1011_p2),
    .ce(1'b1),
    .dout(grp_fu_1011_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln293_fu_628_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_start_reg <= 1'b1;
        end else if ((grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_ready == 1'b1)) begin
            grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_load_input_S0_fu_530_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln308_fu_646_p2 == 1'd0))) begin
            grp_load_input_S0_fu_530_ap_start_reg <= 1'b1;
        end else if ((grp_load_input_S0_fu_530_ap_ready == 1'b1)) begin
            grp_load_input_S0_fu_530_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_load_output_S0_fu_506_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln293_fu_628_p2 == 1'd0))) begin
            grp_load_output_S0_fu_506_ap_start_reg <= 1'b1;
        end else if ((grp_load_output_S0_fu_506_ap_ready == 1'b1)) begin
            grp_load_output_S0_fu_506_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_load_weight_S0_fu_497_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln293_fu_628_p2 == 1'd0))) begin
            grp_load_weight_S0_fu_497_ap_start_reg <= 1'b1;
        end else if ((grp_load_weight_S0_fu_497_ap_ready == 1'b1)) begin
            grp_load_weight_S0_fu_497_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_store_output_S0_fu_542_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln308_fu_646_p2 == 1'd1))) begin
            grp_store_output_S0_fu_542_ap_start_reg <= 1'b1;
        end else if ((grp_store_output_S0_fu_542_ap_ready == 1'b1)) begin
            grp_store_output_S0_fu_542_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        h_reg_485 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln318_fu_1005_p2 == 1'd0))) begin
        h_reg_485 <= grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_p_phi_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        i0_fu_168 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln308_fu_646_p2 == 1'd1))) begin
        i0_fu_168 <= i0_2_reg_1052;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load_input_S0_fu_530_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        i1_reg_474 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln318_fu_1005_p2 == 1'd1))) begin
        i1_reg_474 <= add_ln317_reg_1085;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        j_reg_462 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln317_fu_671_p2 == 1'd1))) begin
        j_reg_462 <= add_ln308_reg_1067;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln308_reg_1067 <= add_ln308_fu_652_p2;
        trunc_ln315_reg_1072 <= trunc_ln315_fu_658_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln317_reg_1085 <= add_ln317_fu_677_p2;
        empty_reg_1090[13 : 5] <= empty_fu_707_p2[13 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        empty_41_reg_1378[15 : 1] <= empty_41_fu_992_p2[15 : 1];
        trunc_ln318_reg_1383 <= trunc_ln318_fu_998_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i0_2_reg_1052 <= i0_2_fu_634_p2;
        trunc_ln293_reg_1057 <= trunc_ln293_fu_640_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        sext_ln331_reg_1363[14 : 5] <= sext_ln331_fu_960_p1[14 : 5];
        weight_load_23_reg_1368 <= weight_q0;
        weight_load_24_reg_1373 <= weight_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        trunc_ln331_reg_1095 <= trunc_ln331_fu_717_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        vinput_read_reg_1038 <= vinput;
        voutput_read_reg_1027 <= voutput;
        vweight_read_reg_1033 <= vweight;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_load_10_reg_1238 <= weight_q1;
        weight_load_9_reg_1233 <= weight_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_load_11_reg_1253 <= weight_q0;
        weight_load_12_reg_1258 <= weight_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_load_13_reg_1273 <= weight_q0;
        weight_load_14_reg_1278 <= weight_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_load_15_reg_1293 <= weight_q0;
        weight_load_16_reg_1298 <= weight_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_load_17_reg_1313 <= weight_q0;
        weight_load_18_reg_1318 <= weight_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        weight_load_19_reg_1333 <= weight_q0;
        weight_load_20_reg_1338 <= weight_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_load_1_reg_1153 <= weight_q1;
        weight_load_2_reg_1158 <= weight_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weight_load_21_reg_1353 <= weight_q0;
        weight_load_22_reg_1358 <= weight_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_load_3_reg_1173 <= weight_q0;
        weight_load_4_reg_1178 <= weight_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_load_5_reg_1193 <= weight_q0;
        weight_load_6_reg_1198 <= weight_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_load_7_reg_1213 <= weight_q0;
        weight_load_8_reg_1218 <= weight_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_load_reg_1138 <= weight_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load_input_S0_fu_530_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        zext_ln308_reg_1077[8 : 0] <= zext_ln308_fu_667_p1[8 : 0];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

always @ (*) begin
    if ((grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_done == 1'b0)) begin
        ap_ST_fsm_state25_blk = 1'b1;
    end else begin
        ap_ST_fsm_state25_blk = 1'b0;
    end
end

assign ap_ST_fsm_state26_blk = 1'b0;

always @ (*) begin
    if ((grp_store_output_S0_fu_542_ap_done == 1'b0)) begin
        ap_ST_fsm_state27_blk = 1'b1;
    end else begin
        ap_ST_fsm_state27_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state3_on_subcall_done)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_load_input_S0_fu_530_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln293_fu_628_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln293_fu_628_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_1_address0 = grp_load_input_S0_fu_530_input_1_address0;
    end else begin
        input_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_1_ce0 = grp_load_input_S0_fu_530_input_1_ce0;
    end else begin
        input_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce1 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce1;
    end else begin
        input_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce10 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce10;
    end else begin
        input_1_ce10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce11 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce11;
    end else begin
        input_1_ce11 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce12 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce12;
    end else begin
        input_1_ce12 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce2 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce2;
    end else begin
        input_1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce3 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce3;
    end else begin
        input_1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce4 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce4;
    end else begin
        input_1_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce5 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce5;
    end else begin
        input_1_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce6 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce6;
    end else begin
        input_1_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce7 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce7;
    end else begin
        input_1_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce8 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce8;
    end else begin
        input_1_ce8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_1_ce9 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_1_ce9;
    end else begin
        input_1_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        input_1_we0 = grp_load_input_S0_fu_530_input_1_we0;
    end else begin
        input_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_2_address0 = grp_load_input_S0_fu_530_input_2_address0;
    end else begin
        input_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_2_ce0 = grp_load_input_S0_fu_530_input_2_ce0;
    end else begin
        input_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce1 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce1;
    end else begin
        input_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce10 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce10;
    end else begin
        input_2_ce10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce11 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce11;
    end else begin
        input_2_ce11 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce12 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce12;
    end else begin
        input_2_ce12 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce2 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce2;
    end else begin
        input_2_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce3 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce3;
    end else begin
        input_2_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce4 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce4;
    end else begin
        input_2_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce5 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce5;
    end else begin
        input_2_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce6 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce6;
    end else begin
        input_2_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce7 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce7;
    end else begin
        input_2_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce8 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce8;
    end else begin
        input_2_ce8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_2_ce9 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_2_ce9;
    end else begin
        input_2_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        input_2_we0 = grp_load_input_S0_fu_530_input_2_we0;
    end else begin
        input_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_3_address0 = grp_load_input_S0_fu_530_input_3_address0;
    end else begin
        input_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_3_ce0 = grp_load_input_S0_fu_530_input_3_ce0;
    end else begin
        input_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce1 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce1;
    end else begin
        input_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce10 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce10;
    end else begin
        input_3_ce10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce11 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce11;
    end else begin
        input_3_ce11 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce12 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce12;
    end else begin
        input_3_ce12 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce2 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce2;
    end else begin
        input_3_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce3 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce3;
    end else begin
        input_3_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce4 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce4;
    end else begin
        input_3_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce5 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce5;
    end else begin
        input_3_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce6 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce6;
    end else begin
        input_3_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce7 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce7;
    end else begin
        input_3_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce8 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce8;
    end else begin
        input_3_ce8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_3_ce9 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_3_ce9;
    end else begin
        input_3_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        input_3_we0 = grp_load_input_S0_fu_530_input_3_we0;
    end else begin
        input_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_address0 = grp_load_input_S0_fu_530_input_0_address0;
    end else begin
        input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_ce0 = grp_load_input_S0_fu_530_input_0_ce0;
    end else begin
        input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce1 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce1;
    end else begin
        input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce10 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce10;
    end else begin
        input_ce10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce11 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce11;
    end else begin
        input_ce11 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce12 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce12;
    end else begin
        input_ce12 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce2 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce2;
    end else begin
        input_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce3 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce3;
    end else begin
        input_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce4 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce4;
    end else begin
        input_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce5 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce5;
    end else begin
        input_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce6 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce6;
    end else begin
        input_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce7 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce7;
    end else begin
        input_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce8 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce8;
    end else begin
        input_ce8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_ce9 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_input_r_ce9;
    end else begin
        input_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        input_we0 = grp_load_input_S0_fu_530_input_0_we0;
    end else begin
        input_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln308_fu_646_p2 == 1'd0)))) begin
        kernel_input_ARVALID = grp_load_input_S0_fu_530_m_axi_kernel_input_ARVALID;
    end else begin
        kernel_input_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln308_fu_646_p2 == 1'd0)))) begin
        kernel_input_RREADY = grp_load_input_S0_fu_530_m_axi_kernel_input_RREADY;
    end else begin
        kernel_input_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln293_fu_628_p2 == 1'd0)))) begin
        kernel_output_ARVALID = grp_load_output_S0_fu_506_m_axi_kernel_output_ARVALID;
    end else begin
        kernel_output_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln308_fu_646_p2 == 1'd1)))) begin
        kernel_output_AWVALID = grp_store_output_S0_fu_542_m_axi_kernel_output_AWVALID;
    end else begin
        kernel_output_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln308_fu_646_p2 == 1'd1)))) begin
        kernel_output_BREADY = grp_store_output_S0_fu_542_m_axi_kernel_output_BREADY;
    end else begin
        kernel_output_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln293_fu_628_p2 == 1'd0)))) begin
        kernel_output_RREADY = grp_load_output_S0_fu_506_m_axi_kernel_output_RREADY;
    end else begin
        kernel_output_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln308_fu_646_p2 == 1'd1)))) begin
        kernel_output_WVALID = grp_store_output_S0_fu_542_m_axi_kernel_output_WVALID;
    end else begin
        kernel_output_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln293_fu_628_p2 == 1'd0)))) begin
        kernel_weight_ARVALID = grp_load_weight_S0_fu_497_m_axi_kernel_weight_ARVALID;
    end else begin
        kernel_weight_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln293_fu_628_p2 == 1'd0)))) begin
        kernel_weight_RREADY = grp_load_weight_S0_fu_497_m_axi_kernel_weight_RREADY;
    end else begin
        kernel_weight_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_10_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_10_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_10_address0 = grp_store_output_S0_fu_542_output_10_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_10_address0 = grp_load_output_S0_fu_506_output_10_address0;
    end else begin
        output_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_10_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_10_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_10_ce0 = grp_store_output_S0_fu_542_output_10_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_10_ce0 = grp_load_output_S0_fu_506_output_10_ce0;
    end else begin
        output_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_10_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_10_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_10_d0 = grp_load_output_S0_fu_506_output_10_d0;
    end else begin
        output_10_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_10_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_10_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_10_we0 = grp_load_output_S0_fu_506_output_10_we0;
    end else begin
        output_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_11_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_11_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_11_address0 = grp_store_output_S0_fu_542_output_11_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_11_address0 = grp_load_output_S0_fu_506_output_11_address0;
    end else begin
        output_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_11_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_11_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_11_ce0 = grp_store_output_S0_fu_542_output_11_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_11_ce0 = grp_load_output_S0_fu_506_output_11_ce0;
    end else begin
        output_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_11_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_11_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_11_d0 = grp_load_output_S0_fu_506_output_11_d0;
    end else begin
        output_11_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_11_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_11_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_11_we0 = grp_load_output_S0_fu_506_output_11_we0;
    end else begin
        output_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_12_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_12_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_12_address0 = grp_store_output_S0_fu_542_output_12_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_12_address0 = grp_load_output_S0_fu_506_output_12_address0;
    end else begin
        output_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_12_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_12_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_12_ce0 = grp_store_output_S0_fu_542_output_12_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_12_ce0 = grp_load_output_S0_fu_506_output_12_ce0;
    end else begin
        output_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_12_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_12_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_12_d0 = grp_load_output_S0_fu_506_output_12_d0;
    end else begin
        output_12_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_12_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_12_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_12_we0 = grp_load_output_S0_fu_506_output_12_we0;
    end else begin
        output_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_13_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_13_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_13_address0 = grp_store_output_S0_fu_542_output_13_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_13_address0 = grp_load_output_S0_fu_506_output_13_address0;
    end else begin
        output_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_13_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_13_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_13_ce0 = grp_store_output_S0_fu_542_output_13_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_13_ce0 = grp_load_output_S0_fu_506_output_13_ce0;
    end else begin
        output_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_13_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_13_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_13_d0 = grp_load_output_S0_fu_506_output_13_d0;
    end else begin
        output_13_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_13_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_13_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_13_we0 = grp_load_output_S0_fu_506_output_13_we0;
    end else begin
        output_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_14_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_14_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_14_address0 = grp_store_output_S0_fu_542_output_14_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_14_address0 = grp_load_output_S0_fu_506_output_14_address0;
    end else begin
        output_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_14_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_14_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_14_ce0 = grp_store_output_S0_fu_542_output_14_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_14_ce0 = grp_load_output_S0_fu_506_output_14_ce0;
    end else begin
        output_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_14_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_14_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_14_d0 = grp_load_output_S0_fu_506_output_14_d0;
    end else begin
        output_14_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_14_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_14_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_14_we0 = grp_load_output_S0_fu_506_output_14_we0;
    end else begin
        output_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_15_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_15_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_15_address0 = grp_store_output_S0_fu_542_output_15_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_15_address0 = grp_load_output_S0_fu_506_output_15_address0;
    end else begin
        output_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_15_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_15_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_15_ce0 = grp_store_output_S0_fu_542_output_15_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_15_ce0 = grp_load_output_S0_fu_506_output_15_ce0;
    end else begin
        output_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_15_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_15_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_15_d0 = grp_load_output_S0_fu_506_output_15_d0;
    end else begin
        output_15_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_15_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_15_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_15_we0 = grp_load_output_S0_fu_506_output_15_we0;
    end else begin
        output_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_1_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_1_address0 = grp_store_output_S0_fu_542_output_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_1_address0 = grp_load_output_S0_fu_506_output_1_address0;
    end else begin
        output_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_1_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_1_ce0 = grp_store_output_S0_fu_542_output_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_1_ce0 = grp_load_output_S0_fu_506_output_1_ce0;
    end else begin
        output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_1_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_1_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_1_d0 = grp_load_output_S0_fu_506_output_1_d0;
    end else begin
        output_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_1_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_1_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_1_we0 = grp_load_output_S0_fu_506_output_1_we0;
    end else begin
        output_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_2_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_2_address0 = grp_store_output_S0_fu_542_output_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_2_address0 = grp_load_output_S0_fu_506_output_2_address0;
    end else begin
        output_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_2_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_2_ce0 = grp_store_output_S0_fu_542_output_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_2_ce0 = grp_load_output_S0_fu_506_output_2_ce0;
    end else begin
        output_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_2_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_2_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_2_d0 = grp_load_output_S0_fu_506_output_2_d0;
    end else begin
        output_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_2_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_2_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_2_we0 = grp_load_output_S0_fu_506_output_2_we0;
    end else begin
        output_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_3_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_3_address0 = grp_store_output_S0_fu_542_output_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_3_address0 = grp_load_output_S0_fu_506_output_3_address0;
    end else begin
        output_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_3_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_3_ce0 = grp_store_output_S0_fu_542_output_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_3_ce0 = grp_load_output_S0_fu_506_output_3_ce0;
    end else begin
        output_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_3_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_3_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_3_d0 = grp_load_output_S0_fu_506_output_3_d0;
    end else begin
        output_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_3_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_3_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_3_we0 = grp_load_output_S0_fu_506_output_3_we0;
    end else begin
        output_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_4_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_4_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_4_address0 = grp_store_output_S0_fu_542_output_4_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_4_address0 = grp_load_output_S0_fu_506_output_4_address0;
    end else begin
        output_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_4_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_4_ce0 = grp_store_output_S0_fu_542_output_4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_4_ce0 = grp_load_output_S0_fu_506_output_4_ce0;
    end else begin
        output_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_4_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_4_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_4_d0 = grp_load_output_S0_fu_506_output_4_d0;
    end else begin
        output_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_4_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_4_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_4_we0 = grp_load_output_S0_fu_506_output_4_we0;
    end else begin
        output_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_5_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_5_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_5_address0 = grp_store_output_S0_fu_542_output_5_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_5_address0 = grp_load_output_S0_fu_506_output_5_address0;
    end else begin
        output_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_5_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_5_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_5_ce0 = grp_store_output_S0_fu_542_output_5_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_5_ce0 = grp_load_output_S0_fu_506_output_5_ce0;
    end else begin
        output_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_5_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_5_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_5_d0 = grp_load_output_S0_fu_506_output_5_d0;
    end else begin
        output_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_5_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_5_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_5_we0 = grp_load_output_S0_fu_506_output_5_we0;
    end else begin
        output_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_6_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_6_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_6_address0 = grp_store_output_S0_fu_542_output_6_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_6_address0 = grp_load_output_S0_fu_506_output_6_address0;
    end else begin
        output_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_6_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_6_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_6_ce0 = grp_store_output_S0_fu_542_output_6_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_6_ce0 = grp_load_output_S0_fu_506_output_6_ce0;
    end else begin
        output_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_6_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_6_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_6_d0 = grp_load_output_S0_fu_506_output_6_d0;
    end else begin
        output_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_6_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_6_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_6_we0 = grp_load_output_S0_fu_506_output_6_we0;
    end else begin
        output_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_7_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_7_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_7_address0 = grp_store_output_S0_fu_542_output_7_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_7_address0 = grp_load_output_S0_fu_506_output_7_address0;
    end else begin
        output_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_7_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_7_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_7_ce0 = grp_store_output_S0_fu_542_output_7_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_7_ce0 = grp_load_output_S0_fu_506_output_7_ce0;
    end else begin
        output_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_7_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_7_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_7_d0 = grp_load_output_S0_fu_506_output_7_d0;
    end else begin
        output_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_7_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_7_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_7_we0 = grp_load_output_S0_fu_506_output_7_we0;
    end else begin
        output_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_8_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_8_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_8_address0 = grp_store_output_S0_fu_542_output_8_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_8_address0 = grp_load_output_S0_fu_506_output_8_address0;
    end else begin
        output_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_8_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_8_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_8_ce0 = grp_store_output_S0_fu_542_output_8_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_8_ce0 = grp_load_output_S0_fu_506_output_8_ce0;
    end else begin
        output_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_8_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_8_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_8_d0 = grp_load_output_S0_fu_506_output_8_d0;
    end else begin
        output_8_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_8_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_8_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_8_we0 = grp_load_output_S0_fu_506_output_8_we0;
    end else begin
        output_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_9_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_9_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_9_address0 = grp_store_output_S0_fu_542_output_9_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_9_address0 = grp_load_output_S0_fu_506_output_9_address0;
    end else begin
        output_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_9_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_9_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_9_ce0 = grp_store_output_S0_fu_542_output_9_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_9_ce0 = grp_load_output_S0_fu_506_output_9_ce0;
    end else begin
        output_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_9_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_9_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_9_d0 = grp_load_output_S0_fu_506_output_9_d0;
    end else begin
        output_9_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_9_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_9_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_9_we0 = grp_load_output_S0_fu_506_output_9_we0;
    end else begin
        output_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_address0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_address0 = grp_store_output_S0_fu_542_output_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_address0 = grp_load_output_S0_fu_506_output_0_address0;
    end else begin
        output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_ce0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_ce0 = grp_store_output_S0_fu_542_output_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_ce0 = grp_load_output_S0_fu_506_output_0_ce0;
    end else begin
        output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_d0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_d0 = grp_load_output_S0_fu_506_output_0_d0;
    end else begin
        output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        output_we0 = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_output_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_we0 = grp_load_output_S0_fu_506_output_0_we0;
    end else begin
        output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weight_address0 = zext_ln331_56_fu_945_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        weight_address0 = zext_ln331_54_fu_925_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_address0 = zext_ln331_52_fu_905_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_address0 = zext_ln331_50_fu_885_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_address0 = zext_ln331_48_fu_865_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_address0 = zext_ln331_46_fu_845_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_address0 = zext_ln331_44_fu_825_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_address0 = zext_ln331_42_fu_805_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_address0 = zext_ln331_40_fu_785_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_address0 = zext_ln331_38_fu_765_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_address0 = zext_ln331_36_fu_745_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_address0 = zext_ln331_35_fu_735_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        weight_address0 = zext_ln331_33_fu_713_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        weight_address0 = grp_load_weight_S0_fu_497_weight_address0;
    end else begin
        weight_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weight_address1 = zext_ln331_57_fu_955_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        weight_address1 = zext_ln331_55_fu_935_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        weight_address1 = zext_ln331_53_fu_915_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        weight_address1 = zext_ln331_51_fu_895_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        weight_address1 = zext_ln331_49_fu_875_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_address1 = zext_ln331_47_fu_855_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        weight_address1 = zext_ln331_45_fu_835_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_address1 = zext_ln331_43_fu_815_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        weight_address1 = zext_ln331_41_fu_795_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        weight_address1 = zext_ln331_39_fu_775_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        weight_address1 = zext_ln331_37_fu_755_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        weight_address1 = zext_ln331_34_fu_725_p1;
    end else begin
        weight_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        weight_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        weight_ce0 = grp_load_weight_S0_fu_497_weight_ce0;
    end else begin
        weight_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        weight_ce1 = 1'b1;
    end else begin
        weight_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        weight_we0 = grp_load_weight_S0_fu_497_weight_we0;
    end else begin
        weight_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln293_fu_628_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln308_fu_646_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((grp_load_input_S0_fu_530_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln317_fu_671_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln318_fu_1005_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (grp_store_output_S0_fu_542_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln308_fu_652_p2 = (j_reg_462 + 9'd1);

assign add_ln317_fu_677_p2 = (i1_reg_474 + 5'd1);

assign add_ln331_10_fu_770_p2 = (trunc_ln331_reg_1095 + 17'd6);

assign add_ln331_11_fu_780_p2 = (trunc_ln331_reg_1095 + 17'd7);

assign add_ln331_12_fu_790_p2 = (trunc_ln331_reg_1095 + 17'd8);

assign add_ln331_13_fu_800_p2 = (trunc_ln331_reg_1095 + 17'd9);

assign add_ln331_14_fu_810_p2 = (trunc_ln331_reg_1095 + 17'd10);

assign add_ln331_15_fu_820_p2 = (trunc_ln331_reg_1095 + 17'd11);

assign add_ln331_16_fu_830_p2 = (trunc_ln331_reg_1095 + 17'd12);

assign add_ln331_17_fu_840_p2 = (trunc_ln331_reg_1095 + 17'd13);

assign add_ln331_18_fu_850_p2 = (trunc_ln331_reg_1095 + 17'd14);

assign add_ln331_19_fu_860_p2 = (trunc_ln331_reg_1095 + 17'd15);

assign add_ln331_20_fu_870_p2 = (trunc_ln331_reg_1095 + 17'd16);

assign add_ln331_21_fu_880_p2 = (trunc_ln331_reg_1095 + 17'd17);

assign add_ln331_22_fu_890_p2 = (trunc_ln331_reg_1095 + 17'd18);

assign add_ln331_23_fu_900_p2 = (trunc_ln331_reg_1095 + 17'd19);

assign add_ln331_24_fu_910_p2 = (trunc_ln331_reg_1095 + 17'd20);

assign add_ln331_25_fu_920_p2 = (trunc_ln331_reg_1095 + 17'd21);

assign add_ln331_26_fu_930_p2 = (trunc_ln331_reg_1095 + 17'd22);

assign add_ln331_27_fu_940_p2 = (trunc_ln331_reg_1095 + 17'd23);

assign add_ln331_28_fu_950_p2 = (trunc_ln331_reg_1095 + 17'd24);

assign add_ln331_5_fu_720_p2 = (trunc_ln331_reg_1095 + 17'd1);

assign add_ln331_6_fu_730_p2 = (trunc_ln331_reg_1095 + 17'd2);

assign add_ln331_7_fu_740_p2 = (trunc_ln331_reg_1095 + 17'd3);

assign add_ln331_8_fu_750_p2 = (trunc_ln331_reg_1095 + 17'd4);

assign add_ln331_9_fu_760_p2 = (trunc_ln331_reg_1095 + 17'd5);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state3_on_subcall_done = ((grp_load_output_S0_fu_506_ap_done == 1'b0) | (grp_load_weight_S0_fu_497_ap_done == 1'b0));
end

assign empty_38_fu_963_p1 = h_reg_485[14:0];

assign empty_39_fu_967_p2 = ($signed(sext_ln331_reg_1363) + $signed(empty_38_fu_963_p1));

assign empty_40_fu_972_p1 = empty_39_fu_967_p2[11:0];

assign empty_41_fu_992_p2 = (tmp_fu_976_p3 - tmp_27_fu_984_p3);

assign empty_fu_707_p2 = (tmp_25_cast_fu_691_p1 - tmp_26_cast_fu_703_p1);

assign grp_fu_1011_p0 = tmp_25_cast_fu_691_p1;

assign grp_fu_1011_p1 = zext_ln308_reg_1077;

assign grp_fu_1011_p2 = 19'd25;

assign grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_start = grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_ap_start_reg;

assign grp_load_input_S0_fu_530_ap_start = grp_load_input_S0_fu_530_ap_start_reg;

assign grp_load_output_S0_fu_506_ap_start = grp_load_output_S0_fu_506_ap_start_reg;

assign grp_load_weight_S0_fu_497_ap_start = grp_load_weight_S0_fu_497_ap_start_reg;

assign grp_store_output_S0_fu_542_ap_start = grp_store_output_S0_fu_542_ap_start_reg;

assign i0_2_fu_634_p2 = (i0_fu_168 + 5'd1);

assign icmp_ln293_fu_628_p2 = ((i0_fu_168 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln308_fu_646_p2 = ((j_reg_462 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_671_p2 = ((i1_reg_474 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln318_fu_1005_p2 = ((grp_kernel_cnn_Pipeline_VITIS_LOOP_320_5_fu_566_p_phi_out == 64'd224) ? 1'b1 : 1'b0);

assign sext_ln331_fu_960_p1 = $signed(empty_reg_1090);

assign tmp_25_cast_fu_691_p1 = tmp_s_fu_683_p3;

assign tmp_25_fu_695_p3 = {{i1_reg_474}, {5'd0}};

assign tmp_26_cast_fu_703_p1 = tmp_25_fu_695_p3;

assign tmp_27_fu_984_p3 = {{empty_39_fu_967_p2}, {1'd0}};

assign tmp_fu_976_p3 = {{empty_40_fu_972_p1}, {4'd0}};

assign tmp_s_fu_683_p3 = {{i1_reg_474}, {8'd0}};

assign trunc_ln293_fu_640_p1 = i0_fu_168[3:0];

assign trunc_ln315_fu_658_p1 = j_reg_462[7:0];

assign trunc_ln318_fu_998_p1 = h_reg_485[7:0];

assign trunc_ln331_fu_717_p1 = grp_fu_1011_p3[16:0];

assign zext_ln308_fu_667_p1 = j_reg_462;

assign zext_ln331_33_fu_713_p1 = grp_fu_1011_p3;

assign zext_ln331_34_fu_725_p1 = add_ln331_5_fu_720_p2;

assign zext_ln331_35_fu_735_p1 = add_ln331_6_fu_730_p2;

assign zext_ln331_36_fu_745_p1 = add_ln331_7_fu_740_p2;

assign zext_ln331_37_fu_755_p1 = add_ln331_8_fu_750_p2;

assign zext_ln331_38_fu_765_p1 = add_ln331_9_fu_760_p2;

assign zext_ln331_39_fu_775_p1 = add_ln331_10_fu_770_p2;

assign zext_ln331_40_fu_785_p1 = add_ln331_11_fu_780_p2;

assign zext_ln331_41_fu_795_p1 = add_ln331_12_fu_790_p2;

assign zext_ln331_42_fu_805_p1 = add_ln331_13_fu_800_p2;

assign zext_ln331_43_fu_815_p1 = add_ln331_14_fu_810_p2;

assign zext_ln331_44_fu_825_p1 = add_ln331_15_fu_820_p2;

assign zext_ln331_45_fu_835_p1 = add_ln331_16_fu_830_p2;

assign zext_ln331_46_fu_845_p1 = add_ln331_17_fu_840_p2;

assign zext_ln331_47_fu_855_p1 = add_ln331_18_fu_850_p2;

assign zext_ln331_48_fu_865_p1 = add_ln331_19_fu_860_p2;

assign zext_ln331_49_fu_875_p1 = add_ln331_20_fu_870_p2;

assign zext_ln331_50_fu_885_p1 = add_ln331_21_fu_880_p2;

assign zext_ln331_51_fu_895_p1 = add_ln331_22_fu_890_p2;

assign zext_ln331_52_fu_905_p1 = add_ln331_23_fu_900_p2;

assign zext_ln331_53_fu_915_p1 = add_ln331_24_fu_910_p2;

assign zext_ln331_54_fu_925_p1 = add_ln331_25_fu_920_p2;

assign zext_ln331_55_fu_935_p1 = add_ln331_26_fu_930_p2;

assign zext_ln331_56_fu_945_p1 = add_ln331_27_fu_940_p2;

assign zext_ln331_57_fu_955_p1 = add_ln331_28_fu_950_p2;

always @ (posedge ap_clk) begin
    zext_ln308_reg_1077[13:9] <= 5'b00000;
    empty_reg_1090[4:0] <= 5'b00000;
    sext_ln331_reg_1363[4:0] <= 5'b00000;
    empty_41_reg_1378[0] <= 1'b0;
end

endmodule //kernel_cnn
